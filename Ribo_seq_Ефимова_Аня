{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "machine_shape": "hm",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "gpuClass": "standard"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/anuytok/5-HW-Ribo-seq/blob/main/Ribo_seq_%D0%95%D1%84%D0%B8%D0%BC%D0%BE%D0%B2%D0%B0_%D0%90%D0%BD%D1%8F\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Задание 1. Определение дифференциальной экспрессии"
      ],
      "metadata": {
        "id": "u1mAOWaUxUMb"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Correlation"
      ],
      "metadata": {
        "id": "D0Pas7cvhdKI"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4LyySqOCSatj",
        "outputId": "822c4a2e-5383-488b-d40e-637199141862"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Downloading...\n",
            "From: https://drive.google.com/uc?id=1iqYLFVKySREVm5Kn5NagMeHaDi-dVLcj\n",
            "To: /content/HSE_RiboSeq_HT.zip\n",
            "\r  0% 0.00/4.84M [00:00<?, ?B/s]\r100% 4.84M/4.84M [00:00<00:00, 112MB/s]\n"
          ]
        }
      ],
      "source": [
        "!gdown 1iqYLFVKySREVm5Kn5NagMeHaDi-dVLcj"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!unzip HSE_RiboSeq_HT.zip"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YmCFcI-ESrtH",
        "outputId": "d66db594-9195-42d5-c5d1-9db9638682c8"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Archive:  HSE_RiboSeq_HT.zip\n",
            "   creating: HSE_RiboSeq_HT/\n",
            "  inflating: __MACOSX/._HSE_RiboSeq_HT  \n",
            "  inflating: HSE_RiboSeq_HT/02. RiboSeq_EColi_track_r.wig  \n",
            "  inflating: __MACOSX/HSE_RiboSeq_HT/._02. RiboSeq_EColi_track_r.wig  \n",
            "  inflating: HSE_RiboSeq_HT/02. RiboSeq_EColi_track_f.wig  \n",
            "  inflating: __MACOSX/HSE_RiboSeq_HT/._02. RiboSeq_EColi_track_f.wig  \n",
            "  inflating: HSE_RiboSeq_HT/01. RiboSeq_RNASeq_HCC_counts.tsv  \n",
            "  inflating: __MACOSX/HSE_RiboSeq_HT/._01. RiboSeq_RNASeq_HCC_counts.tsv  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "counts = pd.read_csv(\"HSE_RiboSeq_HT/01. RiboSeq_RNASeq_HCC_counts.tsv\", sep=\"\\t\")\n",
        "genes = list(counts[\"geneSymbol\"])\n",
        "counts = counts.fillna(value = 0)\n",
        "counts.index = counts['geneID']\n",
        "del counts[\"geneSymbol\"], counts[\"geneID\"]\n",
        "\n",
        "counts"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 554
        },
        "id": "SYuYAGx_Tb6h",
        "outputId": "b733ce44-9576-47c7-cf98-81ef3aa64393"
      },
      "execution_count": 156,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    LC001-normal-RPF  LC001-tumor-RPF  LC001-normal-RNA  \\\n",
              "geneID                                                                    \n",
              "ENSG00000000003.14                 0                0               402   \n",
              "ENSG00000000005.5                  0                0                 0   \n",
              "ENSG00000000419.12               168              239                88   \n",
              "ENSG00000000457.13                65              121                60   \n",
              "ENSG00000000460.16                 8               43                18   \n",
              "...                              ...              ...               ...   \n",
              "ENSG00000282988.1                  0                0                 1   \n",
              "ENSG00000283013.1                  0                4                27   \n",
              "ENSG00000283039.1                  0                0                 0   \n",
              "ENSG00000283063.1                  0                9                 0   \n",
              "ENSG00000283071.1                  0                4                 0   \n",
              "\n",
              "                    LC001-tumor-RNA  LC033-normal-RPF  LC033-tumor-RPF  \\\n",
              "geneID                                                                   \n",
              "ENSG00000000003.14              873                 0                0   \n",
              "ENSG00000000005.5                 1                 0                0   \n",
              "ENSG00000000419.12              187               114              439   \n",
              "ENSG00000000457.13              106                36              163   \n",
              "ENSG00000000460.16               70                16               76   \n",
              "...                             ...               ...              ...   \n",
              "ENSG00000282988.1                39                 0                0   \n",
              "ENSG00000283013.1                 5                 0               32   \n",
              "ENSG00000283039.1                 0                 0                0   \n",
              "ENSG00000283063.1                 0                 0                0   \n",
              "ENSG00000283071.1                13                 0                0   \n",
              "\n",
              "                    LC033-normal-RNA  LC033-tumor-RNA  LC034-normal-RPF  \\\n",
              "geneID                                                                    \n",
              "ENSG00000000003.14               301             1627                 0   \n",
              "ENSG00000000005.5                  0                1                 0   \n",
              "ENSG00000000419.12                66              201               325   \n",
              "ENSG00000000457.13                70              156               130   \n",
              "ENSG00000000460.16                 4               63                44   \n",
              "...                              ...              ...               ...   \n",
              "ENSG00000282988.1                  0                5                 0   \n",
              "ENSG00000283013.1                 20               51                 0   \n",
              "ENSG00000283039.1                 10                0                 0   \n",
              "ENSG00000283063.1                  0                0                 0   \n",
              "ENSG00000283071.1                  0                0                 0   \n",
              "\n",
              "                    LC034-tumor-RPF  ...  LC507-normal-RNA  LC507-tumor-RNA  \\\n",
              "geneID                               ...                                      \n",
              "ENSG00000000003.14                0  ...               218              457   \n",
              "ENSG00000000005.5                 0  ...                 0                0   \n",
              "ENSG00000000419.12              117  ...                92              170   \n",
              "ENSG00000000457.13               76  ...               127              176   \n",
              "ENSG00000000460.16               14  ...               124              437   \n",
              "...                             ...  ...               ...              ...   \n",
              "ENSG00000282988.1                 0  ...                 0               31   \n",
              "ENSG00000283013.1                 6  ...                81               52   \n",
              "ENSG00000283039.1                 0  ...                 0                0   \n",
              "ENSG00000283063.1                 7  ...                 0                0   \n",
              "ENSG00000283071.1                 0  ...                 0                0   \n",
              "\n",
              "                    LC508-normal-RPF  LC508-tumor-RPF  LC508-normal-RNA  \\\n",
              "geneID                                                                    \n",
              "ENSG00000000003.14                 0                0               200   \n",
              "ENSG00000000005.5                  1                0                 0   \n",
              "ENSG00000000419.12               109              357                60   \n",
              "ENSG00000000457.13                67              176                55   \n",
              "ENSG00000000460.16                 7              167                34   \n",
              "...                              ...              ...               ...   \n",
              "ENSG00000282988.1                  0                6                 0   \n",
              "ENSG00000283013.1                  1                0                 9   \n",
              "ENSG00000283039.1                  0                0                 0   \n",
              "ENSG00000283063.1                  0                0                 0   \n",
              "ENSG00000283071.1                  0                0                 0   \n",
              "\n",
              "                    LC508-tumor-RNA  LC509-normal-RPF  LC509-tumor-RPF  \\\n",
              "geneID                                                                   \n",
              "ENSG00000000003.14              889                 0                0   \n",
              "ENSG00000000005.5                 0                 0                0   \n",
              "ENSG00000000419.12              244               141              173   \n",
              "ENSG00000000457.13              261                64              100   \n",
              "ENSG00000000460.16              201                 6               61   \n",
              "...                             ...               ...              ...   \n",
              "ENSG00000282988.1                62                 0                0   \n",
              "ENSG00000283013.1                42                 0               10   \n",
              "ENSG00000283039.1                 0                 0                0   \n",
              "ENSG00000283063.1                 0                 0                0   \n",
              "ENSG00000283071.1                 1                 0                0   \n",
              "\n",
              "                    LC509-normal-RNA  LC509-tumor-RNA  \n",
              "geneID                                                 \n",
              "ENSG00000000003.14               161            857.0  \n",
              "ENSG00000000005.5                  0              0.0  \n",
              "ENSG00000000419.12                56             83.0  \n",
              "ENSG00000000457.13                68            176.0  \n",
              "ENSG00000000460.16                 9             58.0  \n",
              "...                              ...              ...  \n",
              "ENSG00000282988.1                  1             17.0  \n",
              "ENSG00000283013.1                  3             40.0  \n",
              "ENSG00000283039.1                  0              0.0  \n",
              "ENSG00000283063.1                  0              0.0  \n",
              "ENSG00000283071.1                  1              2.0  \n",
              "\n",
              "[18945 rows x 40 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-db1a9731-ac79-4e02-a621-910bfeadf428\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>LC001-normal-RPF</th>\n",
              "      <th>LC001-tumor-RPF</th>\n",
              "      <th>LC001-normal-RNA</th>\n",
              "      <th>LC001-tumor-RNA</th>\n",
              "      <th>LC033-normal-RPF</th>\n",
              "      <th>LC033-tumor-RPF</th>\n",
              "      <th>LC033-normal-RNA</th>\n",
              "      <th>LC033-tumor-RNA</th>\n",
              "      <th>LC034-normal-RPF</th>\n",
              "      <th>LC034-tumor-RPF</th>\n",
              "      <th>...</th>\n",
              "      <th>LC507-normal-RNA</th>\n",
              "      <th>LC507-tumor-RNA</th>\n",
              "      <th>LC508-normal-RPF</th>\n",
              "      <th>LC508-tumor-RPF</th>\n",
              "      <th>LC508-normal-RNA</th>\n",
              "      <th>LC508-tumor-RNA</th>\n",
              "      <th>LC509-normal-RPF</th>\n",
              "      <th>LC509-tumor-RPF</th>\n",
              "      <th>LC509-normal-RNA</th>\n",
              "      <th>LC509-tumor-RNA</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>geneID</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>ENSG00000000003.14</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>402</td>\n",
              "      <td>873</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>301</td>\n",
              "      <td>1627</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>218</td>\n",
              "      <td>457</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>200</td>\n",
              "      <td>889</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>161</td>\n",
              "      <td>857.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000000005.5</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000000419.12</th>\n",
              "      <td>168</td>\n",
              "      <td>239</td>\n",
              "      <td>88</td>\n",
              "      <td>187</td>\n",
              "      <td>114</td>\n",
              "      <td>439</td>\n",
              "      <td>66</td>\n",
              "      <td>201</td>\n",
              "      <td>325</td>\n",
              "      <td>117</td>\n",
              "      <td>...</td>\n",
              "      <td>92</td>\n",
              "      <td>170</td>\n",
              "      <td>109</td>\n",
              "      <td>357</td>\n",
              "      <td>60</td>\n",
              "      <td>244</td>\n",
              "      <td>141</td>\n",
              "      <td>173</td>\n",
              "      <td>56</td>\n",
              "      <td>83.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000000457.13</th>\n",
              "      <td>65</td>\n",
              "      <td>121</td>\n",
              "      <td>60</td>\n",
              "      <td>106</td>\n",
              "      <td>36</td>\n",
              "      <td>163</td>\n",
              "      <td>70</td>\n",
              "      <td>156</td>\n",
              "      <td>130</td>\n",
              "      <td>76</td>\n",
              "      <td>...</td>\n",
              "      <td>127</td>\n",
              "      <td>176</td>\n",
              "      <td>67</td>\n",
              "      <td>176</td>\n",
              "      <td>55</td>\n",
              "      <td>261</td>\n",
              "      <td>64</td>\n",
              "      <td>100</td>\n",
              "      <td>68</td>\n",
              "      <td>176.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000000460.16</th>\n",
              "      <td>8</td>\n",
              "      <td>43</td>\n",
              "      <td>18</td>\n",
              "      <td>70</td>\n",
              "      <td>16</td>\n",
              "      <td>76</td>\n",
              "      <td>4</td>\n",
              "      <td>63</td>\n",
              "      <td>44</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>124</td>\n",
              "      <td>437</td>\n",
              "      <td>7</td>\n",
              "      <td>167</td>\n",
              "      <td>34</td>\n",
              "      <td>201</td>\n",
              "      <td>6</td>\n",
              "      <td>61</td>\n",
              "      <td>9</td>\n",
              "      <td>58.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000282988.1</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>39</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>31</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>62</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>17.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000283013.1</th>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>27</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>32</td>\n",
              "      <td>20</td>\n",
              "      <td>51</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>...</td>\n",
              "      <td>81</td>\n",
              "      <td>52</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>42</td>\n",
              "      <td>0</td>\n",
              "      <td>10</td>\n",
              "      <td>3</td>\n",
              "      <td>40.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000283039.1</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000283063.1</th>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000283071.1</th>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>13</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>18945 rows × 40 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-db1a9731-ac79-4e02-a621-910bfeadf428')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-db1a9731-ac79-4e02-a621-910bfeadf428 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-db1a9731-ac79-4e02-a621-910bfeadf428');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 156
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "counts_T = counts.T\n",
        "\n",
        "counts_T['index'] = counts_T.index\n",
        "counts_T['Seq'] = counts_T[\"index\"].apply(lambda s: s.split(\"-\")[2])\n",
        "\n",
        "RNA = counts_T.loc[counts_T['Seq'] == 'RNA']\n",
        "RPF = counts_T.loc[counts_T['Seq'] == 'RPF']\n",
        "\n",
        "del RNA[\"index\"], RNA[\"Seq\"], RPF[\"index\"], RPF[\"Seq\"]\n",
        "\n",
        "RNA = RNA.T\n",
        "RPF = RPF.T\n",
        "\n",
        "RNA"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 554
        },
        "id": "Bm7ERzHyoboO",
        "outputId": "90ef61ca-0572-4bd6-ab7d-748c4e6d79aa"
      },
      "execution_count": 157,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    LC001-normal-RNA  LC001-tumor-RNA  LC033-normal-RNA  \\\n",
              "geneID                                                                    \n",
              "ENSG00000000003.14             402.0            873.0             301.0   \n",
              "ENSG00000000005.5                0.0              1.0               0.0   \n",
              "ENSG00000000419.12              88.0            187.0              66.0   \n",
              "ENSG00000000457.13              60.0            106.0              70.0   \n",
              "ENSG00000000460.16              18.0             70.0               4.0   \n",
              "...                              ...              ...               ...   \n",
              "ENSG00000282988.1                1.0             39.0               0.0   \n",
              "ENSG00000283013.1               27.0              5.0              20.0   \n",
              "ENSG00000283039.1                0.0              0.0              10.0   \n",
              "ENSG00000283063.1                0.0              0.0               0.0   \n",
              "ENSG00000283071.1                0.0             13.0               0.0   \n",
              "\n",
              "                    LC033-tumor-RNA  LC034-normal-RNA  LC034-tumor-RNA  \\\n",
              "geneID                                                                   \n",
              "ENSG00000000003.14           1627.0             258.0             65.0   \n",
              "ENSG00000000005.5               1.0               0.0              0.0   \n",
              "ENSG00000000419.12            201.0              80.0             16.0   \n",
              "ENSG00000000457.13            156.0              77.0             67.0   \n",
              "ENSG00000000460.16             63.0              60.0              4.0   \n",
              "...                             ...               ...              ...   \n",
              "ENSG00000282988.1               5.0               1.0             25.0   \n",
              "ENSG00000283013.1              51.0              12.0             49.0   \n",
              "ENSG00000283039.1               0.0               0.0              0.0   \n",
              "ENSG00000283063.1               0.0               0.0              0.0   \n",
              "ENSG00000283071.1               0.0               0.0              0.0   \n",
              "\n",
              "                    LC501-normal-RNA  LC501-tumor-RNA  LC502-normal-RNA  \\\n",
              "geneID                                                                    \n",
              "ENSG00000000003.14             226.0            353.0             208.0   \n",
              "ENSG00000000005.5                0.0              0.0               3.0   \n",
              "ENSG00000000419.12              54.0            165.0              57.0   \n",
              "ENSG00000000457.13              78.0             68.0              97.0   \n",
              "ENSG00000000460.16              17.0            112.0              28.0   \n",
              "...                              ...              ...               ...   \n",
              "ENSG00000282988.1                0.0             11.0               3.0   \n",
              "ENSG00000283013.1               16.0             47.0              43.0   \n",
              "ENSG00000283039.1                0.0              0.0               0.0   \n",
              "ENSG00000283063.1                0.0              0.0               0.0   \n",
              "ENSG00000283071.1                0.0              0.0               0.0   \n",
              "\n",
              "                    LC502-tumor-RNA  LC505-normal-RNA  LC505-tumor-RNA  \\\n",
              "geneID                                                                   \n",
              "ENSG00000000003.14            399.0             153.0            361.0   \n",
              "ENSG00000000005.5               0.0               0.0              0.0   \n",
              "ENSG00000000419.12            174.0              61.0            155.0   \n",
              "ENSG00000000457.13            128.0              76.0            185.0   \n",
              "ENSG00000000460.16             14.0               8.0            118.0   \n",
              "...                             ...               ...              ...   \n",
              "ENSG00000282988.1              26.0               0.0              1.0   \n",
              "ENSG00000283013.1             132.0              23.0             46.0   \n",
              "ENSG00000283039.1               0.0               0.0              0.0   \n",
              "ENSG00000283063.1               0.0               0.0              0.0   \n",
              "ENSG00000283071.1               0.0               0.0              6.0   \n",
              "\n",
              "                    LC506-normal-RNA  LC506-tumor-RNA  LC507-normal-RNA  \\\n",
              "geneID                                                                    \n",
              "ENSG00000000003.14             157.0            333.0             218.0   \n",
              "ENSG00000000005.5                0.0              0.0               0.0   \n",
              "ENSG00000000419.12             104.0            114.0              92.0   \n",
              "ENSG00000000457.13             114.0             74.0             127.0   \n",
              "ENSG00000000460.16              25.0             98.0             124.0   \n",
              "...                              ...              ...               ...   \n",
              "ENSG00000282988.1                2.0              8.0               0.0   \n",
              "ENSG00000283013.1               50.0            102.0              81.0   \n",
              "ENSG00000283039.1                0.0              0.0               0.0   \n",
              "ENSG00000283063.1                0.0              0.0               0.0   \n",
              "ENSG00000283071.1                4.0              5.0               0.0   \n",
              "\n",
              "                    LC507-tumor-RNA  LC508-normal-RNA  LC508-tumor-RNA  \\\n",
              "geneID                                                                   \n",
              "ENSG00000000003.14            457.0             200.0            889.0   \n",
              "ENSG00000000005.5               0.0               0.0              0.0   \n",
              "ENSG00000000419.12            170.0              60.0            244.0   \n",
              "ENSG00000000457.13            176.0              55.0            261.0   \n",
              "ENSG00000000460.16            437.0              34.0            201.0   \n",
              "...                             ...               ...              ...   \n",
              "ENSG00000282988.1              31.0               0.0             62.0   \n",
              "ENSG00000283013.1              52.0               9.0             42.0   \n",
              "ENSG00000283039.1               0.0               0.0              0.0   \n",
              "ENSG00000283063.1               0.0               0.0              0.0   \n",
              "ENSG00000283071.1               0.0               0.0              1.0   \n",
              "\n",
              "                    LC509-normal-RNA  LC509-tumor-RNA  \n",
              "geneID                                                 \n",
              "ENSG00000000003.14             161.0            857.0  \n",
              "ENSG00000000005.5                0.0              0.0  \n",
              "ENSG00000000419.12              56.0             83.0  \n",
              "ENSG00000000457.13              68.0            176.0  \n",
              "ENSG00000000460.16               9.0             58.0  \n",
              "...                              ...              ...  \n",
              "ENSG00000282988.1                1.0             17.0  \n",
              "ENSG00000283013.1                3.0             40.0  \n",
              "ENSG00000283039.1                0.0              0.0  \n",
              "ENSG00000283063.1                0.0              0.0  \n",
              "ENSG00000283071.1                1.0              2.0  \n",
              "\n",
              "[18945 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-89073c5c-af39-432b-bdd9-b8722475385c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>LC001-normal-RNA</th>\n",
              "      <th>LC001-tumor-RNA</th>\n",
              "      <th>LC033-normal-RNA</th>\n",
              "      <th>LC033-tumor-RNA</th>\n",
              "      <th>LC034-normal-RNA</th>\n",
              "      <th>LC034-tumor-RNA</th>\n",
              "      <th>LC501-normal-RNA</th>\n",
              "      <th>LC501-tumor-RNA</th>\n",
              "      <th>LC502-normal-RNA</th>\n",
              "      <th>LC502-tumor-RNA</th>\n",
              "      <th>LC505-normal-RNA</th>\n",
              "      <th>LC505-tumor-RNA</th>\n",
              "      <th>LC506-normal-RNA</th>\n",
              "      <th>LC506-tumor-RNA</th>\n",
              "      <th>LC507-normal-RNA</th>\n",
              "      <th>LC507-tumor-RNA</th>\n",
              "      <th>LC508-normal-RNA</th>\n",
              "      <th>LC508-tumor-RNA</th>\n",
              "      <th>LC509-normal-RNA</th>\n",
              "      <th>LC509-tumor-RNA</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>geneID</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>ENSG00000000003.14</th>\n",
              "      <td>402.0</td>\n",
              "      <td>873.0</td>\n",
              "      <td>301.0</td>\n",
              "      <td>1627.0</td>\n",
              "      <td>258.0</td>\n",
              "      <td>65.0</td>\n",
              "      <td>226.0</td>\n",
              "      <td>353.0</td>\n",
              "      <td>208.0</td>\n",
              "      <td>399.0</td>\n",
              "      <td>153.0</td>\n",
              "      <td>361.0</td>\n",
              "      <td>157.0</td>\n",
              "      <td>333.0</td>\n",
              "      <td>218.0</td>\n",
              "      <td>457.0</td>\n",
              "      <td>200.0</td>\n",
              "      <td>889.0</td>\n",
              "      <td>161.0</td>\n",
              "      <td>857.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000000005.5</th>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000000419.12</th>\n",
              "      <td>88.0</td>\n",
              "      <td>187.0</td>\n",
              "      <td>66.0</td>\n",
              "      <td>201.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>16.0</td>\n",
              "      <td>54.0</td>\n",
              "      <td>165.0</td>\n",
              "      <td>57.0</td>\n",
              "      <td>174.0</td>\n",
              "      <td>61.0</td>\n",
              "      <td>155.0</td>\n",
              "      <td>104.0</td>\n",
              "      <td>114.0</td>\n",
              "      <td>92.0</td>\n",
              "      <td>170.0</td>\n",
              "      <td>60.0</td>\n",
              "      <td>244.0</td>\n",
              "      <td>56.0</td>\n",
              "      <td>83.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000000457.13</th>\n",
              "      <td>60.0</td>\n",
              "      <td>106.0</td>\n",
              "      <td>70.0</td>\n",
              "      <td>156.0</td>\n",
              "      <td>77.0</td>\n",
              "      <td>67.0</td>\n",
              "      <td>78.0</td>\n",
              "      <td>68.0</td>\n",
              "      <td>97.0</td>\n",
              "      <td>128.0</td>\n",
              "      <td>76.0</td>\n",
              "      <td>185.0</td>\n",
              "      <td>114.0</td>\n",
              "      <td>74.0</td>\n",
              "      <td>127.0</td>\n",
              "      <td>176.0</td>\n",
              "      <td>55.0</td>\n",
              "      <td>261.0</td>\n",
              "      <td>68.0</td>\n",
              "      <td>176.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000000460.16</th>\n",
              "      <td>18.0</td>\n",
              "      <td>70.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>63.0</td>\n",
              "      <td>60.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>17.0</td>\n",
              "      <td>112.0</td>\n",
              "      <td>28.0</td>\n",
              "      <td>14.0</td>\n",
              "      <td>8.0</td>\n",
              "      <td>118.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>98.0</td>\n",
              "      <td>124.0</td>\n",
              "      <td>437.0</td>\n",
              "      <td>34.0</td>\n",
              "      <td>201.0</td>\n",
              "      <td>9.0</td>\n",
              "      <td>58.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000282988.1</th>\n",
              "      <td>1.0</td>\n",
              "      <td>39.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>11.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>26.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>8.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>31.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>62.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>17.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000283013.1</th>\n",
              "      <td>27.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>51.0</td>\n",
              "      <td>12.0</td>\n",
              "      <td>49.0</td>\n",
              "      <td>16.0</td>\n",
              "      <td>47.0</td>\n",
              "      <td>43.0</td>\n",
              "      <td>132.0</td>\n",
              "      <td>23.0</td>\n",
              "      <td>46.0</td>\n",
              "      <td>50.0</td>\n",
              "      <td>102.0</td>\n",
              "      <td>81.0</td>\n",
              "      <td>52.0</td>\n",
              "      <td>9.0</td>\n",
              "      <td>42.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>40.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000283039.1</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000283063.1</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000283071.1</th>\n",
              "      <td>0.0</td>\n",
              "      <td>13.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>18945 rows × 20 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-89073c5c-af39-432b-bdd9-b8722475385c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-89073c5c-af39-432b-bdd9-b8722475385c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-89073c5c-af39-432b-bdd9-b8722475385c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 157
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "1.1. Для каждого гена найдите коэффициент корреляции числа каунтов между экспериментами RNA-Seq и Ribo-Seq. Какую корреляцию вы выберете — Пирсона или Спирмана? Обратите внимание, что перед вами не нормированные на глубину библиотеки каунты, учтите это при анализе."
      ],
      "metadata": {
        "id": "dSlAy-8XWmfp"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Задание сформулировано так, что нормировать запрещается, поэтому корреляцию Пирсона точно нельзя использовать: слишком разный масштаб у данных. Поэтому используем Спирмана, для него не важен масштаб."
      ],
      "metadata": {
        "id": "xqs4DVaHVBQ_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "from scipy.stats import spearmanr"
      ],
      "metadata": {
        "id": "WC2aLaUnhZIS"
      },
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "spearman_arr = []\n",
        "indexes = []\n",
        "rna = 0\n",
        "rpf = 0\n",
        "\n",
        "for i in range (len(RNA)):\n",
        "  for j in range (20):\n",
        "    rna = rna + RNA.iloc[i:i+1, j:j+1].to_numpy()\n",
        "    rpf = rpf + RPF.iloc[i:i+1, j:j+1].to_numpy()\n",
        "  if rna !=0 and rpf !=0:\n",
        "    spearman = spearmanr(RNA.iloc[i:i+1, :], RPF.iloc[i:i+1, :], axis = 1)[0]\n",
        "    spearman_arr.append(spearman)\n",
        "    indexes.append(RNA.index[i])\n",
        "  rna = 0\n",
        "  rpf = 0  \n",
        "\n",
        "correlation = pd.DataFrame(data = spearman_arr, columns = ['Spearman correlation'], index = indexes)\n",
        "correlation"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "bLfsdPZMuY1h",
        "outputId": "ea2effbc-7939-4fae-c52d-858c50e981a6"
      },
      "execution_count": 158,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    Spearman correlation\n",
              "ENSG00000000005.5              -0.139424\n",
              "ENSG00000000419.12              0.849624\n",
              "ENSG00000000457.13              0.697779\n",
              "ENSG00000000460.16              0.811583\n",
              "ENSG00000000938.12              0.518673\n",
              "...                                  ...\n",
              "ENSG00000282881.1               0.117872\n",
              "ENSG00000282936.1              -0.258195\n",
              "ENSG00000282988.1               0.382301\n",
              "ENSG00000283013.1               0.191364\n",
              "ENSG00000283071.1               0.443724\n",
              "\n",
              "[16859 rows x 1 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e6505597-1b2a-42a1-974a-892143744d21\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Spearman correlation</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>ENSG00000000005.5</th>\n",
              "      <td>-0.139424</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000000419.12</th>\n",
              "      <td>0.849624</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000000457.13</th>\n",
              "      <td>0.697779</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000000460.16</th>\n",
              "      <td>0.811583</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000000938.12</th>\n",
              "      <td>0.518673</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000282881.1</th>\n",
              "      <td>0.117872</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000282936.1</th>\n",
              "      <td>-0.258195</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000282988.1</th>\n",
              "      <td>0.382301</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000283013.1</th>\n",
              "      <td>0.191364</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000283071.1</th>\n",
              "      <td>0.443724</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>16859 rows × 1 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e6505597-1b2a-42a1-974a-892143744d21')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e6505597-1b2a-42a1-974a-892143744d21 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e6505597-1b2a-42a1-974a-892143744d21');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 158
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "1.2. Постройте гистограмму распределения этих\n",
        "коэффициентов корреляции. Для каких генов корреляция самая высокая, а\n",
        "для каких — самая низкая? Как вы можете это объяснить?"
      ],
      "metadata": {
        "id": "h2bYN9-d7Ts-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "fig, ax = plt.subplots(figsize=(10, 6))\n",
        "ax.hist(spearman_arr, bins=50, alpha=0.6, color = 'purple')\n",
        "ax.set_title('Histogram of spearman correlation between RNA-seq and Ribo-seq')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 400
        },
        "id": "yZe7ho2F2iPU",
        "outputId": "5a1a229c-cdd1-4bc1-e996-c83f83d0289c"
      },
      "execution_count": 159,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Возьмем в качестве генов с высокой корреляции те, коэффициент корреляции которых больше 0.9, а с низкой те, у которых он меньш или равен -0.4"
      ],
      "metadata": {
        "id": "JW0mYIloIZyQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "correlation = correlation.sort_values('Spearman correlation', ascending = False)\n",
        "high = correlation[correlation['Spearman correlation'] > 0.9]\n",
        "low = correlation[correlation['Spearman correlation'] <= -0.4]"
      ],
      "metadata": {
        "id": "P476V6yMAVYZ"
      },
      "execution_count": 160,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Вытащим из датасетов с каунтами по РНК-секу и Рибо-секу те гены, корреляция которых высокая или низкая"
      ],
      "metadata": {
        "id": "DWrBljIoJB0D"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "RNA['index'] = RNA.index\n",
        "RPF['index'] = RPF.index\n",
        "\n",
        "high_index = high.index\n",
        "low_index = low.index\n",
        "\n",
        "high_df_RNA = RNA[RNA['index'].isin(high_index)]\n",
        "low_df_RNA = RNA[RNA['index'].isin(low_index)]\n",
        "\n",
        "high_df_RPF = RPF[RPF['index'].isin(high_index)]\n",
        "low_df_RPF = RPF[RPF['index'].isin(low_index)]"
      ],
      "metadata": {
        "id": "TbDK0BGtIX6Z"
      },
      "execution_count": 161,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Посмотрим на датасеты и для примера возьмем несколько генов из топа с высокой и низкой корреляцией из РНК-сека и Рибо-сека"
      ],
      "metadata": {
        "id": "WMeX-VVdXaR_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "high_genes = ['ENSG00000001036.13', 'ENSG00000003989.16', 'ENSG00000006453.13', 'ENSG00000008517.16']\n",
        "low_genes = ['ENSG00000146067.15', 'ENSG00000179965.11', 'ENSG00000203896.9', 'ENSG00000242028.5']\n",
        "\n",
        "high_df_RNA = RNA[RNA['index'].isin(high_genes)]\n",
        "high_df_RPF = RPF[RPF['index'].isin(high_genes)]\n",
        "\n",
        "low_df_RNA = RNA[RNA['index'].isin(low_genes)]\n",
        "low_df_RPF = RPF[RPF['index'].isin(low_genes)]\n",
        "\n",
        "high_correlation = high_df_RNA.merge(high_df_RPF)\n",
        "high_correlation.index = high_genes\n",
        "\n",
        "low_correlation = low_df_RNA.merge(low_df_RPF)\n",
        "low_correlation.index = low_genes\n",
        "\n",
        "del high_correlation[\"index\"], low_correlation[\"index\"]\n",
        "\n",
        "high_correlation = high_correlation.T\n",
        "low_correlation = low_correlation.T\n",
        "\n",
        "high_correlation['index'] = high_correlation.index\n",
        "low_correlation['index'] = low_correlation.index\n",
        "\n",
        "high_correlation['tissue'] = high_correlation[\"index\"].apply(lambda s: s.split(\"-\")[1])\n",
        "high_correlation['Seq'] = high_correlation[\"index\"].apply(lambda s: s.split(\"-\")[2])\n",
        "\n",
        "low_correlation['tissue'] = low_correlation[\"index\"].apply(lambda s: s.split(\"-\")[1])\n",
        "low_correlation['Seq'] = low_correlation[\"index\"].apply(lambda s: s.split(\"-\")[2])\n",
        "\n",
        "del high_correlation[\"index\"], low_correlation[\"index\"]\n",
        "\n",
        "high_correlation"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "4yoUq4_Gaiby",
        "outputId": "b3160924-46a5-4f51-ae44-a01a83181082"
      },
      "execution_count": 162,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                  ENSG00000001036.13  ENSG00000003989.16  ENSG00000006453.13  \\\n",
              "LC001-normal-RNA               199.0              2097.0               137.0   \n",
              "LC001-tumor-RNA                432.0              1747.0               332.0   \n",
              "LC033-normal-RNA               128.0              2805.0               100.0   \n",
              "LC033-tumor-RNA                424.0              1049.0               423.0   \n",
              "LC034-normal-RNA               203.0              4860.0               212.0   \n",
              "LC034-tumor-RNA                189.0               155.0               644.0   \n",
              "LC501-normal-RNA               155.0              2760.0               137.0   \n",
              "LC501-tumor-RNA                383.0              1571.0               257.0   \n",
              "LC502-normal-RNA               134.0              1299.0               214.0   \n",
              "LC502-tumor-RNA               1177.0              2190.0               909.0   \n",
              "LC505-normal-RNA               133.0              4714.0               184.0   \n",
              "LC505-tumor-RNA                514.0               747.0               319.0   \n",
              "LC506-normal-RNA               249.0              1966.0               250.0   \n",
              "LC506-tumor-RNA                413.0               395.0               822.0   \n",
              "LC507-normal-RNA               318.0              1458.0               169.0   \n",
              "LC507-tumor-RNA                501.0                80.0                55.0   \n",
              "LC508-normal-RNA               160.0              3465.0               193.0   \n",
              "LC508-tumor-RNA               1011.0              1536.0               315.0   \n",
              "LC509-normal-RNA                95.0              3141.0               130.0   \n",
              "LC509-tumor-RNA                186.0              3196.0               309.0   \n",
              "LC001-normal-RPF               195.0              1368.0                61.0   \n",
              "LC001-tumor-RPF                802.0               685.0               158.0   \n",
              "LC033-normal-RPF               124.0              1843.0                28.0   \n",
              "LC033-tumor-RPF                871.0               751.0               499.0   \n",
              "LC034-normal-RPF               414.0              5956.0               310.0   \n",
              "LC034-tumor-RPF                171.0               141.0               425.0   \n",
              "LC501-normal-RPF               194.0              1888.0               121.0   \n",
              "LC501-tumor-RPF                508.0               760.0               193.0   \n",
              "LC502-normal-RPF               262.0              1233.0               147.0   \n",
              "LC502-tumor-RPF               1233.0              1325.0               672.0   \n",
              "LC505-normal-RPF               159.0              4098.0               121.0   \n",
              "LC505-tumor-RPF                637.0               390.0               259.0   \n",
              "LC506-normal-RPF               200.0               934.0                88.0   \n",
              "LC506-tumor-RPF                453.0               298.0               320.0   \n",
              "LC507-normal-RPF               254.0              1196.0                86.0   \n",
              "LC507-tumor-RPF                533.0                56.0                21.0   \n",
              "LC508-normal-RPF               156.0              1301.0               111.0   \n",
              "LC508-tumor-RPF               1633.0               754.0               232.0   \n",
              "LC509-normal-RPF               153.0              2707.0                80.0   \n",
              "LC509-tumor-RPF                284.0              1816.0               169.0   \n",
              "\n",
              "                  ENSG00000008517.16  tissue  Seq  \n",
              "LC001-normal-RNA               832.0  normal  RNA  \n",
              "LC001-tumor-RNA                 43.0   tumor  RNA  \n",
              "LC033-normal-RNA              1087.0  normal  RNA  \n",
              "LC033-tumor-RNA               1915.0   tumor  RNA  \n",
              "LC034-normal-RNA              1870.0  normal  RNA  \n",
              "LC034-tumor-RNA                333.0   tumor  RNA  \n",
              "LC501-normal-RNA               952.0  normal  RNA  \n",
              "LC501-tumor-RNA                304.0   tumor  RNA  \n",
              "LC502-normal-RNA               807.0  normal  RNA  \n",
              "LC502-tumor-RNA                662.0   tumor  RNA  \n",
              "LC505-normal-RNA               237.0  normal  RNA  \n",
              "LC505-tumor-RNA               1479.0   tumor  RNA  \n",
              "LC506-normal-RNA               581.0  normal  RNA  \n",
              "LC506-tumor-RNA               2040.0   tumor  RNA  \n",
              "LC507-normal-RNA               972.0  normal  RNA  \n",
              "LC507-tumor-RNA                342.0   tumor  RNA  \n",
              "LC508-normal-RNA               615.0  normal  RNA  \n",
              "LC508-tumor-RNA                194.0   tumor  RNA  \n",
              "LC509-normal-RNA               235.0  normal  RNA  \n",
              "LC509-tumor-RNA                 94.0   tumor  RNA  \n",
              "LC001-normal-RPF               719.0  normal  RPF  \n",
              "LC001-tumor-RPF                 89.0   tumor  RPF  \n",
              "LC033-normal-RPF              1277.0  normal  RPF  \n",
              "LC033-tumor-RPF               4843.0   tumor  RPF  \n",
              "LC034-normal-RPF              4389.0  normal  RPF  \n",
              "LC034-tumor-RPF                555.0   tumor  RPF  \n",
              "LC501-normal-RPF              1248.0  normal  RPF  \n",
              "LC501-tumor-RPF                531.0   tumor  RPF  \n",
              "LC502-normal-RPF               831.0  normal  RPF  \n",
              "LC502-tumor-RPF                761.0   tumor  RPF  \n",
              "LC505-normal-RPF               216.0  normal  RPF  \n",
              "LC505-tumor-RPF               3464.0   tumor  RPF  \n",
              "LC506-normal-RPF               429.0  normal  RPF  \n",
              "LC506-tumor-RPF               2834.0   tumor  RPF  \n",
              "LC507-normal-RPF              1147.0  normal  RPF  \n",
              "LC507-tumor-RPF                535.0   tumor  RPF  \n",
              "LC508-normal-RPF               530.0  normal  RPF  \n",
              "LC508-tumor-RPF                442.0   tumor  RPF  \n",
              "LC509-normal-RPF               330.0  normal  RPF  \n",
              "LC509-tumor-RPF                146.0   tumor  RPF  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-be456408-27a6-431c-9b48-fa0e3b886996\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ENSG00000001036.13</th>\n",
              "      <th>ENSG00000003989.16</th>\n",
              "      <th>ENSG00000006453.13</th>\n",
              "      <th>ENSG00000008517.16</th>\n",
              "      <th>tissue</th>\n",
              "      <th>Seq</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>LC001-normal-RNA</th>\n",
              "      <td>199.0</td>\n",
              "      <td>2097.0</td>\n",
              "      <td>137.0</td>\n",
              "      <td>832.0</td>\n",
              "      <td>normal</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC001-tumor-RNA</th>\n",
              "      <td>432.0</td>\n",
              "      <td>1747.0</td>\n",
              "      <td>332.0</td>\n",
              "      <td>43.0</td>\n",
              "      <td>tumor</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC033-normal-RNA</th>\n",
              "      <td>128.0</td>\n",
              "      <td>2805.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>1087.0</td>\n",
              "      <td>normal</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC033-tumor-RNA</th>\n",
              "      <td>424.0</td>\n",
              "      <td>1049.0</td>\n",
              "      <td>423.0</td>\n",
              "      <td>1915.0</td>\n",
              "      <td>tumor</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC034-normal-RNA</th>\n",
              "      <td>203.0</td>\n",
              "      <td>4860.0</td>\n",
              "      <td>212.0</td>\n",
              "      <td>1870.0</td>\n",
              "      <td>normal</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC034-tumor-RNA</th>\n",
              "      <td>189.0</td>\n",
              "      <td>155.0</td>\n",
              "      <td>644.0</td>\n",
              "      <td>333.0</td>\n",
              "      <td>tumor</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC501-normal-RNA</th>\n",
              "      <td>155.0</td>\n",
              "      <td>2760.0</td>\n",
              "      <td>137.0</td>\n",
              "      <td>952.0</td>\n",
              "      <td>normal</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC501-tumor-RNA</th>\n",
              "      <td>383.0</td>\n",
              "      <td>1571.0</td>\n",
              "      <td>257.0</td>\n",
              "      <td>304.0</td>\n",
              "      <td>tumor</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC502-normal-RNA</th>\n",
              "      <td>134.0</td>\n",
              "      <td>1299.0</td>\n",
              "      <td>214.0</td>\n",
              "      <td>807.0</td>\n",
              "      <td>normal</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC502-tumor-RNA</th>\n",
              "      <td>1177.0</td>\n",
              "      <td>2190.0</td>\n",
              "      <td>909.0</td>\n",
              "      <td>662.0</td>\n",
              "      <td>tumor</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC505-normal-RNA</th>\n",
              "      <td>133.0</td>\n",
              "      <td>4714.0</td>\n",
              "      <td>184.0</td>\n",
              "      <td>237.0</td>\n",
              "      <td>normal</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC505-tumor-RNA</th>\n",
              "      <td>514.0</td>\n",
              "      <td>747.0</td>\n",
              "      <td>319.0</td>\n",
              "      <td>1479.0</td>\n",
              "      <td>tumor</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC506-normal-RNA</th>\n",
              "      <td>249.0</td>\n",
              "      <td>1966.0</td>\n",
              "      <td>250.0</td>\n",
              "      <td>581.0</td>\n",
              "      <td>normal</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC506-tumor-RNA</th>\n",
              "      <td>413.0</td>\n",
              "      <td>395.0</td>\n",
              "      <td>822.0</td>\n",
              "      <td>2040.0</td>\n",
              "      <td>tumor</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC507-normal-RNA</th>\n",
              "      <td>318.0</td>\n",
              "      <td>1458.0</td>\n",
              "      <td>169.0</td>\n",
              "      <td>972.0</td>\n",
              "      <td>normal</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC507-tumor-RNA</th>\n",
              "      <td>501.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>55.0</td>\n",
              "      <td>342.0</td>\n",
              "      <td>tumor</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC508-normal-RNA</th>\n",
              "      <td>160.0</td>\n",
              "      <td>3465.0</td>\n",
              "      <td>193.0</td>\n",
              "      <td>615.0</td>\n",
              "      <td>normal</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC508-tumor-RNA</th>\n",
              "      <td>1011.0</td>\n",
              "      <td>1536.0</td>\n",
              "      <td>315.0</td>\n",
              "      <td>194.0</td>\n",
              "      <td>tumor</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC509-normal-RNA</th>\n",
              "      <td>95.0</td>\n",
              "      <td>3141.0</td>\n",
              "      <td>130.0</td>\n",
              "      <td>235.0</td>\n",
              "      <td>normal</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC509-tumor-RNA</th>\n",
              "      <td>186.0</td>\n",
              "      <td>3196.0</td>\n",
              "      <td>309.0</td>\n",
              "      <td>94.0</td>\n",
              "      <td>tumor</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC001-normal-RPF</th>\n",
              "      <td>195.0</td>\n",
              "      <td>1368.0</td>\n",
              "      <td>61.0</td>\n",
              "      <td>719.0</td>\n",
              "      <td>normal</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC001-tumor-RPF</th>\n",
              "      <td>802.0</td>\n",
              "      <td>685.0</td>\n",
              "      <td>158.0</td>\n",
              "      <td>89.0</td>\n",
              "      <td>tumor</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC033-normal-RPF</th>\n",
              "      <td>124.0</td>\n",
              "      <td>1843.0</td>\n",
              "      <td>28.0</td>\n",
              "      <td>1277.0</td>\n",
              "      <td>normal</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC033-tumor-RPF</th>\n",
              "      <td>871.0</td>\n",
              "      <td>751.0</td>\n",
              "      <td>499.0</td>\n",
              "      <td>4843.0</td>\n",
              "      <td>tumor</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC034-normal-RPF</th>\n",
              "      <td>414.0</td>\n",
              "      <td>5956.0</td>\n",
              "      <td>310.0</td>\n",
              "      <td>4389.0</td>\n",
              "      <td>normal</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC034-tumor-RPF</th>\n",
              "      <td>171.0</td>\n",
              "      <td>141.0</td>\n",
              "      <td>425.0</td>\n",
              "      <td>555.0</td>\n",
              "      <td>tumor</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC501-normal-RPF</th>\n",
              "      <td>194.0</td>\n",
              "      <td>1888.0</td>\n",
              "      <td>121.0</td>\n",
              "      <td>1248.0</td>\n",
              "      <td>normal</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC501-tumor-RPF</th>\n",
              "      <td>508.0</td>\n",
              "      <td>760.0</td>\n",
              "      <td>193.0</td>\n",
              "      <td>531.0</td>\n",
              "      <td>tumor</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC502-normal-RPF</th>\n",
              "      <td>262.0</td>\n",
              "      <td>1233.0</td>\n",
              "      <td>147.0</td>\n",
              "      <td>831.0</td>\n",
              "      <td>normal</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC502-tumor-RPF</th>\n",
              "      <td>1233.0</td>\n",
              "      <td>1325.0</td>\n",
              "      <td>672.0</td>\n",
              "      <td>761.0</td>\n",
              "      <td>tumor</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC505-normal-RPF</th>\n",
              "      <td>159.0</td>\n",
              "      <td>4098.0</td>\n",
              "      <td>121.0</td>\n",
              "      <td>216.0</td>\n",
              "      <td>normal</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC505-tumor-RPF</th>\n",
              "      <td>637.0</td>\n",
              "      <td>390.0</td>\n",
              "      <td>259.0</td>\n",
              "      <td>3464.0</td>\n",
              "      <td>tumor</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC506-normal-RPF</th>\n",
              "      <td>200.0</td>\n",
              "      <td>934.0</td>\n",
              "      <td>88.0</td>\n",
              "      <td>429.0</td>\n",
              "      <td>normal</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC506-tumor-RPF</th>\n",
              "      <td>453.0</td>\n",
              "      <td>298.0</td>\n",
              "      <td>320.0</td>\n",
              "      <td>2834.0</td>\n",
              "      <td>tumor</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC507-normal-RPF</th>\n",
              "      <td>254.0</td>\n",
              "      <td>1196.0</td>\n",
              "      <td>86.0</td>\n",
              "      <td>1147.0</td>\n",
              "      <td>normal</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC507-tumor-RPF</th>\n",
              "      <td>533.0</td>\n",
              "      <td>56.0</td>\n",
              "      <td>21.0</td>\n",
              "      <td>535.0</td>\n",
              "      <td>tumor</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC508-normal-RPF</th>\n",
              "      <td>156.0</td>\n",
              "      <td>1301.0</td>\n",
              "      <td>111.0</td>\n",
              "      <td>530.0</td>\n",
              "      <td>normal</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC508-tumor-RPF</th>\n",
              "      <td>1633.0</td>\n",
              "      <td>754.0</td>\n",
              "      <td>232.0</td>\n",
              "      <td>442.0</td>\n",
              "      <td>tumor</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC509-normal-RPF</th>\n",
              "      <td>153.0</td>\n",
              "      <td>2707.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>330.0</td>\n",
              "      <td>normal</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC509-tumor-RPF</th>\n",
              "      <td>284.0</td>\n",
              "      <td>1816.0</td>\n",
              "      <td>169.0</td>\n",
              "      <td>146.0</td>\n",
              "      <td>tumor</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-be456408-27a6-431c-9b48-fa0e3b886996')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-be456408-27a6-431c-9b48-fa0e3b886996 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-be456408-27a6-431c-9b48-fa0e3b886996');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 162
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Построим scatter plot: по Х - каунты RNA-seq, по У - каунты Ribo-seq. Посмотрим сначала как меняется зависимость у генов с высокой корреляцией, затем как у генов с низкой корреляцией."
      ],
      "metadata": {
        "id": "f8pRX0K1l1VR"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "plt.subplots(figsize=(7,5))\n",
        "\n",
        "plt.scatter(high_correlation.iloc[:20, 0:1], high_correlation.iloc[20:40, 0:1], \n",
        "            c='purple', label='ENSG00000001036.13')\n",
        "\n",
        "plt.title('Scatter plot: RNA-seq vs Ribo-seq', fontsize=13)\n",
        "plt.xlabel(\"RNA-seq\")\n",
        "plt.ylabel(\"Ribo-seq\")\n",
        "\n",
        "plt.legend(loc='upper left')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 360
        },
        "id": "OmOVs2FGkAaB",
        "outputId": "19f5e237-6a9a-4bcc-fcd2-f1327b3ffcd9"
      },
      "execution_count": 163,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 504x360 with 1 Axes>"
            ],
            "image/png": "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PXr0YOXKlVFXJ6uUTi2leGwxZcvKwKFsWRnFY4spnVoaddWaJCXhDCkvL6dt27ZRV0NE0tC2bVt1HyUomVBC+frKbVK+vpySCSUR1ahpUxLOIB0BizQu+j9bVdnysrTKpW6UhEVEpEJefl5a5VI3SsIiIlKhaGIROe1yKpXltMuhaGJRRDVq2pSEpVoPPvggZpb00bFjRwDmzZuHmdGqVSv++9//VtlGz549OeussyqVvfnmm5xwwgnk5+eTm5vLrrvuyqGHHsodd9xRZf0vv/ySCRMmUFBQQPv27WnTpg19+/Zl9OjRzJs3r0r8Sy+9xI9//GPatm1L9+7d+eUvf8mGDRuqxC1atIihQ4fSvn17unTpwpgxY1i9enWVuI8//pgTTzyRvLw8OnTowPHHH8/y5curxK1Zs4ZzzjmHnXfemf/5n//hsMMOo7S06kCWjRs3Mn78eHbddVfatm3LwIED+fvf/14lbtu2bdxwww306tWLNm3asP/++zN9+vQqcQBTpkxhn332ITc3l7333ptJkyZViSkuLua0005jr732okWLFgwePDjptlJtm5kzZzJkyBC6d+9Obm4uPXv25OSTT+add95Jus3nn3+eQYMG0b59ezp06EBhYSFz5syptg4xl112GUOHDqVLly6YGQ8++GDSuDFjxrDvvvvSoUMH2rdvz/7778+dd97J1q1ba30PqaxgVAHDJw8nb488MMjbI4/hk4drdHR9cXc9Unj84Ac/8Jq88847NS5vjB544AEHfNq0ab5gwYJKj1dffdXd3efOneuAAz5y5Mgq2+jRo4efeeaZFa9feeUVz83N9UGDBvljjz3mc+fO9Ycffth/9rOf+eDBgyutW1pa6rvttpvvuuuuPnHiRJ85c6bPmTPH7733Xj/ooIMc8M8//7wi/q233vI2bdr4scce67Nnz/YpU6Z4x44d/eSTT6603RUrVvjOO+/sBx98sL/wwgv+2GOPec+ePX3gwIG+devWirhvv/3W+/Xr5wMGDPCnnnrKn376ad9vv/28T58+vm7duoq4bdu2+UEHHeQ9evTwRx991F944QUfNGiQd+nSxT/++ONK733aaad5Xl6eT5482WfPnu0jRozwNm3a+BtvvFEp7rLLLvPWrVv7zTff7HPmzPGxY8e6mflzzz1XKW7y5MluZn7ZZZf5nDlzfMKECW5mfs8991SKO/vss33ffff1M844w3fffXc/5JBDqvxbpdM2jz76qF9yySU+bdo0nzdvnv/5z3/2/v37+0477eRLly6ttM1JkyZ5q1at/OKLL/ZZs2b5jBkz/MYbb/Ti4uKkdYjXvn17P/jgg3306NEO+AMPPJA0buTIkX733Xf7jBkzfObMmf7LX/7SzcwvuuiiWt+jKf7flYYBLPQ65pbIk1tjeTTnJPzBBx9UGxNLwkOHDnUz8zfffLPS8sQkfMYZZ/guu+ziGzdurLKt+C/5zZs3+5577ul77rmnr1y5Mul7T5061b/66quK18cdd5z369fPN2/eXFH20EMPOeCvvfZaRdnFF1/seXl5vmbNmoqy+fPnO+DTp0+vKLvtttu8RYsWlfZ/8eLF3rJlS7/11lsryp5++mkHfM6cORVla9eu9U6dOvmFF15YUfbmm2864Pfff39FWXl5ue+1114+fPjwirIvvvjCW7du7VdeeWWl/R0yZIgXFBRUWrdr164+evToSnFjxozxLl26VGqH+LY96KCDqk3CqbZNMu+9954Dfsstt1SULVmyxNu0aeN/+MMfaly3OrF6f/DBBzUm4WROOeUUb9++fa1xTfH/rjSMTCRhnY6WjPj5z3/OrrvuyuWXX15j3OrVq+nUqRO5ublVlrVosf3jOH36dD744ANuuukmunbtmnRbp512Gp07dwaCS8RmzJjBySefTE7O9v6sk08+mdatW/PMM89UlD377LMcddRRFafUAQYNGkR+fn6VuAMPPJB+/fpVlPXu3ZuDDjqoStxuu+3GoYceWlGWl5fH8OHDq8Tl5OQwcuTIirJWrVpxyimnMHPmTDZt2gQEp3o3b97M6aefXml/Tz/9dEpLS1myZAkACxYsYNWqVVXizjjjDL766iteeumlpG1bk1TbJpkuXbpU7FPM/fffT4sWLRg3blxK758o1XpXV5/4uohkIyXhLFU6tZTbet3GNS2u4bZet0V6ofzWrVvZsmVLpce2bdsqxbRt25bLL7+cv/3tb7z88svVbutHP/oR7733HuPGjeOVV15hy5YtSeNKSkpo2bIlw4YNS6mOH330ERs3bmS//farVB7rQ471VW7YsIElS5ZUiQMYMGBApT7NRYsW1Tlu+fLlrFu3riKud+/etGvXrkrc5s2b+fDDDyvicnNzKyX/WBxQ8d6LFi0CqPLeiXGpSqdtYrZu3crmzZv54IMP+NnPfkb37t059dRTK5a/9NJL7LPPPjz++OP07duXVq1a0a9fP+6+++606pYKd2fLli2sXbuW6dOn89BDD/HLX/4y4+8jkklKwlko22as2WeffcjJyan0OOaYY6rEnXPOOfTp04cJEyZUu63x48dz3HHH8cc//pEDDjiADh06MHToUKZMmVIpsX/yySd07dq1ygQo27Ztq/RjIDgjRMXAoU6dOlV5z86dO1csX7NmDe5ea1xsm9XFrVmzJqW42HumEhd779WrV9OxY8cq17Ami0u2z4lxqUqnbWIOOOAAcnNz2WuvvXj77beZM2cO3bp1q1j+6aef8sEHHzB+/Hh+85vfMGvWLA4//HB+/vOfc/vtt6dVv9o899xz5OTk0KlTJ0466SQuvPBCrrjiioy+h0im6VxNFqppxpooRig+9dRT9OzZs1JZ/OnKmJycHK6++mpGjx7N7NmzOeyww6rEtG3blqeeeop33nmH559/ngULFjB37lxefPFFnnzySWbMmFHjBAo//elPmTlzZsXrKVOmcM4559Rh76QuHn74Yb7++msWL17MLbfcwuGHH85LL71Er169gOBH0zfffMODDz7I8ccfD8CQIUNYunQpN9xwAxdddFHGJsz4yU9+wquvvkpZWRklJSXccsstmBkTJ07MyPZF6oOOhLNQts1Ys99++1FYWFjpkXiqNGbUqFEMGDCg1r7h/v37c8kllzB9+nQ+/fRTTj/9dGbNmsVzzz0HBJc2ffnll1UuL7rzzjt59dVXefbZZyuVx47e4o9QY1avXl1xdBg7wqwtLrbN6uLijxZriouvW21xsffu1KkTa9eurTjKryku2T4nxqUqnbaJ2XfffTnggAM49dRTKSkpYd26ddx4440Vy2P9xIcffnil9YYOHcoXX3zBZ599llYda5KXl0dhYSFFRUX89re/5bLLLuPGG2+suEmDSDZSEs5CjXnGmhYtWnDdddfx73//u9aBPDFt2rRh/PjxwPZ+zCFDhrBlyxZmzJhRKXbPPfeksLCQgoLKZwT69u1Lbm5uRT9pzMaNG1m8eDH9+/cHoF27dvTq1atKXOy9Y3EQ9IPWNS4/P5/27dtXxC1ZsoT169dXiWvdunXFD5sBAwawadMmPvrooypxQMV7x/p+E987MS5V6bRNMh07dqRfv34VfdvxdaxOXQZe1aawsJBt27ZVDGQTyUZKwlmosc9YM2LECH74wx9yxRVXVDmaq+7I57333gNg1113BeCEE06gb9++/PrXv2bVqlW1vmfr1q0ZNmwYf/nLXyoN9nryySfZtGlTpT7sY445hueee46ysu1nFl566SWWLVtWJe7ll19m8eLFFWVLly7ln//8Z5W4FStWMH/+/Iqyr7/+muLi4kpxw4cPp7y8nGnTplWUbdmyhSeeeIKhQ4dWjBgfNmwYOTk5TJ06tdI+PvLII+y333707t0bgIEDB7LzzjsnjevcuTMHHXRQre2WKNW2SeaLL77gvffeo2/fvhVlI0aMAKjUhQAwY8YMevbsSffu3dOuY6rmz5+PmdGnT596ew+ROqvrNU7N5dHQ1wm//cjb/oc9/uBX29X+hz3+4G8/8nZGt5+KmibrWLBggZeXl1dcJ/ziiy9WWnfWrFkVk3jEXyd89NFH+6BBg/z222/3kpISnzVrlk+cONHz8vK8b9++/s0331TEvvXWW969e3ffbbfdfOLEiT5r1iyfN2+eP/74437SSSc54I8//nhF/BtvvOG5ubk+YsQInz17tt93333eqVMnP/HEEyvV7ZNPPvEuXbr4oEGD/IUXXvDHH3/c8/Pz/YADDqh0Pe26deu8b9++vt9++/nTTz/tzzzzjH/nO9/x3r17V6rn1q1bfeDAgd6zZ09/7LHHfMaMGX7IIYd4p06dfPny5ZXee+TIkd6xY0efMmWKz54920844QTPzc2tdB2zu/uvf/1rz83N9VtvvdXnzp3r48aNczOrMsHFvffe62bmEyZM8Llz5/oVV1zhZuZ33XVXpbilS5f6tGnTfNq0ab7PPvt4//79K17HT66Ratscd9xxfu211/rTTz/tc+bM8UmTJvnee+/teXl5/v7771fEbdu2zQ899FDv3Lmz33vvvT5z5kw/55xzqlzzu3TpUm/ZsqVfc801leo9b948nzZtmt95550O+AUXXFBR75i//e1vfsIJJ/iDDz7oc+bM8WeeecbHjRvnLVq08HHjxnltdJ2w7Cg0WUfTTcLZIJaEq3usWrWq2iTs7j548OAqSXjGjBk+evRo32uvvbx9+/beunVr79Onj19wwQWVZr+KWblypf/mN7/xAQMGeNu2bT03N9f79Onjo0eP9vnz51eJnz9/vh944IGe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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.subplots(figsize=(7,5))\n",
        "\n",
        "plt.scatter(high_correlation.iloc[:20, 1:2], high_correlation.iloc[20:40, 1:2], \n",
        "           c='purple', label='ENSG00000003989.16')\n",
        "\n",
        "plt.title('Scatter plot: RNA-seq vs Ribo-seq', fontsize=13)\n",
        "plt.xlabel(\"RNA-seq\")\n",
        "plt.ylabel(\"Ribo-seq\")\n",
        "\n",
        "plt.legend(loc='upper left')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 360
        },
        "id": "oFwdd6nZt3mV",
        "outputId": "d65e4ca8-6573-4ee2-8355-bf2ba86959a3"
      },
      "execution_count": 164,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 504x360 with 1 Axes>"
            ],
            "image/png": "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7c2PppyQP/zwwypjIgl54MCBbmb+5ptvxiyPT8jnnHOO77fffgn/GUcnw23btvlBBx3kBx10kK9evTrhtidMmOBfffVVxeuTTjrJu3fv7tu2basoe+yxxxzw119/vaLsiiuu8Ly8PF+3bl1F2Zw5cxzwp59+uqJs7Nix3qxZs5j9/+STT7x58+Z+1113VZRNmTLFAX/xxRcrytavX+/5+fl+2WWXVZS9+eabDvjDDz9cUVZeXu4HH3ywDxkypKLsiy++8MzMTL/hhhti9nfAgAFeWFgY89527dr58OHDY+JGjBjhbdu2jTkOiVx99dUO+Jo1a9zdfdmyZd6sWTO/8cYbY+IuueQSz87OjjnWvXv39t69e8fEbdiwwTMyMvzqq6+uKCsuLvZu3bp5eXl5Rdlrr73mgP/lL3+ptn7uuz4TH374YbUJ+cILL/SCggIvKyurcZ3x9sa/XWkcyU7IutuTJMWll17KAQccwHXXXVdt3Nq1a8nPzycrK6vSsmbNdn0cn376aT788ENuu+02qhrhftZZZ9GmTTBYvry8nOnTp3PGGWeQkbHrHNEZZ5xBZmYmzzzzTEXZs88+y49//OOKbneAvn37UlBQUCnuyCOPpHv37hVlXbp04aijjqoUd+CBB3L00UdXlOXl5TFkyJBKcRkZGZx55pkVZS1atOAnP/kJM2bMYOvWYNjDjBkz2LZtG2effXbM/p599tksXLiQJUuCYQ9z585lzZo1leLOOeccvvrqK15++eWExy2ibdu2FXUAePXVV9m5cyeDBw+OiRs0aBBbtmzh+eefryjbtm1bpck0cnNzycjIYOfOnRVl8+bN49hjj63YBkBRURFt27Zl8uTJ1CT6M1GVb775hscff5zzzz9fE3zIHk0JOU0tnLCQsZ3HcnOzmxnbeWxKL1zfsWMH27dvj3lE/9OF4HrO6667jn//+9/MmzevynV9//vf57333uOiiy7i1VdfZfv27QnjSktLad68OYMGDapVHT/++GO2bNlCr169Ysoj55zfeScYTL9582aWLFlSKQ6gZ8+eFXEQnGfe3bjly5ezcePGirguXbqQm5tbKW7btm189NFHFXFZWVkxXwQicUDFthcvDi5aiN92fFy07du3s3HjRkpKSrj77rs577zzKr6YNG/eHIDMzMyY90S+PC1atGsCvV/84heUlJTw0EMPsX79elasWMGll15KRkYGP//5zyvimjdvXml9kXVGr293vP7662zevJn99tuP0047jZycHFq2bMlJJ51U8eVFZE+ghJyG0m02mUMPPZSMjIyYx9ChQyvFnX/++XTt2pVRo0ZVua4rr7ySk046ifvvv58f/OAHtGrVioEDB/LAAw/EJPnPPvuMdu3aVZpsZefOnTFfDIJeIyoGZOXnV740vU2bNhXL161bh7vXGBdZZ1Vx69atq1VcZJu1iYtse+3atbRu3brSNbKJ4hLtc3xcxKJFi8jIyGCfffbh2GOP5dhjj2XcuHEVyw855BCASl+o5s6dW2l95513HuPGjeOSSy4hPz+fjh07MmXKFF544QUOPvjgmHXGr2/ZsmWsXLky4SC6+vj8888B+M1vfkPz5s159tlnGTduHAsWLKB///58/fXXSdmOSENTQk5D6TabzOTJk3nttddiHolG3mZkZHDTTTfx4osvUlJSknBdOTk5TJ48mcWLF3PHHXcwePBg5s+fz8iRIxk8eHBFgq3K8ccfH/PF4KGHHkrKPjYF3bt357XXXmP27Nn87ne/Y/LkyQwfPrxieY8ePTjmmGO48cYbmTFjBuvXr2fy5MkVv+vo7uNnnnmGSy65hAsvvJCSkhKmTp1Kr169OP7442Navpdffjmvvvoq1113HatXr+a9997jnHPOoVmzZrXqjq6NyBe5rl278sQTT3Dsscdy1lln8dRTT7F8+XLGj4+/r4xIemrsm0tILaTbbDK9evWq1H1alWHDhnHbbbdx3XXXccwxx1QZ16NHD3r0COZm2bJlCxdccAHjx49n2rRpnHDCCXTs2JGSkhI2b94c00q+5557KCsrY+XKlTGt9EgrMbrlGrF27dqKbtxIy7OquEjrMrLOquKiW6XVxUXXLT8/n2XLllUZF9l2fn4+69evx91jWsmJ4iL7fMABB1QZF5GdnU1RUXCnuH79+nHAAQcwYsQILrvsMo488kgguNRt2LBhFacKWrVqxe23385FF11UsQ13Z+TIkZx22mn86U9/qlj/wIEDOfTQQ7n++usrzg8PGzaM9957jzvvvJMxY8ZgZpx55pmVEvfuiJwLLy4ujjlekR6YBQsWJGU7Ig1NLeQ0lO6zyVSnWbNmjB49mldeeSVmQFN1srOzufLKK4Fd5z0HDBjA9u3bmT59ekzsQQcdRFFR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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.subplots(figsize=(7,5))\n",
        "\n",
        "plt.scatter(high_correlation.iloc[:20, 2:3], high_correlation.iloc[20:40, 2:3], \n",
        "            c='purple', label='ENSG00000006453.13')\n",
        "\n",
        "plt.title('Scatter plot: RNA-seq vs Ribo-seq', fontsize=13)\n",
        "plt.xlabel(\"RNA-seq\")\n",
        "plt.ylabel(\"Ribo-seq\")\n",
        "\n",
        "plt.legend(loc='upper left')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 360
        },
        "id": "TooKfXIvt_eh",
        "outputId": "aed5a8d7-ca77-43b2-d70b-79470e4d7357"
      },
      "execution_count": 165,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 504x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.subplots(figsize=(7,5))\n",
        "\n",
        "plt.scatter(high_correlation.iloc[:20, 3:4], high_correlation.iloc[20:40, 3:4], \n",
        "            c='purple', label='ENSG00000008517.16')\n",
        "\n",
        "plt.title('Scatter plot: RNA-seq vs Ribo-seq', fontsize=13)\n",
        "plt.xlabel(\"RNA-seq\")\n",
        "plt.ylabel(\"Ribo-seq\")\n",
        "\n",
        "plt.legend(loc='upper left')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 360
        },
        "id": "ZVY5d597uFCT",
        "outputId": "27c35a3c-add4-4830-c244-09cc443e7e1d"
      },
      "execution_count": 166,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 504x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Итого, для выбранных для примера генов с высоким коэффициентом корреляции Спирмана можно проследить корреляцию числа каунтов в РНК-секе и Рибо-секе по образцам. Не совсем линейная зависимость, но что-то похожее прослеживается."
      ],
      "metadata": {
        "id": "_bjbICaduLD_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "plt.subplots(figsize=(7,5))\n",
        "\n",
        "plt.scatter(low_correlation.iloc[:20, 0:1], low_correlation.iloc[20:40, 0:1], \n",
        "            c='red', label='ENSG00000146067.15')\n",
        "\n",
        "plt.title('Scatter plot: RNA-seq vs Ribo-seq', fontsize=13)\n",
        "plt.xlabel(\"RNA-seq\")\n",
        "plt.ylabel(\"Ribo-seq\")\n",
        "\n",
        "plt.legend(loc='upper left')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 360
        },
        "id": "YpU1cU6EyQvk",
        "outputId": "a773ae8f-b874-420e-ea83-4222adb2bc8a"
      },
      "execution_count": 167,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 504x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.subplots(figsize=(7,5))\n",
        "\n",
        "plt.scatter(low_correlation.iloc[:20, 1:2], low_correlation.iloc[20:40, 1:2], \n",
        "            c='red', label='ENSG00000179965.11')\n",
        "\n",
        "plt.title('Scatter plot: RNA-seq vs Ribo-seq', fontsize=13)\n",
        "plt.xlabel(\"RNA-seq\")\n",
        "plt.ylabel(\"Ribo-seq\")\n",
        "\n",
        "plt.legend(loc='upper left')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 360
        },
        "id": "cwxqmkBc1f0D",
        "outputId": "d53c9aee-51a6-4df6-b2e4-f313dcd8146b"
      },
      "execution_count": 168,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 504x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.subplots(figsize=(7,5))\n",
        "\n",
        "plt.scatter(low_correlation.iloc[:20, 2:3], low_correlation.iloc[20:40, 2:3], \n",
        "            c='red', label='ENSG00000203896.9')\n",
        "\n",
        "plt.title('Scatter plot: RNA-seq vs Ribo-seq', fontsize=13)\n",
        "plt.xlabel(\"RNA-seq\")\n",
        "plt.ylabel(\"Ribo-seq\")\n",
        "\n",
        "plt.legend(loc='upper left')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 360
        },
        "id": "h-k6TsBf1nIA",
        "outputId": "7f88e900-273c-423d-ec38-9b69bd30e3dc"
      },
      "execution_count": 169,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 504x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.subplots(figsize=(7,5))\n",
        "\n",
        "plt.scatter(low_correlation.iloc[:20, 3:4], low_correlation.iloc[20:40, 3:4], \n",
        "            c='red', label='ENSG00000242028.5')\n",
        "\n",
        "plt.title('Scatter plot: RNA-seq vs Ribo-seq', fontsize=13)\n",
        "plt.xlabel(\"RNA-seq\")\n",
        "plt.ylabel(\"Ribo-seq\")\n",
        "\n",
        "plt.legend(loc='upper left')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 360
        },
        "id": "clyTQ8wS17yA",
        "outputId": "b13c58f7-3307-47b9-b008-f32a84618050"
      },
      "execution_count": 170,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 504x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Итого, как и ожидалось, никакой корреляции между каунтами генов с низким коэффициентом корреляции Спирмана не наблюдается. В генах с высокой степенью корреляции по Спирману мы видели что-то похожее на линейную зависимость, а на этих графиках точки беспорядочно разбросаны. \n",
        "\n",
        "Таким образом, высокая/низкая корреляция генов между РНК-сек и Рибо-сек может объясняться наличием/отсутствием зависимости их каунтов в обоих секах."
      ],
      "metadata": {
        "id": "dcOlPnE22A37"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Кроме scatter plot, можно построить boxplot и посмотреть, как меняется распределение каунтов генов в нормальных и опухолевых образцах РНК-сека и Рибо-сека."
      ],
      "metadata": {
        "id": "IHAZKcQT4Yp-"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Сначала для генов с высоким коэффициентом корреляции"
      ],
      "metadata": {
        "id": "XMqXvWjVISjH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import seaborn as sns\n",
        "\n",
        "sns.catplot(data=high_correlation, kind='box', col='Seq', x='tissue', y='ENSG00000001036.13', \n",
        "            hue='tissue', sharey=False, height=5, palette = 'magma')\n",
        "sns.catplot(data=high_correlation, kind='box', col='Seq', x='tissue', y='ENSG00000003989.16', \n",
        "            hue='tissue', sharey=False, height=5, palette = 'rainbow')\n",
        "sns.catplot(data=high_correlation, kind='box', col='Seq', x='tissue', y='ENSG00000006453.13', \n",
        "            hue='tissue', sharey=False, height=5, palette = 'autumn')\n",
        "sns.catplot(data=high_correlation, kind='box', col='Seq', x='tissue', y='ENSG00000008517.16', \n",
        "            hue='tissue', sharey=False, height=5, palette = 'winter')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "56H5v1zF8Wix",
        "outputId": "aadc8ffc-d3ea-4676-b86e-126bb429531d"
      },
      "execution_count": 171,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.FacetGrid at 0x7fe41b5c2d00>"
            ]
          },
          "metadata": {},
          "execution_count": 171
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x360 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x360 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x360 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x360 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "По boxplot видим, что экспрессия генов зависит от конкретного типа ткани, откуда был взят образец. Так, 3 гена высоко экспрессированы в опухолевой ткани, а 1 высоко экспрессирован в нормальной ткани. Это может быть связано с биологическими процессами регуляции транскрипции этих генов."
      ],
      "metadata": {
        "id": "nY1x95PVGc0n"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Построим boxplot для генов с низким коэффициентом корреляции."
      ],
      "metadata": {
        "id": "RYGEoC1LIXR5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "sns.catplot(data=low_correlation, kind='box', col='Seq', x='tissue', y='ENSG00000146067.15', \n",
        "            hue='tissue', sharey=False, height=5, palette = 'magma')\n",
        "sns.catplot(data=low_correlation, kind='box', col='Seq', x='tissue', y='ENSG00000179965.11',\n",
        "            hue='tissue', sharey=False, height=5, palette = 'rainbow')\n",
        "sns.catplot(data=low_correlation, kind='box', col='Seq', x='tissue', y='ENSG00000203896.9', \n",
        "            hue='tissue', sharey=False, height=5, palette = 'autumn')\n",
        "sns.catplot(data=low_correlation, kind='box', col='Seq', x='tissue', y='ENSG00000242028.5', \n",
        "            hue='tissue', sharey=False, height=5, palette = 'winter')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "2UJ-sxIyGcQt",
        "outputId": "aa32cfda-11e7-4fd2-fc1f-e64c9534841e"
      },
      "execution_count": 172,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.FacetGrid at 0x7fe41b5b0fd0>"
            ]
          },
          "metadata": {},
          "execution_count": 172
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x360 with 2 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x360 with 2 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x360 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x360 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Итак, можно заметить, что у генов с низким коэффициентом корреляции не прослеживается зависимость уровня экспрессии от типа ткани. Когда в нормальной ткани ген экспрессирован высоко, то в опухолевой его уровень экспресии невысокий, и наоборот. Значит, у генов с низкой корреляцией нет зависимости уровня экспрессии от типа ткани."
      ],
      "metadata": {
        "id": "uN3e_rZoJJuP"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "1.3. Проанализируйте распределение каунтов Ribo-seq:\n",
        "постройте зависимость дисперсии от среднего. Похоже ли это на\n",
        "NB-распределение? Если нет, то на какое похоже? Если да, то какие\n",
        "статистические тесты можно использовать для подтверждения того, что перед\n",
        "вами NB-распределение?\n"
      ],
      "metadata": {
        "id": "C7scRgn8J39a"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "RPF_mean = np.mean(RPF, axis=1)\n",
        "RPF_var = np.var(RPF, axis=1)\n",
        "\n",
        "RPF_mean = RPF_mean.to_numpy()\n",
        "RPF_var = RPF_var.to_numpy()\n",
        "\n",
        "fig, ax = plt.subplots(figsize=(10, 10))\n",
        "sns.scatterplot(x = RPF_mean, y = RPF_var, color = 'red')\n",
        "ax.set_xlabel(\"Mean of Ribo-seq counts\", fontsize = 12)\n",
        "ax.set_ylabel(\"Var of Ribo-seq counts\", fontsize = 12)\n",
        "ax.set_xscale(\"log\")\n",
        "ax.set_yscale(\"log\")\n",
        "ax.set_title(\"Dependence of variance on the mean for counts Ribo-seq\", fontsize = 16)\n",
        "ax.set(xlim=(10**(-2),10**6),ylim=(10**(-2),10**12))\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 724
        },
        "id": "KuXVpkIxRSS7",
        "outputId": "5fc1d7e9-afbb-4a57-bd74-7b22b0b4eb9d"
      },
      "execution_count": 173,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/numpy/core/fromnumeric.py:3438: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.\n",
            "  return mean(axis=axis, dtype=dtype, out=out, **kwargs)\n",
            "/usr/local/lib/python3.8/dist-packages/numpy/core/fromnumeric.py:3721: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.\n",
            "  return var(axis=axis, dtype=dtype, out=out, ddof=ddof, **kwargs)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x720 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Похоже на негативное биномиальное распределение. Потвердим это тестом Колмогорова-Смирнова. Подадим в качестве параметров массив средних и дисперсий."
      ],
      "metadata": {
        "id": "ruPiJRURx8CD"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import scipy\n",
        "from scipy import stats\n",
        "from scipy.stats import kstest\n",
        "\n",
        "stats.kstest(RPF_mean, RPF_var)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TXQP2vCVawZs",
        "outputId": "2417c7c2-c233-403b-accc-f336a666c99a"
      },
      "execution_count": 174,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "KstestResult(statistic=0.4483504882554764, pvalue=0.0)"
            ]
          },
          "metadata": {},
          "execution_count": 174
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "pvalue < 0.05, тогда гипотеза о том что это NB распределение подтверждается."
      ],
      "metadata": {
        "id": "DbKKnJnsBQ06"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##DESeq2"
      ],
      "metadata": {
        "id": "5h723s88T6X-"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "1.4. а) Найдите дифференциально экспрессированные гены по\n",
        "RNA-Seq между нормой и опухолью. Для этого можете использовать DESeq2\n",
        "или edgeR (для DESeq есть обёртка на Python). \n",
        "\n",
        "б) Постройте volcano plot. \n",
        "\n",
        "То же самое сделайте и для Ribo-Seq эксперимента. \n",
        "\n",
        "в) Совпадают ли результаты\n",
        "дифференциальной экспрессии? Какие гены оказались значимо различны по\n",
        "экспрессии в одном случае, а какие — в другом? \n",
        "\n",
        "г) Проведите похожий анализ,\n",
        "только с поиском генов с разницей в эффективности трансляции (~ method +\n",
        "condition + method:condition). \n",
        "\n",
        "д) Что вы скажете о наборе генов, который\n",
        "вы получили этим методом? Выводы подкрепите графиками."
      ],
      "metadata": {
        "id": "dIWrLKuu-cn_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "!Rscript -e 'install.packages(c(\"BiocManager\"), repos=\"https://cloud.r-project.org\")'"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0VqC9KdOKioe",
        "outputId": "0bc51224-f202-49e6-e87f-22db4b1683a0"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Installing package into ‘/usr/local/lib/R/site-library’\n",
            "(as ‘lib’ is unspecified)\n",
            "trying URL 'https://cloud.r-project.org/src/contrib/BiocManager_1.30.19.tar.gz'\n",
            "Content type 'application/x-gzip' length 264151 bytes (257 KB)\n",
            "==================================================\n",
            "downloaded 257 KB\n",
            "\n",
            "* installing *source* package ‘BiocManager’ ...\n",
            "** package ‘BiocManager’ successfully unpacked and MD5 sums checked\n",
            "** using staged installation\n",
            "** R\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** installing vignettes\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (BiocManager)\n",
            "\n",
            "The downloaded source packages are in\n",
            "\t‘/tmp/RtmpiykRoc/downloaded_packages’\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!Rscript -e 'BiocManager::install(\"DESeq2\")'"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HeRy1Pu4NUsC",
        "outputId": "d8a0dab9-80fc-45eb-b156-ecc1f6209473"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "'getOption(\"repos\")' replaces Bioconductor standard repositories, see\n",
            "'?repositories' for details\n",
            "\n",
            "replacement repositories:\n",
            "    CRAN: https://cran.rstudio.com\n",
            "\n",
            "Bioconductor version 3.16 (BiocManager 1.30.19), R 4.2.2 Patched (2022-11-10\n",
            "  r83330)\n",
            "Installing package(s) 'BiocVersion', 'DESeq2'\n",
            "also installing the dependencies ‘bitops’, ‘formatR’, ‘plogr’, ‘png’, ‘Biostrings’, ‘RCurl’, ‘GenomeInfoDbData’, ‘zlibbioc’, ‘lambda.r’, ‘futile.options’, ‘XML’, ‘xtable’, ‘RSQLite’, ‘KEGGREST’, ‘GenomeInfoDb’, ‘XVector’, ‘MatrixGenerics’, ‘DelayedArray’, ‘futile.logger’, ‘snow’, ‘BH’, ‘annotate’, ‘AnnotationDbi’, ‘S4Vectors’, ‘IRanges’, ‘GenomicRanges’, ‘SummarizedExperiment’, ‘BiocGenerics’, ‘Biobase’, ‘BiocParallel’, ‘matrixStats’, ‘locfit’, ‘geneplotter’, ‘Rcpp’, ‘RcppArmadillo’\n",
            "\n",
            "trying URL 'https://cran.rstudio.com/src/contrib/bitops_1.0-7.tar.gz'\n",
            "Content type 'application/x-gzip' length 10809 bytes (10 KB)\n",
            "==================================================\n",
            "downloaded 10 KB\n",
            "\n",
            "trying URL 'https://cran.rstudio.com/src/contrib/formatR_1.12.tar.gz'\n",
            "Content type 'application/x-gzip' length 95944 bytes (93 KB)\n",
            "==================================================\n",
            "downloaded 93 KB\n",
            "\n",
            "trying URL 'https://cran.rstudio.com/src/contrib/plogr_0.2.0.tar.gz'\n",
            "Content type 'application/x-gzip' length 7795 bytes\n",
            "==================================================\n",
            "downloaded 7795 bytes\n",
            "\n",
            "trying URL 'https://cran.rstudio.com/src/contrib/png_0.1-8.tar.gz'\n",
            "Content type 'application/x-gzip' length 24880 bytes (24 KB)\n",
            "==================================================\n",
            "downloaded 24 KB\n",
            "\n",
            "trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/Biostrings_2.66.0.tar.gz'\n",
            "Content type 'application/x-gzip' length 12426149 bytes (11.9 MB)\n",
            "==================================================\n",
            "downloaded 11.9 MB\n",
            "\n",
            "trying URL 'https://cran.rstudio.com/src/contrib/RCurl_1.98-1.9.tar.gz'\n",
            "Content type 'application/x-gzip' length 731611 bytes (714 KB)\n",
            "==================================================\n",
            "downloaded 714 KB\n",
            "\n",
            "trying URL 'https://bioconductor.org/packages/3.16/data/annotation/src/contrib/GenomeInfoDbData_1.2.9.tar.gz'\n",
            "Content type 'application/x-gzip' length 11725198 bytes (11.2 MB)\n",
            "==================================================\n",
            "downloaded 11.2 MB\n",
            "\n",
            "trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/zlibbioc_1.44.0.tar.gz'\n",
            "Content type 'application/x-gzip' length 214256 bytes (209 KB)\n",
            "==================================================\n",
            "downloaded 209 KB\n",
            "\n",
            "trying URL 'https://cran.rstudio.com/src/contrib/lambda.r_1.2.4.tar.gz'\n",
            "Content type 'application/x-gzip' length 25666 bytes (25 KB)\n",
            "==================================================\n",
            "downloaded 25 KB\n",
            "\n",
            "trying URL 'https://cran.rstudio.com/src/contrib/futile.options_1.0.1.tar.gz'\n",
            "Content type 'application/x-gzip' length 3919 bytes\n",
            "==================================================\n",
            "downloaded 3919 bytes\n",
            "\n",
            "trying URL 'https://cran.rstudio.com/src/contrib/XML_3.99-0.13.tar.gz'\n",
            "Content type 'application/x-gzip' length 970757 bytes (948 KB)\n",
            "==================================================\n",
            "downloaded 948 KB\n",
            "\n",
            "trying URL 'https://cran.rstudio.com/src/contrib/xtable_1.8-4.tar.gz'\n",
            "Content type 'application/x-gzip' length 564589 bytes (551 KB)\n",
            "==================================================\n",
            "downloaded 551 KB\n",
            "\n",
            "trying URL 'https://cran.rstudio.com/src/contrib/RSQLite_2.2.19.tar.gz'\n",
            "Content type 'application/x-gzip' length 3730412 bytes (3.6 MB)\n",
            "==================================================\n",
            "downloaded 3.6 MB\n",
            "\n",
            "trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/KEGGREST_1.38.0.tar.gz'\n",
            "Content type 'application/x-gzip' length 25823 bytes (25 KB)\n",
            "==================================================\n",
            "downloaded 25 KB\n",
            "\n",
            "trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/GenomeInfoDb_1.34.4.tar.gz'\n",
            "Content type 'application/x-gzip' length 3468846 bytes (3.3 MB)\n",
            "==================================================\n",
            "downloaded 3.3 MB\n",
            "\n",
            "trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/XVector_0.38.0.tar.gz'\n",
            "Content type 'application/x-gzip' length 67821 bytes (66 KB)\n",
            "==================================================\n",
            "downloaded 66 KB\n",
            "\n",
            "trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/MatrixGenerics_1.10.0.tar.gz'\n",
            "Content type 'application/x-gzip' length 28590 bytes (27 KB)\n",
            "==================================================\n",
            "downloaded 27 KB\n",
            "\n",
            "trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/DelayedArray_0.24.0.tar.gz'\n",
            "Content type 'application/x-gzip' length 642972 bytes (627 KB)\n",
            "==================================================\n",
            "downloaded 627 KB\n",
            "\n",
            "trying URL 'https://cran.rstudio.com/src/contrib/futile.logger_1.4.3.tar.gz'\n",
            "Content type 'application/x-gzip' length 17456 bytes (17 KB)\n",
            "==================================================\n",
            "downloaded 17 KB\n",
            "\n",
            "trying URL 'https://cran.rstudio.com/src/contrib/snow_0.4-4.tar.gz'\n",
            "Content type 'application/x-gzip' length 20464 bytes (19 KB)\n",
            "==================================================\n",
            "downloaded 19 KB\n",
            "\n",
            "trying URL 'https://cran.rstudio.com/src/contrib/BH_1.78.0-0.tar.gz'\n",
            "Content type 'application/x-gzip' length 13269768 bytes (12.7 MB)\n",
            "==================================================\n",
            "downloaded 12.7 MB\n",
            "\n",
            "trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/annotate_1.76.0.tar.gz'\n",
            "Content type 'application/x-gzip' length 1473810 bytes (1.4 MB)\n",
            "==================================================\n",
            "downloaded 1.4 MB\n",
            "\n",
            "trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/AnnotationDbi_1.60.0.tar.gz'\n",
            "Content type 'application/x-gzip' length 4328584 bytes (4.1 MB)\n",
            "==================================================\n",
            "downloaded 4.1 MB\n",
            "\n",
            "trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/S4Vectors_0.36.1.tar.gz'\n",
            "Content type 'application/x-gzip' length 623234 bytes (608 KB)\n",
            "==================================================\n",
            "downloaded 608 KB\n",
            "\n",
            "trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/IRanges_2.32.0.tar.gz'\n",
            "Content type 'application/x-gzip' length 456112 bytes (445 KB)\n",
            "==================================================\n",
            "downloaded 445 KB\n",
            "\n",
            "trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/GenomicRanges_1.50.1.tar.gz'\n",
            "Content type 'application/x-gzip' length 1122617 bytes (1.1 MB)\n",
            "==================================================\n",
            "downloaded 1.1 MB\n",
            "\n",
            "trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/SummarizedExperiment_1.28.0.tar.gz'\n",
            "Content type 'application/x-gzip' length 1526682 bytes (1.5 MB)\n",
            "==================================================\n",
            "downloaded 1.5 MB\n",
            "\n",
            "trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/BiocGenerics_0.44.0.tar.gz'\n",
            "Content type 'application/x-gzip' length 47711 bytes (46 KB)\n",
            "==================================================\n",
            "downloaded 46 KB\n",
            "\n",
            "trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/Biobase_2.58.0.tar.gz'\n",
            "Content type 'application/x-gzip' length 1792896 bytes (1.7 MB)\n",
            "==================================================\n",
            "downloaded 1.7 MB\n",
            "\n",
            "trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/BiocParallel_1.32.4.tar.gz'\n",
            "Content type 'application/x-gzip' length 976785 bytes (953 KB)\n",
            "==================================================\n",
            "downloaded 953 KB\n",
            "\n",
            "trying URL 'https://cran.rstudio.com/src/contrib/matrixStats_0.63.0.tar.gz'\n",
            "Content type 'application/x-gzip' length 202957 bytes (198 KB)\n",
            "==================================================\n",
            "downloaded 198 KB\n",
            "\n",
            "trying URL 'https://cran.rstudio.com/src/contrib/locfit_1.5-9.6.tar.gz'\n",
            "Content type 'application/x-gzip' length 200986 bytes (196 KB)\n",
            "==================================================\n",
            "downloaded 196 KB\n",
            "\n",
            "trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/geneplotter_1.76.0.tar.gz'\n",
            "Content type 'application/x-gzip' length 1394395 bytes (1.3 MB)\n",
            "==================================================\n",
            "downloaded 1.3 MB\n",
            "\n",
            "trying URL 'https://cran.rstudio.com/src/contrib/Rcpp_1.0.9.tar.gz'\n",
            "Content type 'application/x-gzip' length 2957812 bytes (2.8 MB)\n",
            "==================================================\n",
            "downloaded 2.8 MB\n",
            "\n",
            "trying URL 'https://cran.rstudio.com/src/contrib/RcppArmadillo_0.11.4.2.1.tar.gz'\n",
            "Content type 'application/x-gzip' length 1372103 bytes (1.3 MB)\n",
            "==================================================\n",
            "downloaded 1.3 MB\n",
            "\n",
            "trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/BiocVersion_3.16.0.tar.gz'\n",
            "Content type 'application/x-gzip' length 965 bytes\n",
            "==================================================\n",
            "downloaded 965 bytes\n",
            "\n",
            "trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/DESeq2_1.38.1.tar.gz'\n",
            "Content type 'application/x-gzip' length 2113316 bytes (2.0 MB)\n",
            "==================================================\n",
            "downloaded 2.0 MB\n",
            "\n",
            "* installing *source* package ‘bitops’ ...\n",
            "** package ‘bitops’ successfully unpacked and MD5 sums checked\n",
            "** using staged installation\n",
            "** libs\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c bit-ops.c -o bit-ops.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c cksum.c -o cksum.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c init.c -o init.o\n",
            "gcc -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o bitops.so bit-ops.o cksum.o init.o -L/usr/lib/R/lib -lR\n",
            "installing to /usr/local/lib/R/site-library/00LOCK-bitops/00new/bitops/libs\n",
            "** R\n",
            "** byte-compile and prepare package for lazy loading\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** checking absolute paths in shared objects and dynamic libraries\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (bitops)\n",
            "* installing *source* package ‘formatR’ ...\n",
            "** package ‘formatR’ successfully unpacked and MD5 sums checked\n",
            "** using staged installation\n",
            "** R\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** installing vignettes\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (formatR)\n",
            "* installing *source* package ‘plogr’ ...\n",
            "** package ‘plogr’ successfully unpacked and MD5 sums checked\n",
            "** using staged installation\n",
            "** R\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (plogr)\n",
            "* installing *source* package ‘png’ ...\n",
            "** package ‘png’ successfully unpacked and MD5 sums checked\n",
            "** using staged installation\n",
            "** libs\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      `libpng-config --cflags` -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c dummy.c -o dummy.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      `libpng-config --cflags` -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c read.c -o read.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      `libpng-config --cflags` -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c write.c -o write.o\n",
            "gcc -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o png.so dummy.o read.o write.o -lpng16 -lm -lz -lm -L/usr/lib/R/lib -lR\n",
            "installing to /usr/local/lib/R/site-library/00LOCK-png/00new/png/libs\n",
            "** R\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** checking absolute paths in shared objects and dynamic libraries\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (png)\n",
            "* installing *source* package ‘GenomeInfoDbData’ ...\n",
            "** using staged installation\n",
            "** data\n",
            "** inst\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (GenomeInfoDbData)\n",
            "* installing *source* package ‘zlibbioc’ ...\n",
            "** using staged installation\n",
            "configure: creating ./config.status\n",
            "config.status: creating src/Makevars\n",
            "** libs\n",
            "mkdir -p \"/usr/local/lib/R/site-library/00LOCK-zlibbioc/00new/zlibbioc/include\"\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c R_init_zlibbioc.c -o R_init_zlibbioc.o\n",
            "gcc -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o zlibbioc.so R_init_zlibbioc.o -L/usr/lib/R/lib -lR\n",
            "installing to /usr/local/lib/R/site-library/00LOCK-zlibbioc/00new/zlibbioc/libs\n",
            "** R\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** installing vignettes\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** checking absolute paths in shared objects and dynamic libraries\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (zlibbioc)\n",
            "* installing *source* package ‘futile.options’ ...\n",
            "** package ‘futile.options’ successfully unpacked and MD5 sums checked\n",
            "** using staged installation\n",
            "** R\n",
            "** byte-compile and prepare package for lazy loading\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (futile.options)\n",
            "* installing *source* package ‘XML’ ...\n",
            "** package ‘XML’ successfully unpacked and MD5 sums checked\n",
            "** using staged installation\n",
            "checking for gcc... gcc\n",
            "checking whether the C compiler works... yes\n",
            "checking for C compiler default output file name... a.out\n",
            "checking for suffix of executables... \n",
            "checking whether we are cross compiling... no\n",
            "checking for suffix of object files... o\n",
            "checking whether the compiler supports GNU C... yes\n",
            "checking whether gcc accepts -g... yes\n",
            "checking for gcc option to enable C11 features... none needed\n",
            "checking how to run the C preprocessor... gcc -E\n",
            "checking for sed... /bin/sed\n",
            "checking for pkg-config... /usr/bin/pkg-config\n",
            "checking for xml2-config... /usr/bin/xml2-config\n",
            "USE_XML2 = yes\n",
            "SED_EXTENDED_ARG: -E\n",
            "Minor 9, Patch 4 for 2.9.4\n",
            "Located parser file -I/usr/include/libxml2/parser.h\n",
            "Checking for 1.8:  -I/usr/include/libxml2\n",
            "Using libxml2.*\n",
            "checking for gzopen in -lz... yes\n",
            "checking for xmlParseFile in -lxml2... yes\n",
            "checking for xmlHashSize in -lxml2... yes\n",
            "Using built-in xmlHashSize\n",
            "Checking DTD parsing (presence of externalSubset)...\n",
            "checking for xmlHashSize in -lxml2... (cached) yes\n",
            "Found xmlHashSize\n",
            "checking for xmlOutputBufferCreateBuffer in -lxml2... yes\n",
            "have xmlOutputBufferCreateBuffer()\n",
            "checking for xmlDocDumpFormatMemoryEnc in -lxml2... yes\n",
            "checking for libxml/xmlversion.h... yes\n",
            "Expat:  FALSE\n",
            "Checking for return type of xmlHashScan element routine.\n",
            "No return value for xmlHashScan\n",
            "xmlNs has a context field\n",
            "Checking for cetype_t enumeration\n",
            "No cetype_t enumeration defined in R headers.\n",
            "checking for xmlsec1-config... no\n",
            "nodegc default \n",
            "xml-debug default \n",
            "Version has XML_WITH_ZLIB\n",
            "Version has xmlHasFeature()\n",
            "\n",
            "****************************************\n",
            "Configuration information:\n",
            "\n",
            "Libxml settings\n",
            "\n",
            "libxml include directory: -I/usr/include/libxml2\n",
            "libxml library directory: -lxml2 -lz  -lxml2\n",
            "libxml 2:                 -DLIBXML2=1\n",
            "\n",
            "Compilation flags:         -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1 \n",
            "Link flags:               -lxml2 -lz  -lxml2\n",
            "\n",
            "****************************************\n",
            "configure: creating ./config.status\n",
            "config.status: creating src/Makevars\n",
            "config.status: creating R/supports.R\n",
            "config.status: creating inst/scripts/RSXML.csh\n",
            "config.status: creating inst/scripts/RSXML.bsh\n",
            "** libs\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c DocParse.c -o DocParse.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c EventParse.c -o EventParse.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c ExpatParse.c -o ExpatParse.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c HTMLParse.c -o HTMLParse.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c NodeGC.c -o NodeGC.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c RSDTD.c -o RSDTD.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c RUtils.c -o RUtils.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c Rcatalog.c -o Rcatalog.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c Utils.c -o Utils.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c XMLEventParse.c -o XMLEventParse.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c XMLHashTree.c -o XMLHashTree.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c XMLTree.c -o XMLTree.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c fixNS.c -o fixNS.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c libxmlFeatures.c -o libxmlFeatures.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c schema.c -o schema.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c xmlsecurity.c -o xmlsecurity.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG -DLIBXML -I/usr/include/libxml2 -DUSE_EXTERNAL_SUBSET=1 -DROOT_HAS_DTD_NODE=1 -DDUMP_WITH_ENCODING=1 -DUSE_XML_VERSION_H=1 -DXML_ELEMENT_ETYPE=1 -DXML_ATTRIBUTE_ATYPE=1 -DNO_XML_HASH_SCANNER_RETURN=1 -DLIBXML_NAMESPACE_HAS_CONTEXT=1 -DHAVE_XML_WITH_ZLIB=1 -DHAVE_XML_HAS_FEATURE=1 -DUSE_R=1 -D_R_=1  -DHAVE_VALIDITY=1 -DXML_REF_COUNT_NODES=1  -I. -DLIBXML2=1     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c xpath.c -o xpath.o\n",
            "gcc -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o XML.so DocParse.o EventParse.o ExpatParse.o HTMLParse.o NodeGC.o RSDTD.o RUtils.o Rcatalog.o Utils.o XMLEventParse.o XMLHashTree.o XMLTree.o fixNS.o libxmlFeatures.o schema.o xmlsecurity.o xpath.o -lxml2 -lz -lxml2 -L/usr/lib/R/lib -lR\n",
            "installing to /usr/local/lib/R/site-library/00LOCK-XML/00new/XML/libs\n",
            "** R\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "Creating a generic function for ‘source’ from package ‘base’ in package ‘XML’\n",
            "in method for ‘xmlAttrsToDataFrame’ with signature ‘\"AsIs\"’: no definition for class “AsIs”\n",
            "in method for ‘readKeyValueDB’ with signature ‘\"AsIs\"’: no definition for class “AsIs”\n",
            "in method for ‘readSolrDoc’ with signature ‘\"AsIs\"’: no definition for class “AsIs”\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** checking absolute paths in shared objects and dynamic libraries\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (XML)\n",
            "* installing *source* package ‘xtable’ ...\n",
            "** package ‘xtable’ successfully unpacked and MD5 sums checked\n",
            "** using staged installation\n",
            "** R\n",
            "** data\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** installing vignettes\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (xtable)\n",
            "* installing *source* package ‘snow’ ...\n",
            "** package ‘snow’ successfully unpacked and MD5 sums checked\n",
            "** using staged installation\n",
            "** R\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (snow)\n",
            "* installing *source* package ‘BH’ ...\n",
            "** package ‘BH’ successfully unpacked and MD5 sums checked\n",
            "** using staged installation\n",
            "** inst\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (BH)\n",
            "* installing *source* package ‘BiocGenerics’ ...\n",
            "** using staged installation\n",
            "** R\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "Creating a new generic function for ‘aperm’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘append’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘as.data.frame’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘cbind’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘rbind’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘do.call’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘duplicated’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘anyDuplicated’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘eval’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘pmax’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘pmin’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘pmax.int’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘pmin.int’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘Reduce’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘Filter’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘Find’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘Map’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘Position’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘get’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘mget’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘grep’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘grepl’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘is.unsorted’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘lapply’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘sapply’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘mapply’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘match’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘order’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘paste’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘rank’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘rownames’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘colnames’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘union’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘intersect’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘setdiff’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘sort’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘table’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘tapply’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘unique’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘unsplit’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘var’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘sd’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘which.min’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘which.max’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘IQR’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘mad’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘xtabs’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘basename’ in package ‘BiocGenerics’\n",
            "Creating a new generic function for ‘dirname’ in package ‘BiocGenerics’\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (BiocGenerics)\n",
            "* installing *source* package ‘matrixStats’ ...\n",
            "** package ‘matrixStats’ successfully unpacked and MD5 sums checked\n",
            "** using staged installation\n",
            "** libs\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c 000.init.c -o 000.init.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c allocMatrix2.c -o allocMatrix2.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c anyMissing.c -o anyMissing.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c binCounts.c -o binCounts.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c binMeans.c -o binMeans.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c colCounts.c -o colCounts.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c colOrderStats.c -o colOrderStats.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c colRanges.c -o colRanges.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c diff2.c -o diff2.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c indexByRow.c -o indexByRow.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c logSumExp.c -o logSumExp.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c mean2.c -o mean2.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c naming.c -o naming.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c productExpSumLog.c -o productExpSumLog.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c psortKM.c -o psortKM.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c rowCounts.c -o rowCounts.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c rowCummaxs.c -o rowCummaxs.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c rowCummins.c -o rowCummins.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c rowCumprods.c -o rowCumprods.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c rowCumsums.c -o rowCumsums.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c rowDiffs.c -o rowDiffs.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c rowLogSumExp.c -o rowLogSumExp.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c rowMads.c -o rowMads.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c rowMeans2.c -o rowMeans2.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c rowMedians.c -o rowMedians.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c rowOrderStats.c -o rowOrderStats.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c rowRanges.c -o rowRanges.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c rowRanksWithTies.c -o rowRanksWithTies.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c rowSums2.c -o rowSums2.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c rowVars.c -o rowVars.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c signTabulate.c -o signTabulate.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c sum2.c -o sum2.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c validateIndices.c -o validateIndices.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c weightedMean.c -o weightedMean.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c weightedMedian.c -o weightedMedian.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c x_OP_y.c -o x_OP_y.o\n",
            "gcc -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o matrixStats.so 000.init.o allocMatrix2.o anyMissing.o binCounts.o binMeans.o colCounts.o colOrderStats.o colRanges.o diff2.o indexByRow.o logSumExp.o mean2.o naming.o productExpSumLog.o psortKM.o rowCounts.o rowCummaxs.o rowCummins.o rowCumprods.o rowCumsums.o rowDiffs.o rowLogSumExp.o rowMads.o rowMeans2.o rowMedians.o rowOrderStats.o rowRanges.o rowRanksWithTies.o rowSums2.o rowVars.o signTabulate.o sum2.o validateIndices.o weightedMean.o weightedMedian.o x_OP_y.o -L/usr/lib/R/lib -lR\n",
            "installing to /usr/local/lib/R/site-library/00LOCK-matrixStats/00new/matrixStats/libs\n",
            "** R\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** installing vignettes\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** checking absolute paths in shared objects and dynamic libraries\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (matrixStats)\n",
            "* installing *source* package ‘locfit’ ...\n",
            "** package ‘locfit’ successfully unpacked and MD5 sums checked\n",
            "** using staged installation\n",
            "** libs\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c S_enter.c -o S_enter.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c band.c -o band.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c dbinom.c -o dbinom.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c dens_haz.c -o dens_haz.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c dens_int.c -o dens_int.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c dens_odi.c -o dens_odi.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c density.c -o density.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c ev_atree.c -o ev_atree.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c ev_interp.c -o ev_interp.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c ev_kdtre.c -o ev_kdtre.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c ev_main.c -o ev_main.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c ev_sphere.c -o ev_sphere.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c ev_trian.c -o ev_trian.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c family.c -o family.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c fitted.c -o fitted.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c frend.c -o frend.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c lf_adap.c -o lf_adap.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c lf_dercor.c -o lf_dercor.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c lf_fitfun.c -o lf_fitfun.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c lf_nbhd.c -o lf_nbhd.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c lf_robust.c -o lf_robust.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c lf_vari.c -o lf_vari.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c lf_wdiag.c -o lf_wdiag.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c lfstr.c -o lfstr.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c locfit.c -o locfit.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c m_chol.c -o m_chol.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c m_eigen.c -o m_eigen.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c m_icirc.c -o m_icirc.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c m_imont.c -o m_imont.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c m_isimp.c -o m_isimp.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c m_isphr.c -o m_isphr.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c m_jacob.c -o m_jacob.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c m_max.c -o m_max.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c m_qr.c -o m_qr.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c m_solve.c -o m_solve.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c m_svd.c -o m_svd.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c m_vector.c -o m_vector.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c math.c -o math.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c minmax.c -o minmax.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c pcomp.c -o pcomp.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c preplot.c -o preplot.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c prob.c -o prob.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c procv.c -o procv.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c scb.c -o scb.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c scb_cons.c -o scb_cons.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c scb_crit.c -o scb_crit.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c scb_iface.c -o scb_iface.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c simul.c -o simul.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c smisc.c -o smisc.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c startlf.c -o startlf.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c weight.c -o weight.o\n",
            "gcc -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o locfit.so S_enter.o band.o dbinom.o dens_haz.o dens_int.o dens_odi.o density.o ev_atree.o ev_interp.o ev_kdtre.o ev_main.o ev_sphere.o ev_trian.o family.o fitted.o frend.o lf_adap.o lf_dercor.o lf_fitfun.o lf_nbhd.o lf_robust.o lf_vari.o lf_wdiag.o lfstr.o locfit.o m_chol.o m_eigen.o m_icirc.o m_imont.o m_isimp.o m_isphr.o m_jacob.o m_max.o m_qr.o m_solve.o m_svd.o m_vector.o math.o minmax.o pcomp.o preplot.o prob.o procv.o scb.o scb_cons.o scb_crit.o scb_iface.o simul.o smisc.o startlf.o weight.o -L/usr/lib/R/lib -lR\n",
            "installing to /usr/local/lib/R/site-library/00LOCK-locfit/00new/locfit/libs\n",
            "** R\n",
            "** data\n",
            "** byte-compile and prepare package for lazy loading\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** checking absolute paths in shared objects and dynamic libraries\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (locfit)\n",
            "* installing *source* package ‘Rcpp’ ...\n",
            "** package ‘Rcpp’ successfully unpacked and MD5 sums checked\n",
            "** using staged installation\n",
            "** libs\n",
            "g++ -std=gnu++14 -I\"/usr/share/R/include\" -DNDEBUG -I../inst/include/     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c api.cpp -o api.o\n",
            "g++ -std=gnu++14 -I\"/usr/share/R/include\" -DNDEBUG -I../inst/include/     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c attributes.cpp -o attributes.o\n",
            "g++ -std=gnu++14 -I\"/usr/share/R/include\" -DNDEBUG -I../inst/include/     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c barrier.cpp -o barrier.o\n",
            "g++ -std=gnu++14 -I\"/usr/share/R/include\" -DNDEBUG -I../inst/include/     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c date.cpp -o date.o\n",
            "g++ -std=gnu++14 -I\"/usr/share/R/include\" -DNDEBUG -I../inst/include/     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c module.cpp -o module.o\n",
            "g++ -std=gnu++14 -I\"/usr/share/R/include\" -DNDEBUG -I../inst/include/     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c rcpp_init.cpp -o rcpp_init.o\n",
            "g++ -std=gnu++14 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o Rcpp.so api.o attributes.o barrier.o date.o module.o rcpp_init.o -L/usr/lib/R/lib -lR\n",
            "installing to /usr/local/lib/R/site-library/00LOCK-Rcpp/00new/Rcpp/libs\n",
            "** R\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** installing vignettes\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** checking absolute paths in shared objects and dynamic libraries\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (Rcpp)\n",
            "* installing *source* package ‘BiocVersion’ ...\n",
            "** using staged installation\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (BiocVersion)\n",
            "* installing *source* package ‘RCurl’ ...\n",
            "** package ‘RCurl’ successfully unpacked and MD5 sums checked\n",
            "** using staged installation\n",
            "checking for curl-config... /usr/bin/curl-config\n",
            "checking for gcc... gcc\n",
            "checking whether the C compiler works... yes\n",
            "checking for C compiler default output file name... a.out\n",
            "checking for suffix of executables... \n",
            "checking whether we are cross compiling... no\n",
            "checking for suffix of object files... o\n",
            "checking whether the compiler supports GNU C... yes\n",
            "checking whether gcc accepts -g... yes\n",
            "checking for gcc option to enable C11 features... none needed\n",
            "checking how to run the C preprocessor... gcc -E\n",
            "Version has a libidn field\n",
            "Version has CURLOPT_URL\n",
            "Version has CURLINFO_EFFECTIVE_URL\n",
            "Version has CURLINFO_RESPONSE_CODE\n",
            "Version has CURLINFO_TOTAL_TIME\n",
            "Version has CURLINFO_NAMELOOKUP_TIME\n",
            "Version has CURLINFO_CONNECT_TIME\n",
            "Version has CURLINFO_PRETRANSFER_TIME\n",
            "Version has CURLINFO_SIZE_UPLOAD\n",
            "Version has CURLINFO_SIZE_DOWNLOAD\n",
            "Version has CURLINFO_SPEED_DOWNLOAD\n",
            "Version has CURLINFO_SPEED_UPLOAD\n",
            "Version has CURLINFO_HEADER_SIZE\n",
            "Version has CURLINFO_REQUEST_SIZE\n",
            "Version has CURLINFO_SSL_VERIFYRESULT\n",
            "Version has CURLINFO_FILETIME\n",
            "Version has CURLINFO_CONTENT_LENGTH_DOWNLOAD\n",
            "Version has CURLINFO_CONTENT_LENGTH_UPLOAD\n",
            "Version has CURLINFO_STARTTRANSFER_TIME\n",
            "Version has CURLINFO_CONTENT_TYPE\n",
            "Version has CURLINFO_REDIRECT_TIME\n",
            "Version has CURLINFO_REDIRECT_COUNT\n",
            "Version has CURLINFO_PRIVATE\n",
            "Version has CURLINFO_HTTP_CONNECTCODE\n",
            "Version has CURLINFO_HTTPAUTH_AVAIL\n",
            "Version has CURLINFO_PROXYAUTH_AVAIL\n",
            "Version has CURLINFO_OS_ERRNO\n",
            "Version has CURLINFO_NUM_CONNECTS\n",
            "Version has CURLINFO_SSL_ENGINES\n",
            "Version has CURLINFO_COOKIELIST\n",
            "Version has CURLINFO_LASTSOCKET\n",
            "Version has CURLINFO_FTP_ENTRY_PATH\n",
            "Version has CURLINFO_REDIRECT_URL\n",
            "Version has CURLINFO_PRIMARY_IP\n",
            "Version has CURLINFO_APPCONNECT_TIME\n",
            "Version has CURLINFO_CERTINFO\n",
            "Version has CURLINFO_CONDITION_UNMET\n",
            "Version has CURLOPT_WRITEDATA\n",
            "Version has CURLOPT_KEYPASSWD\n",
            "Version has CURLOPT_DIRLISTONLY\n",
            "Version has CURLOPT_APPEND\n",
            "Version has CURLOPT_KRBLEVEL\n",
            "Version has CURLOPT_USE_SSL\n",
            "Version has CURLOPT_TIMEOUT_MS\n",
            "Version has CURLOPT_CONNECTTIMEOUT_MS\n",
            "Version has CURLOPT_HTTP_TRANSFER_DECODING\n",
            "Version has CURLOPT_HTTP_CONTENT_DECODING\n",
            "Version has CURLOPT_NEW_FILE_PERMS\n",
            "Version has CURLOPT_NEW_DIRECTORY_PERMS\n",
            "Version has CURLOPT_POSTREDIR\n",
            "Version has CURLOPT_OPENSOCKETFUNCTION\n",
            "Version has CURLOPT_OPENSOCKETDATA\n",
            "Version has CURLOPT_COPYPOSTFIELDS\n",
            "Version has CURLOPT_PROXY_TRANSFER_MODE\n",
            "Version has CURLOPT_SEEKFUNCTION\n",
            "Version has CURLOPT_SEEKDATA\n",
            "Version has CURLOPT_CRLFILE\n",
            "Version has CURLOPT_ISSUERCERT\n",
            "Version has CURLOPT_ADDRESS_SCOPE\n",
            "Version has CURLOPT_CERTINFO\n",
            "Version has CURLOPT_USERNAME\n",
            "Version has CURLOPT_PASSWORD\n",
            "Version has CURLOPT_PROXYUSERNAME\n",
            "Version has CURLOPT_PROXYPASSWORD\n",
            "Version has CURLOPT_SSH_HOST_PUBLIC_KEY_MD5\n",
            "Version has CURLOPT_NOPROXY\n",
            "Version has CURLOPT_TFTP_BLKSIZE\n",
            "Version has CURLOPT_SOCKS5_GSSAPI_SERVICE\n",
            "Version has CURLOPT_SOCKS5_GSSAPI_NEC\n",
            "Version has CURLOPT_PROTOCOLS\n",
            "Version has CURLOPT_REDIR_PROTOCOLS\n",
            "Version has CURLOPT_SSH_AUTH_TYPES\n",
            "Version has CURLOPT_SSH_PUBLIC_KEYFILE\n",
            "Version has CURLOPT_SSH_PRIVATE_KEYFILE\n",
            "Version has CURLOPT_FTP_SSL_CCC\n",
            "Version has CURLOPT_COOKIELIST\n",
            "Version has CURLOPT_IGNORE_CONTENT_LENGTH\n",
            "Version has CURLOPT_FTP_SKIP_PASV_IP\n",
            "Version has CURLOPT_FTP_FILEMETHOD\n",
            "Version has CURLOPT_LOCALPORT\n",
            "Version has CURLOPT_LOCALPORTRANGE\n",
            "Version has CURLOPT_CONNECT_ONLY\n",
            "Version has CURLOPT_CONV_FROM_NETWORK_FUNCTION\n",
            "Version has CURLOPT_CONV_TO_NETWORK_FUNCTION\n",
            "Version has CURLOPT_CONV_FROM_UTF8_FUNCTION\n",
            "Version has CURLOPT_MAX_SEND_SPEED_LARGE\n",
            "Version has CURLOPT_MAX_RECV_SPEED_LARGE\n",
            "Version has CURLOPT_FTP_ALTERNATIVE_TO_USER\n",
            "Version has CURLOPT_SOCKOPTFUNCTION\n",
            "Version has CURLOPT_SOCKOPTDATA\n",
            "Version has CURLOPT_SSL_SESSIONID_CACHE\n",
            "libcurl version: libcurl 7.58.0\n",
            "configure: creating ./config.status\n",
            "config.status: creating src/Makevars\n",
            "** libs\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -DHAVE_LIBIDN_FIELD=1 -DHAVE_CURLOPT_URL=1 -DHAVE_CURLINFO_EFFECTIVE_URL=1 -DHAVE_CURLINFO_RESPONSE_CODE=1 -DHAVE_CURLINFO_TOTAL_TIME=1 -DHAVE_CURLINFO_NAMELOOKUP_TIME=1 -DHAVE_CURLINFO_CONNECT_TIME=1 -DHAVE_CURLINFO_PRETRANSFER_TIME=1 -DHAVE_CURLINFO_SIZE_UPLOAD=1 -DHAVE_CURLINFO_SIZE_DOWNLOAD=1 -DHAVE_CURLINFO_SPEED_DOWNLOAD=1 -DHAVE_CURLINFO_SPEED_UPLOAD=1 -DHAVE_CURLINFO_HEADER_SIZE=1 -DHAVE_CURLINFO_REQUEST_SIZE=1 -DHAVE_CURLINFO_SSL_VERIFYRESULT=1 -DHAVE_CURLINFO_FILETIME=1 -DHAVE_CURLINFO_CONTENT_LENGTH_DOWNLOAD=1 -DHAVE_CURLINFO_CONTENT_LENGTH_UPLOAD=1 -DHAVE_CURLINFO_STARTTRANSFER_TIME=1 -DHAVE_CURLINFO_CONTENT_TYPE=1 -DHAVE_CURLINFO_REDIRECT_TIME=1 -DHAVE_CURLINFO_REDIRECT_COUNT=1 -DHAVE_CURLINFO_PRIVATE=1 -DHAVE_CURLINFO_HTTP_CONNECTCODE=1 -DHAVE_CURLINFO_HTTPAUTH_AVAIL=1 -DHAVE_CURLINFO_PROXYAUTH_AVAIL=1 -DHAVE_CURLINFO_OS_ERRNO=1 -DHAVE_CURLINFO_NUM_CONNECTS=1 -DHAVE_CURLINFO_SSL_ENGINES=1 -DHAVE_CURLINFO_COOKIELIST=1 -DHAVE_CURLINFO_LASTSOCKET=1 -DHAVE_CURLINFO_FTP_ENTRY_PATH=1 -DHAVE_CURLINFO_REDIRECT_URL=1 -DHAVE_CURLINFO_PRIMARY_IP=1 -DHAVE_CURLINFO_APPCONNECT_TIME=1 -DHAVE_CURLINFO_CERTINFO=1 -DHAVE_CURLINFO_CONDITION_UNMET=1 -DHAVE_CURLOPT_WRITEDATA=1 -DHAVE_CURLOPT_KEYPASSWD=1 -DHAVE_CURLOPT_DIRLISTONLY=1 -DHAVE_CURLOPT_APPEND=1 -DHAVE_CURLOPT_KRBLEVEL=1 -DHAVE_CURLOPT_USE_SSL=1 -DHAVE_CURLOPT_TIMEOUT_MS=1 -DHAVE_CURLOPT_CONNECTTIMEOUT_MS=1 -DHAVE_CURLOPT_HTTP_TRANSFER_DECODING=1 -DHAVE_CURLOPT_HTTP_CONTENT_DECODING=1 -DHAVE_CURLOPT_NEW_FILE_PERMS=1 -DHAVE_CURLOPT_NEW_DIRECTORY_PERMS=1 -DHAVE_CURLOPT_POSTREDIR=1 -DHAVE_CURLOPT_OPENSOCKETFUNCTION=1 -DHAVE_CURLOPT_OPENSOCKETDATA=1 -DHAVE_CURLOPT_COPYPOSTFIELDS=1 -DHAVE_CURLOPT_PROXY_TRANSFER_MODE=1 -DHAVE_CURLOPT_SEEKFUNCTION=1 -DHAVE_CURLOPT_SEEKDATA=1 -DHAVE_CURLOPT_CRLFILE=1 -DHAVE_CURLOPT_ISSUERCERT=1 -DHAVE_CURLOPT_ADDRESS_SCOPE=1 -DHAVE_CURLOPT_CERTINFO=1 -DHAVE_CURLOPT_USERNAME=1 -DHAVE_CURLOPT_PASSWORD=1 -DHAVE_CURLOPT_PROXYUSERNAME=1 -DHAVE_CURLOPT_PROXYPASSWORD=1 -DHAVE_CURLOPT_SSH_HOST_PUBLIC_KEY_MD5=1 -DHAVE_CURLOPT_NOPROXY=1 -DHAVE_CURLOPT_TFTP_BLKSIZE=1 -DHAVE_CURLOPT_SOCKS5_GSSAPI_SERVICE=1 -DHAVE_CURLOPT_SOCKS5_GSSAPI_NEC=1 -DHAVE_CURLOPT_PROTOCOLS=1 -DHAVE_CURLOPT_REDIR_PROTOCOLS=1 -DHAVE_CURLOPT_SSH_AUTH_TYPES=1 -DHAVE_CURLOPT_SSH_PUBLIC_KEYFILE=1 -DHAVE_CURLOPT_SSH_PRIVATE_KEYFILE=1 -DHAVE_CURLOPT_FTP_SSL_CCC=1 -DHAVE_CURLOPT_COOKIELIST=1 -DHAVE_CURLOPT_IGNORE_CONTENT_LENGTH=1 -DHAVE_CURLOPT_FTP_SKIP_PASV_IP=1 -DHAVE_CURLOPT_FTP_FILEMETHOD=1 -DHAVE_CURLOPT_LOCALPORT=1 -DHAVE_CURLOPT_LOCALPORTRANGE=1 -DHAVE_CURLOPT_CONNECT_ONLY=1 -DHAVE_CURLOPT_CONV_FROM_NETWORK_FUNCTION=1 -DHAVE_CURLOPT_CONV_TO_NETWORK_FUNCTION=1 -DHAVE_CURLOPT_CONV_FROM_UTF8_FUNCTION=1 -DHAVE_CURLOPT_MAX_SEND_SPEED_LARGE=1 -DHAVE_CURLOPT_MAX_RECV_SPEED_LARGE=1 -DHAVE_CURLOPT_FTP_ALTERNATIVE_TO_USER=1 -DHAVE_CURLOPT_SOCKOPTFUNCTION=1 -DHAVE_CURLOPT_SOCKOPTDATA=1 -DHAVE_CURLOPT_SSL_SESSIONID_CACHE=1 -I/usr/include/libxml2     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c base64.c -o base64.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -DHAVE_LIBIDN_FIELD=1 -DHAVE_CURLOPT_URL=1 -DHAVE_CURLINFO_EFFECTIVE_URL=1 -DHAVE_CURLINFO_RESPONSE_CODE=1 -DHAVE_CURLINFO_TOTAL_TIME=1 -DHAVE_CURLINFO_NAMELOOKUP_TIME=1 -DHAVE_CURLINFO_CONNECT_TIME=1 -DHAVE_CURLINFO_PRETRANSFER_TIME=1 -DHAVE_CURLINFO_SIZE_UPLOAD=1 -DHAVE_CURLINFO_SIZE_DOWNLOAD=1 -DHAVE_CURLINFO_SPEED_DOWNLOAD=1 -DHAVE_CURLINFO_SPEED_UPLOAD=1 -DHAVE_CURLINFO_HEADER_SIZE=1 -DHAVE_CURLINFO_REQUEST_SIZE=1 -DHAVE_CURLINFO_SSL_VERIFYRESULT=1 -DHAVE_CURLINFO_FILETIME=1 -DHAVE_CURLINFO_CONTENT_LENGTH_DOWNLOAD=1 -DHAVE_CURLINFO_CONTENT_LENGTH_UPLOAD=1 -DHAVE_CURLINFO_STARTTRANSFER_TIME=1 -DHAVE_CURLINFO_CONTENT_TYPE=1 -DHAVE_CURLINFO_REDIRECT_TIME=1 -DHAVE_CURLINFO_REDIRECT_COUNT=1 -DHAVE_CURLINFO_PRIVATE=1 -DHAVE_CURLINFO_HTTP_CONNECTCODE=1 -DHAVE_CURLINFO_HTTPAUTH_AVAIL=1 -DHAVE_CURLINFO_PROXYAUTH_AVAIL=1 -DHAVE_CURLINFO_OS_ERRNO=1 -DHAVE_CURLINFO_NUM_CONNECTS=1 -DHAVE_CURLINFO_SSL_ENGINES=1 -DHAVE_CURLINFO_COOKIELIST=1 -DHAVE_CURLINFO_LASTSOCKET=1 -DHAVE_CURLINFO_FTP_ENTRY_PATH=1 -DHAVE_CURLINFO_REDIRECT_URL=1 -DHAVE_CURLINFO_PRIMARY_IP=1 -DHAVE_CURLINFO_APPCONNECT_TIME=1 -DHAVE_CURLINFO_CERTINFO=1 -DHAVE_CURLINFO_CONDITION_UNMET=1 -DHAVE_CURLOPT_WRITEDATA=1 -DHAVE_CURLOPT_KEYPASSWD=1 -DHAVE_CURLOPT_DIRLISTONLY=1 -DHAVE_CURLOPT_APPEND=1 -DHAVE_CURLOPT_KRBLEVEL=1 -DHAVE_CURLOPT_USE_SSL=1 -DHAVE_CURLOPT_TIMEOUT_MS=1 -DHAVE_CURLOPT_CONNECTTIMEOUT_MS=1 -DHAVE_CURLOPT_HTTP_TRANSFER_DECODING=1 -DHAVE_CURLOPT_HTTP_CONTENT_DECODING=1 -DHAVE_CURLOPT_NEW_FILE_PERMS=1 -DHAVE_CURLOPT_NEW_DIRECTORY_PERMS=1 -DHAVE_CURLOPT_POSTREDIR=1 -DHAVE_CURLOPT_OPENSOCKETFUNCTION=1 -DHAVE_CURLOPT_OPENSOCKETDATA=1 -DHAVE_CURLOPT_COPYPOSTFIELDS=1 -DHAVE_CURLOPT_PROXY_TRANSFER_MODE=1 -DHAVE_CURLOPT_SEEKFUNCTION=1 -DHAVE_CURLOPT_SEEKDATA=1 -DHAVE_CURLOPT_CRLFILE=1 -DHAVE_CURLOPT_ISSUERCERT=1 -DHAVE_CURLOPT_ADDRESS_SCOPE=1 -DHAVE_CURLOPT_CERTINFO=1 -DHAVE_CURLOPT_USERNAME=1 -DHAVE_CURLOPT_PASSWORD=1 -DHAVE_CURLOPT_PROXYUSERNAME=1 -DHAVE_CURLOPT_PROXYPASSWORD=1 -DHAVE_CURLOPT_SSH_HOST_PUBLIC_KEY_MD5=1 -DHAVE_CURLOPT_NOPROXY=1 -DHAVE_CURLOPT_TFTP_BLKSIZE=1 -DHAVE_CURLOPT_SOCKS5_GSSAPI_SERVICE=1 -DHAVE_CURLOPT_SOCKS5_GSSAPI_NEC=1 -DHAVE_CURLOPT_PROTOCOLS=1 -DHAVE_CURLOPT_REDIR_PROTOCOLS=1 -DHAVE_CURLOPT_SSH_AUTH_TYPES=1 -DHAVE_CURLOPT_SSH_PUBLIC_KEYFILE=1 -DHAVE_CURLOPT_SSH_PRIVATE_KEYFILE=1 -DHAVE_CURLOPT_FTP_SSL_CCC=1 -DHAVE_CURLOPT_COOKIELIST=1 -DHAVE_CURLOPT_IGNORE_CONTENT_LENGTH=1 -DHAVE_CURLOPT_FTP_SKIP_PASV_IP=1 -DHAVE_CURLOPT_FTP_FILEMETHOD=1 -DHAVE_CURLOPT_LOCALPORT=1 -DHAVE_CURLOPT_LOCALPORTRANGE=1 -DHAVE_CURLOPT_CONNECT_ONLY=1 -DHAVE_CURLOPT_CONV_FROM_NETWORK_FUNCTION=1 -DHAVE_CURLOPT_CONV_TO_NETWORK_FUNCTION=1 -DHAVE_CURLOPT_CONV_FROM_UTF8_FUNCTION=1 -DHAVE_CURLOPT_MAX_SEND_SPEED_LARGE=1 -DHAVE_CURLOPT_MAX_RECV_SPEED_LARGE=1 -DHAVE_CURLOPT_FTP_ALTERNATIVE_TO_USER=1 -DHAVE_CURLOPT_SOCKOPTFUNCTION=1 -DHAVE_CURLOPT_SOCKOPTDATA=1 -DHAVE_CURLOPT_SSL_SESSIONID_CACHE=1 -I/usr/include/libxml2     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c curl.c -o curl.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -DHAVE_LIBIDN_FIELD=1 -DHAVE_CURLOPT_URL=1 -DHAVE_CURLINFO_EFFECTIVE_URL=1 -DHAVE_CURLINFO_RESPONSE_CODE=1 -DHAVE_CURLINFO_TOTAL_TIME=1 -DHAVE_CURLINFO_NAMELOOKUP_TIME=1 -DHAVE_CURLINFO_CONNECT_TIME=1 -DHAVE_CURLINFO_PRETRANSFER_TIME=1 -DHAVE_CURLINFO_SIZE_UPLOAD=1 -DHAVE_CURLINFO_SIZE_DOWNLOAD=1 -DHAVE_CURLINFO_SPEED_DOWNLOAD=1 -DHAVE_CURLINFO_SPEED_UPLOAD=1 -DHAVE_CURLINFO_HEADER_SIZE=1 -DHAVE_CURLINFO_REQUEST_SIZE=1 -DHAVE_CURLINFO_SSL_VERIFYRESULT=1 -DHAVE_CURLINFO_FILETIME=1 -DHAVE_CURLINFO_CONTENT_LENGTH_DOWNLOAD=1 -DHAVE_CURLINFO_CONTENT_LENGTH_UPLOAD=1 -DHAVE_CURLINFO_STARTTRANSFER_TIME=1 -DHAVE_CURLINFO_CONTENT_TYPE=1 -DHAVE_CURLINFO_REDIRECT_TIME=1 -DHAVE_CURLINFO_REDIRECT_COUNT=1 -DHAVE_CURLINFO_PRIVATE=1 -DHAVE_CURLINFO_HTTP_CONNECTCODE=1 -DHAVE_CURLINFO_HTTPAUTH_AVAIL=1 -DHAVE_CURLINFO_PROXYAUTH_AVAIL=1 -DHAVE_CURLINFO_OS_ERRNO=1 -DHAVE_CURLINFO_NUM_CONNECTS=1 -DHAVE_CURLINFO_SSL_ENGINES=1 -DHAVE_CURLINFO_COOKIELIST=1 -DHAVE_CURLINFO_LASTSOCKET=1 -DHAVE_CURLINFO_FTP_ENTRY_PATH=1 -DHAVE_CURLINFO_REDIRECT_URL=1 -DHAVE_CURLINFO_PRIMARY_IP=1 -DHAVE_CURLINFO_APPCONNECT_TIME=1 -DHAVE_CURLINFO_CERTINFO=1 -DHAVE_CURLINFO_CONDITION_UNMET=1 -DHAVE_CURLOPT_WRITEDATA=1 -DHAVE_CURLOPT_KEYPASSWD=1 -DHAVE_CURLOPT_DIRLISTONLY=1 -DHAVE_CURLOPT_APPEND=1 -DHAVE_CURLOPT_KRBLEVEL=1 -DHAVE_CURLOPT_USE_SSL=1 -DHAVE_CURLOPT_TIMEOUT_MS=1 -DHAVE_CURLOPT_CONNECTTIMEOUT_MS=1 -DHAVE_CURLOPT_HTTP_TRANSFER_DECODING=1 -DHAVE_CURLOPT_HTTP_CONTENT_DECODING=1 -DHAVE_CURLOPT_NEW_FILE_PERMS=1 -DHAVE_CURLOPT_NEW_DIRECTORY_PERMS=1 -DHAVE_CURLOPT_POSTREDIR=1 -DHAVE_CURLOPT_OPENSOCKETFUNCTION=1 -DHAVE_CURLOPT_OPENSOCKETDATA=1 -DHAVE_CURLOPT_COPYPOSTFIELDS=1 -DHAVE_CURLOPT_PROXY_TRANSFER_MODE=1 -DHAVE_CURLOPT_SEEKFUNCTION=1 -DHAVE_CURLOPT_SEEKDATA=1 -DHAVE_CURLOPT_CRLFILE=1 -DHAVE_CURLOPT_ISSUERCERT=1 -DHAVE_CURLOPT_ADDRESS_SCOPE=1 -DHAVE_CURLOPT_CERTINFO=1 -DHAVE_CURLOPT_USERNAME=1 -DHAVE_CURLOPT_PASSWORD=1 -DHAVE_CURLOPT_PROXYUSERNAME=1 -DHAVE_CURLOPT_PROXYPASSWORD=1 -DHAVE_CURLOPT_SSH_HOST_PUBLIC_KEY_MD5=1 -DHAVE_CURLOPT_NOPROXY=1 -DHAVE_CURLOPT_TFTP_BLKSIZE=1 -DHAVE_CURLOPT_SOCKS5_GSSAPI_SERVICE=1 -DHAVE_CURLOPT_SOCKS5_GSSAPI_NEC=1 -DHAVE_CURLOPT_PROTOCOLS=1 -DHAVE_CURLOPT_REDIR_PROTOCOLS=1 -DHAVE_CURLOPT_SSH_AUTH_TYPES=1 -DHAVE_CURLOPT_SSH_PUBLIC_KEYFILE=1 -DHAVE_CURLOPT_SSH_PRIVATE_KEYFILE=1 -DHAVE_CURLOPT_FTP_SSL_CCC=1 -DHAVE_CURLOPT_COOKIELIST=1 -DHAVE_CURLOPT_IGNORE_CONTENT_LENGTH=1 -DHAVE_CURLOPT_FTP_SKIP_PASV_IP=1 -DHAVE_CURLOPT_FTP_FILEMETHOD=1 -DHAVE_CURLOPT_LOCALPORT=1 -DHAVE_CURLOPT_LOCALPORTRANGE=1 -DHAVE_CURLOPT_CONNECT_ONLY=1 -DHAVE_CURLOPT_CONV_FROM_NETWORK_FUNCTION=1 -DHAVE_CURLOPT_CONV_TO_NETWORK_FUNCTION=1 -DHAVE_CURLOPT_CONV_FROM_UTF8_FUNCTION=1 -DHAVE_CURLOPT_MAX_SEND_SPEED_LARGE=1 -DHAVE_CURLOPT_MAX_RECV_SPEED_LARGE=1 -DHAVE_CURLOPT_FTP_ALTERNATIVE_TO_USER=1 -DHAVE_CURLOPT_SOCKOPTFUNCTION=1 -DHAVE_CURLOPT_SOCKOPTDATA=1 -DHAVE_CURLOPT_SSL_SESSIONID_CACHE=1 -I/usr/include/libxml2     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c curlInit.c -o curlInit.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -DHAVE_LIBIDN_FIELD=1 -DHAVE_CURLOPT_URL=1 -DHAVE_CURLINFO_EFFECTIVE_URL=1 -DHAVE_CURLINFO_RESPONSE_CODE=1 -DHAVE_CURLINFO_TOTAL_TIME=1 -DHAVE_CURLINFO_NAMELOOKUP_TIME=1 -DHAVE_CURLINFO_CONNECT_TIME=1 -DHAVE_CURLINFO_PRETRANSFER_TIME=1 -DHAVE_CURLINFO_SIZE_UPLOAD=1 -DHAVE_CURLINFO_SIZE_DOWNLOAD=1 -DHAVE_CURLINFO_SPEED_DOWNLOAD=1 -DHAVE_CURLINFO_SPEED_UPLOAD=1 -DHAVE_CURLINFO_HEADER_SIZE=1 -DHAVE_CURLINFO_REQUEST_SIZE=1 -DHAVE_CURLINFO_SSL_VERIFYRESULT=1 -DHAVE_CURLINFO_FILETIME=1 -DHAVE_CURLINFO_CONTENT_LENGTH_DOWNLOAD=1 -DHAVE_CURLINFO_CONTENT_LENGTH_UPLOAD=1 -DHAVE_CURLINFO_STARTTRANSFER_TIME=1 -DHAVE_CURLINFO_CONTENT_TYPE=1 -DHAVE_CURLINFO_REDIRECT_TIME=1 -DHAVE_CURLINFO_REDIRECT_COUNT=1 -DHAVE_CURLINFO_PRIVATE=1 -DHAVE_CURLINFO_HTTP_CONNECTCODE=1 -DHAVE_CURLINFO_HTTPAUTH_AVAIL=1 -DHAVE_CURLINFO_PROXYAUTH_AVAIL=1 -DHAVE_CURLINFO_OS_ERRNO=1 -DHAVE_CURLINFO_NUM_CONNECTS=1 -DHAVE_CURLINFO_SSL_ENGINES=1 -DHAVE_CURLINFO_COOKIELIST=1 -DHAVE_CURLINFO_LASTSOCKET=1 -DHAVE_CURLINFO_FTP_ENTRY_PATH=1 -DHAVE_CURLINFO_REDIRECT_URL=1 -DHAVE_CURLINFO_PRIMARY_IP=1 -DHAVE_CURLINFO_APPCONNECT_TIME=1 -DHAVE_CURLINFO_CERTINFO=1 -DHAVE_CURLINFO_CONDITION_UNMET=1 -DHAVE_CURLOPT_WRITEDATA=1 -DHAVE_CURLOPT_KEYPASSWD=1 -DHAVE_CURLOPT_DIRLISTONLY=1 -DHAVE_CURLOPT_APPEND=1 -DHAVE_CURLOPT_KRBLEVEL=1 -DHAVE_CURLOPT_USE_SSL=1 -DHAVE_CURLOPT_TIMEOUT_MS=1 -DHAVE_CURLOPT_CONNECTTIMEOUT_MS=1 -DHAVE_CURLOPT_HTTP_TRANSFER_DECODING=1 -DHAVE_CURLOPT_HTTP_CONTENT_DECODING=1 -DHAVE_CURLOPT_NEW_FILE_PERMS=1 -DHAVE_CURLOPT_NEW_DIRECTORY_PERMS=1 -DHAVE_CURLOPT_POSTREDIR=1 -DHAVE_CURLOPT_OPENSOCKETFUNCTION=1 -DHAVE_CURLOPT_OPENSOCKETDATA=1 -DHAVE_CURLOPT_COPYPOSTFIELDS=1 -DHAVE_CURLOPT_PROXY_TRANSFER_MODE=1 -DHAVE_CURLOPT_SEEKFUNCTION=1 -DHAVE_CURLOPT_SEEKDATA=1 -DHAVE_CURLOPT_CRLFILE=1 -DHAVE_CURLOPT_ISSUERCERT=1 -DHAVE_CURLOPT_ADDRESS_SCOPE=1 -DHAVE_CURLOPT_CERTINFO=1 -DHAVE_CURLOPT_USERNAME=1 -DHAVE_CURLOPT_PASSWORD=1 -DHAVE_CURLOPT_PROXYUSERNAME=1 -DHAVE_CURLOPT_PROXYPASSWORD=1 -DHAVE_CURLOPT_SSH_HOST_PUBLIC_KEY_MD5=1 -DHAVE_CURLOPT_NOPROXY=1 -DHAVE_CURLOPT_TFTP_BLKSIZE=1 -DHAVE_CURLOPT_SOCKS5_GSSAPI_SERVICE=1 -DHAVE_CURLOPT_SOCKS5_GSSAPI_NEC=1 -DHAVE_CURLOPT_PROTOCOLS=1 -DHAVE_CURLOPT_REDIR_PROTOCOLS=1 -DHAVE_CURLOPT_SSH_AUTH_TYPES=1 -DHAVE_CURLOPT_SSH_PUBLIC_KEYFILE=1 -DHAVE_CURLOPT_SSH_PRIVATE_KEYFILE=1 -DHAVE_CURLOPT_FTP_SSL_CCC=1 -DHAVE_CURLOPT_COOKIELIST=1 -DHAVE_CURLOPT_IGNORE_CONTENT_LENGTH=1 -DHAVE_CURLOPT_FTP_SKIP_PASV_IP=1 -DHAVE_CURLOPT_FTP_FILEMETHOD=1 -DHAVE_CURLOPT_LOCALPORT=1 -DHAVE_CURLOPT_LOCALPORTRANGE=1 -DHAVE_CURLOPT_CONNECT_ONLY=1 -DHAVE_CURLOPT_CONV_FROM_NETWORK_FUNCTION=1 -DHAVE_CURLOPT_CONV_TO_NETWORK_FUNCTION=1 -DHAVE_CURLOPT_CONV_FROM_UTF8_FUNCTION=1 -DHAVE_CURLOPT_MAX_SEND_SPEED_LARGE=1 -DHAVE_CURLOPT_MAX_RECV_SPEED_LARGE=1 -DHAVE_CURLOPT_FTP_ALTERNATIVE_TO_USER=1 -DHAVE_CURLOPT_SOCKOPTFUNCTION=1 -DHAVE_CURLOPT_SOCKOPTDATA=1 -DHAVE_CURLOPT_SSL_SESSIONID_CACHE=1 -I/usr/include/libxml2     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c curl_base64.c -o curl_base64.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -DHAVE_LIBIDN_FIELD=1 -DHAVE_CURLOPT_URL=1 -DHAVE_CURLINFO_EFFECTIVE_URL=1 -DHAVE_CURLINFO_RESPONSE_CODE=1 -DHAVE_CURLINFO_TOTAL_TIME=1 -DHAVE_CURLINFO_NAMELOOKUP_TIME=1 -DHAVE_CURLINFO_CONNECT_TIME=1 -DHAVE_CURLINFO_PRETRANSFER_TIME=1 -DHAVE_CURLINFO_SIZE_UPLOAD=1 -DHAVE_CURLINFO_SIZE_DOWNLOAD=1 -DHAVE_CURLINFO_SPEED_DOWNLOAD=1 -DHAVE_CURLINFO_SPEED_UPLOAD=1 -DHAVE_CURLINFO_HEADER_SIZE=1 -DHAVE_CURLINFO_REQUEST_SIZE=1 -DHAVE_CURLINFO_SSL_VERIFYRESULT=1 -DHAVE_CURLINFO_FILETIME=1 -DHAVE_CURLINFO_CONTENT_LENGTH_DOWNLOAD=1 -DHAVE_CURLINFO_CONTENT_LENGTH_UPLOAD=1 -DHAVE_CURLINFO_STARTTRANSFER_TIME=1 -DHAVE_CURLINFO_CONTENT_TYPE=1 -DHAVE_CURLINFO_REDIRECT_TIME=1 -DHAVE_CURLINFO_REDIRECT_COUNT=1 -DHAVE_CURLINFO_PRIVATE=1 -DHAVE_CURLINFO_HTTP_CONNECTCODE=1 -DHAVE_CURLINFO_HTTPAUTH_AVAIL=1 -DHAVE_CURLINFO_PROXYAUTH_AVAIL=1 -DHAVE_CURLINFO_OS_ERRNO=1 -DHAVE_CURLINFO_NUM_CONNECTS=1 -DHAVE_CURLINFO_SSL_ENGINES=1 -DHAVE_CURLINFO_COOKIELIST=1 -DHAVE_CURLINFO_LASTSOCKET=1 -DHAVE_CURLINFO_FTP_ENTRY_PATH=1 -DHAVE_CURLINFO_REDIRECT_URL=1 -DHAVE_CURLINFO_PRIMARY_IP=1 -DHAVE_CURLINFO_APPCONNECT_TIME=1 -DHAVE_CURLINFO_CERTINFO=1 -DHAVE_CURLINFO_CONDITION_UNMET=1 -DHAVE_CURLOPT_WRITEDATA=1 -DHAVE_CURLOPT_KEYPASSWD=1 -DHAVE_CURLOPT_DIRLISTONLY=1 -DHAVE_CURLOPT_APPEND=1 -DHAVE_CURLOPT_KRBLEVEL=1 -DHAVE_CURLOPT_USE_SSL=1 -DHAVE_CURLOPT_TIMEOUT_MS=1 -DHAVE_CURLOPT_CONNECTTIMEOUT_MS=1 -DHAVE_CURLOPT_HTTP_TRANSFER_DECODING=1 -DHAVE_CURLOPT_HTTP_CONTENT_DECODING=1 -DHAVE_CURLOPT_NEW_FILE_PERMS=1 -DHAVE_CURLOPT_NEW_DIRECTORY_PERMS=1 -DHAVE_CURLOPT_POSTREDIR=1 -DHAVE_CURLOPT_OPENSOCKETFUNCTION=1 -DHAVE_CURLOPT_OPENSOCKETDATA=1 -DHAVE_CURLOPT_COPYPOSTFIELDS=1 -DHAVE_CURLOPT_PROXY_TRANSFER_MODE=1 -DHAVE_CURLOPT_SEEKFUNCTION=1 -DHAVE_CURLOPT_SEEKDATA=1 -DHAVE_CURLOPT_CRLFILE=1 -DHAVE_CURLOPT_ISSUERCERT=1 -DHAVE_CURLOPT_ADDRESS_SCOPE=1 -DHAVE_CURLOPT_CERTINFO=1 -DHAVE_CURLOPT_USERNAME=1 -DHAVE_CURLOPT_PASSWORD=1 -DHAVE_CURLOPT_PROXYUSERNAME=1 -DHAVE_CURLOPT_PROXYPASSWORD=1 -DHAVE_CURLOPT_SSH_HOST_PUBLIC_KEY_MD5=1 -DHAVE_CURLOPT_NOPROXY=1 -DHAVE_CURLOPT_TFTP_BLKSIZE=1 -DHAVE_CURLOPT_SOCKS5_GSSAPI_SERVICE=1 -DHAVE_CURLOPT_SOCKS5_GSSAPI_NEC=1 -DHAVE_CURLOPT_PROTOCOLS=1 -DHAVE_CURLOPT_REDIR_PROTOCOLS=1 -DHAVE_CURLOPT_SSH_AUTH_TYPES=1 -DHAVE_CURLOPT_SSH_PUBLIC_KEYFILE=1 -DHAVE_CURLOPT_SSH_PRIVATE_KEYFILE=1 -DHAVE_CURLOPT_FTP_SSL_CCC=1 -DHAVE_CURLOPT_COOKIELIST=1 -DHAVE_CURLOPT_IGNORE_CONTENT_LENGTH=1 -DHAVE_CURLOPT_FTP_SKIP_PASV_IP=1 -DHAVE_CURLOPT_FTP_FILEMETHOD=1 -DHAVE_CURLOPT_LOCALPORT=1 -DHAVE_CURLOPT_LOCALPORTRANGE=1 -DHAVE_CURLOPT_CONNECT_ONLY=1 -DHAVE_CURLOPT_CONV_FROM_NETWORK_FUNCTION=1 -DHAVE_CURLOPT_CONV_TO_NETWORK_FUNCTION=1 -DHAVE_CURLOPT_CONV_FROM_UTF8_FUNCTION=1 -DHAVE_CURLOPT_MAX_SEND_SPEED_LARGE=1 -DHAVE_CURLOPT_MAX_RECV_SPEED_LARGE=1 -DHAVE_CURLOPT_FTP_ALTERNATIVE_TO_USER=1 -DHAVE_CURLOPT_SOCKOPTFUNCTION=1 -DHAVE_CURLOPT_SOCKOPTDATA=1 -DHAVE_CURLOPT_SSL_SESSIONID_CACHE=1 -I/usr/include/libxml2     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c enums.c -o enums.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -DHAVE_LIBIDN_FIELD=1 -DHAVE_CURLOPT_URL=1 -DHAVE_CURLINFO_EFFECTIVE_URL=1 -DHAVE_CURLINFO_RESPONSE_CODE=1 -DHAVE_CURLINFO_TOTAL_TIME=1 -DHAVE_CURLINFO_NAMELOOKUP_TIME=1 -DHAVE_CURLINFO_CONNECT_TIME=1 -DHAVE_CURLINFO_PRETRANSFER_TIME=1 -DHAVE_CURLINFO_SIZE_UPLOAD=1 -DHAVE_CURLINFO_SIZE_DOWNLOAD=1 -DHAVE_CURLINFO_SPEED_DOWNLOAD=1 -DHAVE_CURLINFO_SPEED_UPLOAD=1 -DHAVE_CURLINFO_HEADER_SIZE=1 -DHAVE_CURLINFO_REQUEST_SIZE=1 -DHAVE_CURLINFO_SSL_VERIFYRESULT=1 -DHAVE_CURLINFO_FILETIME=1 -DHAVE_CURLINFO_CONTENT_LENGTH_DOWNLOAD=1 -DHAVE_CURLINFO_CONTENT_LENGTH_UPLOAD=1 -DHAVE_CURLINFO_STARTTRANSFER_TIME=1 -DHAVE_CURLINFO_CONTENT_TYPE=1 -DHAVE_CURLINFO_REDIRECT_TIME=1 -DHAVE_CURLINFO_REDIRECT_COUNT=1 -DHAVE_CURLINFO_PRIVATE=1 -DHAVE_CURLINFO_HTTP_CONNECTCODE=1 -DHAVE_CURLINFO_HTTPAUTH_AVAIL=1 -DHAVE_CURLINFO_PROXYAUTH_AVAIL=1 -DHAVE_CURLINFO_OS_ERRNO=1 -DHAVE_CURLINFO_NUM_CONNECTS=1 -DHAVE_CURLINFO_SSL_ENGINES=1 -DHAVE_CURLINFO_COOKIELIST=1 -DHAVE_CURLINFO_LASTSOCKET=1 -DHAVE_CURLINFO_FTP_ENTRY_PATH=1 -DHAVE_CURLINFO_REDIRECT_URL=1 -DHAVE_CURLINFO_PRIMARY_IP=1 -DHAVE_CURLINFO_APPCONNECT_TIME=1 -DHAVE_CURLINFO_CERTINFO=1 -DHAVE_CURLINFO_CONDITION_UNMET=1 -DHAVE_CURLOPT_WRITEDATA=1 -DHAVE_CURLOPT_KEYPASSWD=1 -DHAVE_CURLOPT_DIRLISTONLY=1 -DHAVE_CURLOPT_APPEND=1 -DHAVE_CURLOPT_KRBLEVEL=1 -DHAVE_CURLOPT_USE_SSL=1 -DHAVE_CURLOPT_TIMEOUT_MS=1 -DHAVE_CURLOPT_CONNECTTIMEOUT_MS=1 -DHAVE_CURLOPT_HTTP_TRANSFER_DECODING=1 -DHAVE_CURLOPT_HTTP_CONTENT_DECODING=1 -DHAVE_CURLOPT_NEW_FILE_PERMS=1 -DHAVE_CURLOPT_NEW_DIRECTORY_PERMS=1 -DHAVE_CURLOPT_POSTREDIR=1 -DHAVE_CURLOPT_OPENSOCKETFUNCTION=1 -DHAVE_CURLOPT_OPENSOCKETDATA=1 -DHAVE_CURLOPT_COPYPOSTFIELDS=1 -DHAVE_CURLOPT_PROXY_TRANSFER_MODE=1 -DHAVE_CURLOPT_SEEKFUNCTION=1 -DHAVE_CURLOPT_SEEKDATA=1 -DHAVE_CURLOPT_CRLFILE=1 -DHAVE_CURLOPT_ISSUERCERT=1 -DHAVE_CURLOPT_ADDRESS_SCOPE=1 -DHAVE_CURLOPT_CERTINFO=1 -DHAVE_CURLOPT_USERNAME=1 -DHAVE_CURLOPT_PASSWORD=1 -DHAVE_CURLOPT_PROXYUSERNAME=1 -DHAVE_CURLOPT_PROXYPASSWORD=1 -DHAVE_CURLOPT_SSH_HOST_PUBLIC_KEY_MD5=1 -DHAVE_CURLOPT_NOPROXY=1 -DHAVE_CURLOPT_TFTP_BLKSIZE=1 -DHAVE_CURLOPT_SOCKS5_GSSAPI_SERVICE=1 -DHAVE_CURLOPT_SOCKS5_GSSAPI_NEC=1 -DHAVE_CURLOPT_PROTOCOLS=1 -DHAVE_CURLOPT_REDIR_PROTOCOLS=1 -DHAVE_CURLOPT_SSH_AUTH_TYPES=1 -DHAVE_CURLOPT_SSH_PUBLIC_KEYFILE=1 -DHAVE_CURLOPT_SSH_PRIVATE_KEYFILE=1 -DHAVE_CURLOPT_FTP_SSL_CCC=1 -DHAVE_CURLOPT_COOKIELIST=1 -DHAVE_CURLOPT_IGNORE_CONTENT_LENGTH=1 -DHAVE_CURLOPT_FTP_SKIP_PASV_IP=1 -DHAVE_CURLOPT_FTP_FILEMETHOD=1 -DHAVE_CURLOPT_LOCALPORT=1 -DHAVE_CURLOPT_LOCALPORTRANGE=1 -DHAVE_CURLOPT_CONNECT_ONLY=1 -DHAVE_CURLOPT_CONV_FROM_NETWORK_FUNCTION=1 -DHAVE_CURLOPT_CONV_TO_NETWORK_FUNCTION=1 -DHAVE_CURLOPT_CONV_FROM_UTF8_FUNCTION=1 -DHAVE_CURLOPT_MAX_SEND_SPEED_LARGE=1 -DHAVE_CURLOPT_MAX_RECV_SPEED_LARGE=1 -DHAVE_CURLOPT_FTP_ALTERNATIVE_TO_USER=1 -DHAVE_CURLOPT_SOCKOPTFUNCTION=1 -DHAVE_CURLOPT_SOCKOPTDATA=1 -DHAVE_CURLOPT_SSL_SESSIONID_CACHE=1 -I/usr/include/libxml2     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c json.c -o json.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -DHAVE_LIBIDN_FIELD=1 -DHAVE_CURLOPT_URL=1 -DHAVE_CURLINFO_EFFECTIVE_URL=1 -DHAVE_CURLINFO_RESPONSE_CODE=1 -DHAVE_CURLINFO_TOTAL_TIME=1 -DHAVE_CURLINFO_NAMELOOKUP_TIME=1 -DHAVE_CURLINFO_CONNECT_TIME=1 -DHAVE_CURLINFO_PRETRANSFER_TIME=1 -DHAVE_CURLINFO_SIZE_UPLOAD=1 -DHAVE_CURLINFO_SIZE_DOWNLOAD=1 -DHAVE_CURLINFO_SPEED_DOWNLOAD=1 -DHAVE_CURLINFO_SPEED_UPLOAD=1 -DHAVE_CURLINFO_HEADER_SIZE=1 -DHAVE_CURLINFO_REQUEST_SIZE=1 -DHAVE_CURLINFO_SSL_VERIFYRESULT=1 -DHAVE_CURLINFO_FILETIME=1 -DHAVE_CURLINFO_CONTENT_LENGTH_DOWNLOAD=1 -DHAVE_CURLINFO_CONTENT_LENGTH_UPLOAD=1 -DHAVE_CURLINFO_STARTTRANSFER_TIME=1 -DHAVE_CURLINFO_CONTENT_TYPE=1 -DHAVE_CURLINFO_REDIRECT_TIME=1 -DHAVE_CURLINFO_REDIRECT_COUNT=1 -DHAVE_CURLINFO_PRIVATE=1 -DHAVE_CURLINFO_HTTP_CONNECTCODE=1 -DHAVE_CURLINFO_HTTPAUTH_AVAIL=1 -DHAVE_CURLINFO_PROXYAUTH_AVAIL=1 -DHAVE_CURLINFO_OS_ERRNO=1 -DHAVE_CURLINFO_NUM_CONNECTS=1 -DHAVE_CURLINFO_SSL_ENGINES=1 -DHAVE_CURLINFO_COOKIELIST=1 -DHAVE_CURLINFO_LASTSOCKET=1 -DHAVE_CURLINFO_FTP_ENTRY_PATH=1 -DHAVE_CURLINFO_REDIRECT_URL=1 -DHAVE_CURLINFO_PRIMARY_IP=1 -DHAVE_CURLINFO_APPCONNECT_TIME=1 -DHAVE_CURLINFO_CERTINFO=1 -DHAVE_CURLINFO_CONDITION_UNMET=1 -DHAVE_CURLOPT_WRITEDATA=1 -DHAVE_CURLOPT_KEYPASSWD=1 -DHAVE_CURLOPT_DIRLISTONLY=1 -DHAVE_CURLOPT_APPEND=1 -DHAVE_CURLOPT_KRBLEVEL=1 -DHAVE_CURLOPT_USE_SSL=1 -DHAVE_CURLOPT_TIMEOUT_MS=1 -DHAVE_CURLOPT_CONNECTTIMEOUT_MS=1 -DHAVE_CURLOPT_HTTP_TRANSFER_DECODING=1 -DHAVE_CURLOPT_HTTP_CONTENT_DECODING=1 -DHAVE_CURLOPT_NEW_FILE_PERMS=1 -DHAVE_CURLOPT_NEW_DIRECTORY_PERMS=1 -DHAVE_CURLOPT_POSTREDIR=1 -DHAVE_CURLOPT_OPENSOCKETFUNCTION=1 -DHAVE_CURLOPT_OPENSOCKETDATA=1 -DHAVE_CURLOPT_COPYPOSTFIELDS=1 -DHAVE_CURLOPT_PROXY_TRANSFER_MODE=1 -DHAVE_CURLOPT_SEEKFUNCTION=1 -DHAVE_CURLOPT_SEEKDATA=1 -DHAVE_CURLOPT_CRLFILE=1 -DHAVE_CURLOPT_ISSUERCERT=1 -DHAVE_CURLOPT_ADDRESS_SCOPE=1 -DHAVE_CURLOPT_CERTINFO=1 -DHAVE_CURLOPT_USERNAME=1 -DHAVE_CURLOPT_PASSWORD=1 -DHAVE_CURLOPT_PROXYUSERNAME=1 -DHAVE_CURLOPT_PROXYPASSWORD=1 -DHAVE_CURLOPT_SSH_HOST_PUBLIC_KEY_MD5=1 -DHAVE_CURLOPT_NOPROXY=1 -DHAVE_CURLOPT_TFTP_BLKSIZE=1 -DHAVE_CURLOPT_SOCKS5_GSSAPI_SERVICE=1 -DHAVE_CURLOPT_SOCKS5_GSSAPI_NEC=1 -DHAVE_CURLOPT_PROTOCOLS=1 -DHAVE_CURLOPT_REDIR_PROTOCOLS=1 -DHAVE_CURLOPT_SSH_AUTH_TYPES=1 -DHAVE_CURLOPT_SSH_PUBLIC_KEYFILE=1 -DHAVE_CURLOPT_SSH_PRIVATE_KEYFILE=1 -DHAVE_CURLOPT_FTP_SSL_CCC=1 -DHAVE_CURLOPT_COOKIELIST=1 -DHAVE_CURLOPT_IGNORE_CONTENT_LENGTH=1 -DHAVE_CURLOPT_FTP_SKIP_PASV_IP=1 -DHAVE_CURLOPT_FTP_FILEMETHOD=1 -DHAVE_CURLOPT_LOCALPORT=1 -DHAVE_CURLOPT_LOCALPORTRANGE=1 -DHAVE_CURLOPT_CONNECT_ONLY=1 -DHAVE_CURLOPT_CONV_FROM_NETWORK_FUNCTION=1 -DHAVE_CURLOPT_CONV_TO_NETWORK_FUNCTION=1 -DHAVE_CURLOPT_CONV_FROM_UTF8_FUNCTION=1 -DHAVE_CURLOPT_MAX_SEND_SPEED_LARGE=1 -DHAVE_CURLOPT_MAX_RECV_SPEED_LARGE=1 -DHAVE_CURLOPT_FTP_ALTERNATIVE_TO_USER=1 -DHAVE_CURLOPT_SOCKOPTFUNCTION=1 -DHAVE_CURLOPT_SOCKOPTDATA=1 -DHAVE_CURLOPT_SSL_SESSIONID_CACHE=1 -I/usr/include/libxml2     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c memoryManagement.c -o memoryManagement.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -DHAVE_LIBIDN_FIELD=1 -DHAVE_CURLOPT_URL=1 -DHAVE_CURLINFO_EFFECTIVE_URL=1 -DHAVE_CURLINFO_RESPONSE_CODE=1 -DHAVE_CURLINFO_TOTAL_TIME=1 -DHAVE_CURLINFO_NAMELOOKUP_TIME=1 -DHAVE_CURLINFO_CONNECT_TIME=1 -DHAVE_CURLINFO_PRETRANSFER_TIME=1 -DHAVE_CURLINFO_SIZE_UPLOAD=1 -DHAVE_CURLINFO_SIZE_DOWNLOAD=1 -DHAVE_CURLINFO_SPEED_DOWNLOAD=1 -DHAVE_CURLINFO_SPEED_UPLOAD=1 -DHAVE_CURLINFO_HEADER_SIZE=1 -DHAVE_CURLINFO_REQUEST_SIZE=1 -DHAVE_CURLINFO_SSL_VERIFYRESULT=1 -DHAVE_CURLINFO_FILETIME=1 -DHAVE_CURLINFO_CONTENT_LENGTH_DOWNLOAD=1 -DHAVE_CURLINFO_CONTENT_LENGTH_UPLOAD=1 -DHAVE_CURLINFO_STARTTRANSFER_TIME=1 -DHAVE_CURLINFO_CONTENT_TYPE=1 -DHAVE_CURLINFO_REDIRECT_TIME=1 -DHAVE_CURLINFO_REDIRECT_COUNT=1 -DHAVE_CURLINFO_PRIVATE=1 -DHAVE_CURLINFO_HTTP_CONNECTCODE=1 -DHAVE_CURLINFO_HTTPAUTH_AVAIL=1 -DHAVE_CURLINFO_PROXYAUTH_AVAIL=1 -DHAVE_CURLINFO_OS_ERRNO=1 -DHAVE_CURLINFO_NUM_CONNECTS=1 -DHAVE_CURLINFO_SSL_ENGINES=1 -DHAVE_CURLINFO_COOKIELIST=1 -DHAVE_CURLINFO_LASTSOCKET=1 -DHAVE_CURLINFO_FTP_ENTRY_PATH=1 -DHAVE_CURLINFO_REDIRECT_URL=1 -DHAVE_CURLINFO_PRIMARY_IP=1 -DHAVE_CURLINFO_APPCONNECT_TIME=1 -DHAVE_CURLINFO_CERTINFO=1 -DHAVE_CURLINFO_CONDITION_UNMET=1 -DHAVE_CURLOPT_WRITEDATA=1 -DHAVE_CURLOPT_KEYPASSWD=1 -DHAVE_CURLOPT_DIRLISTONLY=1 -DHAVE_CURLOPT_APPEND=1 -DHAVE_CURLOPT_KRBLEVEL=1 -DHAVE_CURLOPT_USE_SSL=1 -DHAVE_CURLOPT_TIMEOUT_MS=1 -DHAVE_CURLOPT_CONNECTTIMEOUT_MS=1 -DHAVE_CURLOPT_HTTP_TRANSFER_DECODING=1 -DHAVE_CURLOPT_HTTP_CONTENT_DECODING=1 -DHAVE_CURLOPT_NEW_FILE_PERMS=1 -DHAVE_CURLOPT_NEW_DIRECTORY_PERMS=1 -DHAVE_CURLOPT_POSTREDIR=1 -DHAVE_CURLOPT_OPENSOCKETFUNCTION=1 -DHAVE_CURLOPT_OPENSOCKETDATA=1 -DHAVE_CURLOPT_COPYPOSTFIELDS=1 -DHAVE_CURLOPT_PROXY_TRANSFER_MODE=1 -DHAVE_CURLOPT_SEEKFUNCTION=1 -DHAVE_CURLOPT_SEEKDATA=1 -DHAVE_CURLOPT_CRLFILE=1 -DHAVE_CURLOPT_ISSUERCERT=1 -DHAVE_CURLOPT_ADDRESS_SCOPE=1 -DHAVE_CURLOPT_CERTINFO=1 -DHAVE_CURLOPT_USERNAME=1 -DHAVE_CURLOPT_PASSWORD=1 -DHAVE_CURLOPT_PROXYUSERNAME=1 -DHAVE_CURLOPT_PROXYPASSWORD=1 -DHAVE_CURLOPT_SSH_HOST_PUBLIC_KEY_MD5=1 -DHAVE_CURLOPT_NOPROXY=1 -DHAVE_CURLOPT_TFTP_BLKSIZE=1 -DHAVE_CURLOPT_SOCKS5_GSSAPI_SERVICE=1 -DHAVE_CURLOPT_SOCKS5_GSSAPI_NEC=1 -DHAVE_CURLOPT_PROTOCOLS=1 -DHAVE_CURLOPT_REDIR_PROTOCOLS=1 -DHAVE_CURLOPT_SSH_AUTH_TYPES=1 -DHAVE_CURLOPT_SSH_PUBLIC_KEYFILE=1 -DHAVE_CURLOPT_SSH_PRIVATE_KEYFILE=1 -DHAVE_CURLOPT_FTP_SSL_CCC=1 -DHAVE_CURLOPT_COOKIELIST=1 -DHAVE_CURLOPT_IGNORE_CONTENT_LENGTH=1 -DHAVE_CURLOPT_FTP_SKIP_PASV_IP=1 -DHAVE_CURLOPT_FTP_FILEMETHOD=1 -DHAVE_CURLOPT_LOCALPORT=1 -DHAVE_CURLOPT_LOCALPORTRANGE=1 -DHAVE_CURLOPT_CONNECT_ONLY=1 -DHAVE_CURLOPT_CONV_FROM_NETWORK_FUNCTION=1 -DHAVE_CURLOPT_CONV_TO_NETWORK_FUNCTION=1 -DHAVE_CURLOPT_CONV_FROM_UTF8_FUNCTION=1 -DHAVE_CURLOPT_MAX_SEND_SPEED_LARGE=1 -DHAVE_CURLOPT_MAX_RECV_SPEED_LARGE=1 -DHAVE_CURLOPT_FTP_ALTERNATIVE_TO_USER=1 -DHAVE_CURLOPT_SOCKOPTFUNCTION=1 -DHAVE_CURLOPT_SOCKOPTDATA=1 -DHAVE_CURLOPT_SSL_SESSIONID_CACHE=1 -I/usr/include/libxml2     -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c myUTF8.c -o myUTF8.o\n",
            "gcc -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o RCurl.so base64.o curl.o curlInit.o curl_base64.o enums.o json.o memoryManagement.o myUTF8.o -lcurl -lxml2 -L/usr/lib/R/lib -lR\n",
            "installing to /usr/local/lib/R/site-library/00LOCK-RCurl/00new/RCurl/libs\n",
            "** R\n",
            "** data\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** checking absolute paths in shared objects and dynamic libraries\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (RCurl)\n",
            "* installing *source* package ‘lambda.r’ ...\n",
            "** package ‘lambda.r’ successfully unpacked and MD5 sums checked\n",
            "** using staged installation\n",
            "** R\n",
            "** byte-compile and prepare package for lazy loading\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (lambda.r)\n",
            "* installing *source* package ‘RSQLite’ ...\n",
            "** package ‘RSQLite’ successfully unpacked and MD5 sums checked\n",
            "** using staged installation\n",
            "** libs\n",
            "g++ -std=gnu++14 -I\"/usr/share/R/include\" -DNDEBUG -I. -Ivendor -Ivendor/extensions -Ivendor/sqlite3 -DRSQLITE_USE_BUNDLED_SQLITE -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_STAT4 -DSQLITE_SOUNDEX -DSQLITE_USE_URI=1 -DRCPP_DEFAULT_INCLUDE_CALL=false -DRCPP_USING_UTF8_ERROR_STRING -DBOOST_NO_AUTO_PTR -DSQLITE_MAX_LENGTH=2147483647 -DHAVE_USLEEP=1 -I'/usr/local/lib/R/site-library/plogr/include' -I'/usr/local/lib/R/site-library/Rcpp/include'   -fvisibility=hidden -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c DbColumn.cpp -o DbColumn.o\n",
            "g++ -std=gnu++14 -I\"/usr/share/R/include\" -DNDEBUG -I. -Ivendor -Ivendor/extensions -Ivendor/sqlite3 -DRSQLITE_USE_BUNDLED_SQLITE -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_STAT4 -DSQLITE_SOUNDEX -DSQLITE_USE_URI=1 -DRCPP_DEFAULT_INCLUDE_CALL=false -DRCPP_USING_UTF8_ERROR_STRING -DBOOST_NO_AUTO_PTR -DSQLITE_MAX_LENGTH=2147483647 -DHAVE_USLEEP=1 -I'/usr/local/lib/R/site-library/plogr/include' -I'/usr/local/lib/R/site-library/Rcpp/include'   -fvisibility=hidden -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c DbColumnDataSource.cpp -o DbColumnDataSource.o\n",
            "g++ -std=gnu++14 -I\"/usr/share/R/include\" -DNDEBUG -I. -Ivendor -Ivendor/extensions -Ivendor/sqlite3 -DRSQLITE_USE_BUNDLED_SQLITE -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_STAT4 -DSQLITE_SOUNDEX -DSQLITE_USE_URI=1 -DRCPP_DEFAULT_INCLUDE_CALL=false -DRCPP_USING_UTF8_ERROR_STRING -DBOOST_NO_AUTO_PTR -DSQLITE_MAX_LENGTH=2147483647 -DHAVE_USLEEP=1 -I'/usr/local/lib/R/site-library/plogr/include' -I'/usr/local/lib/R/site-library/Rcpp/include'   -fvisibility=hidden -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c DbColumnDataSourceFactory.cpp -o DbColumnDataSourceFactory.o\n",
            "g++ -std=gnu++14 -I\"/usr/share/R/include\" -DNDEBUG -I. -Ivendor -Ivendor/extensions -Ivendor/sqlite3 -DRSQLITE_USE_BUNDLED_SQLITE -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_STAT4 -DSQLITE_SOUNDEX -DSQLITE_USE_URI=1 -DRCPP_DEFAULT_INCLUDE_CALL=false -DRCPP_USING_UTF8_ERROR_STRING -DBOOST_NO_AUTO_PTR -DSQLITE_MAX_LENGTH=2147483647 -DHAVE_USLEEP=1 -I'/usr/local/lib/R/site-library/plogr/include' -I'/usr/local/lib/R/site-library/Rcpp/include'   -fvisibility=hidden -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c DbColumnStorage.cpp -o DbColumnStorage.o\n",
            "g++ -std=gnu++14 -I\"/usr/share/R/include\" -DNDEBUG -I. -Ivendor -Ivendor/extensions -Ivendor/sqlite3 -DRSQLITE_USE_BUNDLED_SQLITE -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_STAT4 -DSQLITE_SOUNDEX -DSQLITE_USE_URI=1 -DRCPP_DEFAULT_INCLUDE_CALL=false -DRCPP_USING_UTF8_ERROR_STRING -DBOOST_NO_AUTO_PTR -DSQLITE_MAX_LENGTH=2147483647 -DHAVE_USLEEP=1 -I'/usr/local/lib/R/site-library/plogr/include' -I'/usr/local/lib/R/site-library/Rcpp/include'   -fvisibility=hidden -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c DbConnection.cpp -o DbConnection.o\n",
            "g++ -std=gnu++14 -I\"/usr/share/R/include\" -DNDEBUG -I. -Ivendor -Ivendor/extensions -Ivendor/sqlite3 -DRSQLITE_USE_BUNDLED_SQLITE -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_STAT4 -DSQLITE_SOUNDEX -DSQLITE_USE_URI=1 -DRCPP_DEFAULT_INCLUDE_CALL=false -DRCPP_USING_UTF8_ERROR_STRING -DBOOST_NO_AUTO_PTR -DSQLITE_MAX_LENGTH=2147483647 -DHAVE_USLEEP=1 -I'/usr/local/lib/R/site-library/plogr/include' -I'/usr/local/lib/R/site-library/Rcpp/include'   -fvisibility=hidden -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c DbDataFrame.cpp -o DbDataFrame.o\n",
            "In file included from \u001b[01m\u001b[KDbDataFrame.cpp:7:0\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[Kvendor/boost/bind.hpp:41:1:\u001b[m\u001b[K \u001b[01;36m\u001b[Knote: \u001b[m\u001b[K#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.\n",
            " \u001b[01;36m\u001b[K)\u001b[m\u001b[K\n",
            " \u001b[01;36m\u001b[K^\u001b[m\u001b[K\n",
            "g++ -std=gnu++14 -I\"/usr/share/R/include\" -DNDEBUG -I. -Ivendor -Ivendor/extensions -Ivendor/sqlite3 -DRSQLITE_USE_BUNDLED_SQLITE -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_STAT4 -DSQLITE_SOUNDEX -DSQLITE_USE_URI=1 -DRCPP_DEFAULT_INCLUDE_CALL=false -DRCPP_USING_UTF8_ERROR_STRING -DBOOST_NO_AUTO_PTR -DSQLITE_MAX_LENGTH=2147483647 -DHAVE_USLEEP=1 -I'/usr/local/lib/R/site-library/plogr/include' -I'/usr/local/lib/R/site-library/Rcpp/include'   -fvisibility=hidden -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c DbResult.cpp -o DbResult.o\n",
            "g++ -std=gnu++14 -I\"/usr/share/R/include\" -DNDEBUG -I. -Ivendor -Ivendor/extensions -Ivendor/sqlite3 -DRSQLITE_USE_BUNDLED_SQLITE -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_STAT4 -DSQLITE_SOUNDEX -DSQLITE_USE_URI=1 -DRCPP_DEFAULT_INCLUDE_CALL=false -DRCPP_USING_UTF8_ERROR_STRING -DBOOST_NO_AUTO_PTR -DSQLITE_MAX_LENGTH=2147483647 -DHAVE_USLEEP=1 -I'/usr/local/lib/R/site-library/plogr/include' -I'/usr/local/lib/R/site-library/Rcpp/include'   -fvisibility=hidden -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c RcppExports.cpp -o RcppExports.o\n",
            "g++ -std=gnu++14 -I\"/usr/share/R/include\" -DNDEBUG -I. -Ivendor -Ivendor/extensions -Ivendor/sqlite3 -DRSQLITE_USE_BUNDLED_SQLITE -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_STAT4 -DSQLITE_SOUNDEX -DSQLITE_USE_URI=1 -DRCPP_DEFAULT_INCLUDE_CALL=false -DRCPP_USING_UTF8_ERROR_STRING -DBOOST_NO_AUTO_PTR -DSQLITE_MAX_LENGTH=2147483647 -DHAVE_USLEEP=1 -I'/usr/local/lib/R/site-library/plogr/include' -I'/usr/local/lib/R/site-library/Rcpp/include'   -fvisibility=hidden -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c SqliteColumnDataSource.cpp -o SqliteColumnDataSource.o\n",
            "g++ -std=gnu++14 -I\"/usr/share/R/include\" -DNDEBUG -I. -Ivendor -Ivendor/extensions -Ivendor/sqlite3 -DRSQLITE_USE_BUNDLED_SQLITE -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_STAT4 -DSQLITE_SOUNDEX -DSQLITE_USE_URI=1 -DRCPP_DEFAULT_INCLUDE_CALL=false -DRCPP_USING_UTF8_ERROR_STRING -DBOOST_NO_AUTO_PTR -DSQLITE_MAX_LENGTH=2147483647 -DHAVE_USLEEP=1 -I'/usr/local/lib/R/site-library/plogr/include' -I'/usr/local/lib/R/site-library/Rcpp/include'   -fvisibility=hidden -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c SqliteColumnDataSourceFactory.cpp -o SqliteColumnDataSourceFactory.o\n",
            "g++ -std=gnu++14 -I\"/usr/share/R/include\" -DNDEBUG -I. -Ivendor -Ivendor/extensions -Ivendor/sqlite3 -DRSQLITE_USE_BUNDLED_SQLITE -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_STAT4 -DSQLITE_SOUNDEX -DSQLITE_USE_URI=1 -DRCPP_DEFAULT_INCLUDE_CALL=false -DRCPP_USING_UTF8_ERROR_STRING -DBOOST_NO_AUTO_PTR -DSQLITE_MAX_LENGTH=2147483647 -DHAVE_USLEEP=1 -I'/usr/local/lib/R/site-library/plogr/include' -I'/usr/local/lib/R/site-library/Rcpp/include'   -fvisibility=hidden -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c SqliteDataFrame.cpp -o SqliteDataFrame.o\n",
            "g++ -std=gnu++14 -I\"/usr/share/R/include\" -DNDEBUG -I. -Ivendor -Ivendor/extensions -Ivendor/sqlite3 -DRSQLITE_USE_BUNDLED_SQLITE -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_STAT4 -DSQLITE_SOUNDEX -DSQLITE_USE_URI=1 -DRCPP_DEFAULT_INCLUDE_CALL=false -DRCPP_USING_UTF8_ERROR_STRING -DBOOST_NO_AUTO_PTR -DSQLITE_MAX_LENGTH=2147483647 -DHAVE_USLEEP=1 -I'/usr/local/lib/R/site-library/plogr/include' -I'/usr/local/lib/R/site-library/Rcpp/include'   -fvisibility=hidden -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c SqliteResult.cpp -o SqliteResult.o\n",
            "g++ -std=gnu++14 -I\"/usr/share/R/include\" -DNDEBUG -I. -Ivendor -Ivendor/extensions -Ivendor/sqlite3 -DRSQLITE_USE_BUNDLED_SQLITE -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_STAT4 -DSQLITE_SOUNDEX -DSQLITE_USE_URI=1 -DRCPP_DEFAULT_INCLUDE_CALL=false -DRCPP_USING_UTF8_ERROR_STRING -DBOOST_NO_AUTO_PTR -DSQLITE_MAX_LENGTH=2147483647 -DHAVE_USLEEP=1 -I'/usr/local/lib/R/site-library/plogr/include' -I'/usr/local/lib/R/site-library/Rcpp/include'   -fvisibility=hidden -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c SqliteResultImpl.cpp -o SqliteResultImpl.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG -I. -Ivendor -Ivendor/extensions -Ivendor/sqlite3 -DRSQLITE_USE_BUNDLED_SQLITE -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_STAT4 -DSQLITE_SOUNDEX -DSQLITE_USE_URI=1 -DRCPP_DEFAULT_INCLUDE_CALL=false -DRCPP_USING_UTF8_ERROR_STRING -DBOOST_NO_AUTO_PTR -DSQLITE_MAX_LENGTH=2147483647 -DHAVE_USLEEP=1 -I'/usr/local/lib/R/site-library/plogr/include' -I'/usr/local/lib/R/site-library/Rcpp/include'   -fvisibility=hidden -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c affinity.c -o affinity.o\n",
            "g++ -std=gnu++14 -I\"/usr/share/R/include\" -DNDEBUG -I. -Ivendor -Ivendor/extensions -Ivendor/sqlite3 -DRSQLITE_USE_BUNDLED_SQLITE -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_STAT4 -DSQLITE_SOUNDEX -DSQLITE_USE_URI=1 -DRCPP_DEFAULT_INCLUDE_CALL=false -DRCPP_USING_UTF8_ERROR_STRING -DBOOST_NO_AUTO_PTR -DSQLITE_MAX_LENGTH=2147483647 -DHAVE_USLEEP=1 -I'/usr/local/lib/R/site-library/plogr/include' -I'/usr/local/lib/R/site-library/Rcpp/include'   -fvisibility=hidden -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c connection.cpp -o connection.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG -I. -Ivendor -Ivendor/extensions -Ivendor/sqlite3 -DRSQLITE_USE_BUNDLED_SQLITE -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_STAT4 -DSQLITE_SOUNDEX -DSQLITE_USE_URI=1 -DRCPP_DEFAULT_INCLUDE_CALL=false -DRCPP_USING_UTF8_ERROR_STRING -DBOOST_NO_AUTO_PTR -DSQLITE_MAX_LENGTH=2147483647 -DHAVE_USLEEP=1 -I'/usr/local/lib/R/site-library/plogr/include' -I'/usr/local/lib/R/site-library/Rcpp/include'   -fvisibility=hidden -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c ext-csv.c -o ext-csv.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG -I. -Ivendor -Ivendor/extensions -Ivendor/sqlite3 -DRSQLITE_USE_BUNDLED_SQLITE -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_STAT4 -DSQLITE_SOUNDEX -DSQLITE_USE_URI=1 -DRCPP_DEFAULT_INCLUDE_CALL=false -DRCPP_USING_UTF8_ERROR_STRING -DBOOST_NO_AUTO_PTR -DSQLITE_MAX_LENGTH=2147483647 -DHAVE_USLEEP=1 -I'/usr/local/lib/R/site-library/plogr/include' -I'/usr/local/lib/R/site-library/Rcpp/include'   -fvisibility=hidden -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c ext-math.c -o ext-math.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG -I. -Ivendor -Ivendor/extensions -Ivendor/sqlite3 -DRSQLITE_USE_BUNDLED_SQLITE -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_STAT4 -DSQLITE_SOUNDEX -DSQLITE_USE_URI=1 -DRCPP_DEFAULT_INCLUDE_CALL=false -DRCPP_USING_UTF8_ERROR_STRING -DBOOST_NO_AUTO_PTR -DSQLITE_MAX_LENGTH=2147483647 -DHAVE_USLEEP=1 -I'/usr/local/lib/R/site-library/plogr/include' -I'/usr/local/lib/R/site-library/Rcpp/include'   -fvisibility=hidden -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c ext-regexp.c -o ext-regexp.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG -I. -Ivendor -Ivendor/extensions -Ivendor/sqlite3 -DRSQLITE_USE_BUNDLED_SQLITE -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_STAT4 -DSQLITE_SOUNDEX -DSQLITE_USE_URI=1 -DRCPP_DEFAULT_INCLUDE_CALL=false -DRCPP_USING_UTF8_ERROR_STRING -DBOOST_NO_AUTO_PTR -DSQLITE_MAX_LENGTH=2147483647 -DHAVE_USLEEP=1 -I'/usr/local/lib/R/site-library/plogr/include' -I'/usr/local/lib/R/site-library/Rcpp/include'   -fvisibility=hidden -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c ext-series.c -o ext-series.o\n",
            "g++ -std=gnu++14 -I\"/usr/share/R/include\" -DNDEBUG -I. -Ivendor -Ivendor/extensions -Ivendor/sqlite3 -DRSQLITE_USE_BUNDLED_SQLITE -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_STAT4 -DSQLITE_SOUNDEX -DSQLITE_USE_URI=1 -DRCPP_DEFAULT_INCLUDE_CALL=false -DRCPP_USING_UTF8_ERROR_STRING -DBOOST_NO_AUTO_PTR -DSQLITE_MAX_LENGTH=2147483647 -DHAVE_USLEEP=1 -I'/usr/local/lib/R/site-library/plogr/include' -I'/usr/local/lib/R/site-library/Rcpp/include'   -fvisibility=hidden -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c extensions.cpp -o extensions.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG -I. -Ivendor -Ivendor/extensions -Ivendor/sqlite3 -DRSQLITE_USE_BUNDLED_SQLITE -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_STAT4 -DSQLITE_SOUNDEX -DSQLITE_USE_URI=1 -DRCPP_DEFAULT_INCLUDE_CALL=false -DRCPP_USING_UTF8_ERROR_STRING -DBOOST_NO_AUTO_PTR -DSQLITE_MAX_LENGTH=2147483647 -DHAVE_USLEEP=1 -I'/usr/local/lib/R/site-library/plogr/include' -I'/usr/local/lib/R/site-library/Rcpp/include'   -fvisibility=hidden -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c import-file.c -o import-file.o\n",
            "g++ -std=gnu++14 -I\"/usr/share/R/include\" -DNDEBUG -I. -Ivendor -Ivendor/extensions -Ivendor/sqlite3 -DRSQLITE_USE_BUNDLED_SQLITE -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_STAT4 -DSQLITE_SOUNDEX -DSQLITE_USE_URI=1 -DRCPP_DEFAULT_INCLUDE_CALL=false -DRCPP_USING_UTF8_ERROR_STRING -DBOOST_NO_AUTO_PTR -DSQLITE_MAX_LENGTH=2147483647 -DHAVE_USLEEP=1 -I'/usr/local/lib/R/site-library/plogr/include' -I'/usr/local/lib/R/site-library/Rcpp/include'   -fvisibility=hidden -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c result.cpp -o result.o\n",
            "g++ -std=gnu++14 -I\"/usr/share/R/include\" -DNDEBUG -I. -Ivendor -Ivendor/extensions -Ivendor/sqlite3 -DRSQLITE_USE_BUNDLED_SQLITE -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_STAT4 -DSQLITE_SOUNDEX -DSQLITE_USE_URI=1 -DRCPP_DEFAULT_INCLUDE_CALL=false -DRCPP_USING_UTF8_ERROR_STRING -DBOOST_NO_AUTO_PTR -DSQLITE_MAX_LENGTH=2147483647 -DHAVE_USLEEP=1 -I'/usr/local/lib/R/site-library/plogr/include' -I'/usr/local/lib/R/site-library/Rcpp/include'   -fvisibility=hidden -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c rsqlite.cpp -o rsqlite.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG -I. -Ivendor -Ivendor/extensions -Ivendor/sqlite3 -DRSQLITE_USE_BUNDLED_SQLITE -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_STAT4 -DSQLITE_SOUNDEX -DSQLITE_USE_URI=1 -DRCPP_DEFAULT_INCLUDE_CALL=false -DRCPP_USING_UTF8_ERROR_STRING -DBOOST_NO_AUTO_PTR -DSQLITE_MAX_LENGTH=2147483647 -DHAVE_USLEEP=1 -I'/usr/local/lib/R/site-library/plogr/include' -I'/usr/local/lib/R/site-library/Rcpp/include'   -fvisibility=hidden -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c vendor/sqlite3/sqlite3.c -o vendor/sqlite3/sqlite3.o\n",
            "g++ -std=gnu++14 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o RSQLite.so DbColumn.o DbColumnDataSource.o DbColumnDataSourceFactory.o DbColumnStorage.o DbConnection.o DbDataFrame.o DbResult.o RcppExports.o SqliteColumnDataSource.o SqliteColumnDataSourceFactory.o SqliteDataFrame.o SqliteResult.o SqliteResultImpl.o affinity.o connection.o ext-csv.o ext-math.o ext-regexp.o ext-series.o extensions.o import-file.o result.o rsqlite.o vendor/sqlite3/sqlite3.o -L/usr/lib/R/lib -lR\n",
            "installing to /usr/local/lib/R/site-library/00LOCK-RSQLite/00new/RSQLite/libs\n",
            "** R\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** installing vignettes\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** checking absolute paths in shared objects and dynamic libraries\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (RSQLite)\n",
            "* installing *source* package ‘MatrixGenerics’ ...\n",
            "** using staged installation\n",
            "** R\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (MatrixGenerics)\n",
            "* installing *source* package ‘S4Vectors’ ...\n",
            "** using staged installation\n",
            "** libs\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c AEbufs.c -o AEbufs.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c DataFrame_class.c -o DataFrame_class.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c Hits_class.c -o Hits_class.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c LLint_class.c -o LLint_class.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c List_class.c -o List_class.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c R_init_S4Vectors.c -o R_init_S4Vectors.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c Rle_class.c -o Rle_class.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c Rle_utils.c -o Rle_utils.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c SEXP_utils.c -o SEXP_utils.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c SimpleList_class.c -o SimpleList_class.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c anyMissing.c -o anyMissing.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c character_utils.c -o character_utils.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c eval_utils.c -o eval_utils.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c hash_utils.c -o hash_utils.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c integer_utils.c -o integer_utils.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c logical_utils.c -o logical_utils.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c map_ranges_to_runs.c -o map_ranges_to_runs.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c raw_utils.c -o raw_utils.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c safe_arithm.c -o safe_arithm.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c sort_utils.c -o sort_utils.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c subsetting_utils.c -o subsetting_utils.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c vector_utils.c -o vector_utils.o\n",
            "gcc -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o S4Vectors.so AEbufs.o DataFrame_class.o Hits_class.o LLint_class.o List_class.o R_init_S4Vectors.o Rle_class.o Rle_utils.o SEXP_utils.o SimpleList_class.o anyMissing.o character_utils.o eval_utils.o hash_utils.o integer_utils.o logical_utils.o map_ranges_to_runs.o raw_utils.o safe_arithm.o sort_utils.o subsetting_utils.o vector_utils.o -L/usr/lib/R/lib -lR\n",
            "installing to /usr/local/lib/R/site-library/00LOCK-S4Vectors/00new/S4Vectors/libs\n",
            "** R\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "in method for ‘normalizeSingleBracketReplacementValue’ with signature ‘\"List\"’: no definition for class “List”\n",
            "Creating a new generic function for ‘unname’ in package ‘S4Vectors’\n",
            "Creating a new generic function for ‘expand.grid’ in package ‘S4Vectors’\n",
            "Creating a new generic function for ‘findMatches’ in package ‘S4Vectors’\n",
            "Creating a generic function for ‘setequal’ from package ‘base’ in package ‘S4Vectors’\n",
            "in method for ‘coerce’ with signature ‘\"Hits\",\"DFrame\"’: no definition for class “DFrame”\n",
            "Creating a generic function for ‘as.factor’ from package ‘base’ in package ‘S4Vectors’\n",
            "Creating a generic function for ‘tabulate’ from package ‘base’ in package ‘S4Vectors’\n",
            "Creating a generic function for ‘cov’ from package ‘stats’ in package ‘S4Vectors’\n",
            "Creating a generic function for ‘cor’ from package ‘stats’ in package ‘S4Vectors’\n",
            "Creating a generic function for ‘smoothEnds’ from package ‘stats’ in package ‘S4Vectors’\n",
            "Creating a generic function for ‘runmed’ from package ‘stats’ in package ‘S4Vectors’\n",
            "Creating a generic function for ‘nchar’ from package ‘base’ in package ‘S4Vectors’\n",
            "Creating a generic function for ‘substr’ from package ‘base’ in package ‘S4Vectors’\n",
            "Creating a generic function for ‘substring’ from package ‘base’ in package ‘S4Vectors’\n",
            "Creating a generic function for ‘chartr’ from package ‘base’ in package ‘S4Vectors’\n",
            "Creating a generic function for ‘tolower’ from package ‘base’ in package ‘S4Vectors’\n",
            "Creating a generic function for ‘toupper’ from package ‘base’ in package ‘S4Vectors’\n",
            "Creating a generic function for ‘sub’ from package ‘base’ in package ‘S4Vectors’\n",
            "Creating a generic function for ‘gsub’ from package ‘base’ in package ‘S4Vectors’\n",
            "Creating a generic function for ‘nlevels’ from package ‘base’ in package ‘S4Vectors’\n",
            "in method for ‘coerce’ with signature ‘\"data.table\",\"DFrame\"’: no definition for class “data.table”\n",
            "Creating a generic function for ‘complete.cases’ from package ‘stats’ in package ‘S4Vectors’\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** installing vignettes\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** checking absolute paths in shared objects and dynamic libraries\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (S4Vectors)\n",
            "* installing *source* package ‘Biobase’ ...\n",
            "** using staged installation\n",
            "** libs\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c Rinit.c -o Rinit.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c anyMissing.c -o anyMissing.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c envir.c -o envir.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c matchpt.c -o matchpt.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c rowMedians.c -o rowMedians.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG      -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c sublist_extract.c -o sublist_extract.o\n",
            "gcc -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o Biobase.so Rinit.o anyMissing.o envir.o matchpt.o rowMedians.o sublist_extract.o -L/usr/lib/R/lib -lR\n",
            "installing to /usr/local/lib/R/site-library/00LOCK-Biobase/00new/Biobase/libs\n",
            "** R\n",
            "** data\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** installing vignettes\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** checking absolute paths in shared objects and dynamic libraries\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (Biobase)\n",
            "* installing *source* package ‘RcppArmadillo’ ...\n",
            "** package ‘RcppArmadillo’ successfully unpacked and MD5 sums checked\n",
            "** using staged installation\n",
            "checking whether the C++ compiler works... yes\n",
            "checking for C++ compiler default output file name... a.out\n",
            "checking for suffix of executables... \n",
            "checking whether we are cross compiling... no\n",
            "checking for suffix of object files... o\n",
            "checking whether the compiler supports GNU C++... yes\n",
            "checking whether g++ -std=gnu++14 accepts -g... yes\n",
            "checking for g++ -std=gnu++14 option to enable C++11 features... none needed\n",
            "checking how to run the C++ preprocessor... g++ -std=gnu++14 -E\n",
            "checking whether the compiler supports GNU C++... (cached) yes\n",
            "checking whether g++ -std=gnu++14 accepts -g... (cached) yes\n",
            "checking for g++ -std=gnu++14 option to enable C++11 features... (cached) none needed\n",
            "checking whether we have a suitable tempdir... /tmp\n",
            "checking whether R CMD SHLIB can already compile programs using OpenMP... yes\n",
            "checking LAPACK_LIBS... system LAPACK found\n",
            "configure: creating ./config.status\n",
            "config.status: creating inst/include/RcppArmadillo/config/RcppArmadilloConfigGenerated.h\n",
            "config.status: creating src/Makevars\n",
            "** libs\n",
            "g++ -std=gnu++11 -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include'   -I../inst/include -fopenmp -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c RcppArmadillo.cpp -o RcppArmadillo.o\n",
            "g++ -std=gnu++11 -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include'   -I../inst/include -fopenmp -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c RcppExports.cpp -o RcppExports.o\n",
            "g++ -std=gnu++11 -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include'   -I../inst/include -fopenmp -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c fastLm.cpp -o fastLm.o\n",
            "g++ -std=gnu++11 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o RcppArmadillo.so RcppArmadillo.o RcppExports.o fastLm.o -fopenmp -llapack -lblas -lgfortran -lm -lquadmath -L/usr/lib/R/lib -lR\n",
            "installing to /usr/local/lib/R/site-library/00LOCK-RcppArmadillo/00new/RcppArmadillo/libs\n",
            "** R\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** installing vignettes\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** checking absolute paths in shared objects and dynamic libraries\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (RcppArmadillo)\n",
            "* installing *source* package ‘futile.logger’ ...\n",
            "** package ‘futile.logger’ successfully unpacked and MD5 sums checked\n",
            "** using staged installation\n",
            "** R\n",
            "** byte-compile and prepare package for lazy loading\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (futile.logger)\n",
            "* installing *source* package ‘IRanges’ ...\n",
            "** using staged installation\n",
            "** libs\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c CompressedAtomicList_utils.c -o CompressedAtomicList_utils.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c CompressedIRangesList_class.c -o CompressedIRangesList_class.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c CompressedList_class.c -o CompressedList_class.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c Grouping_class.c -o Grouping_class.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c IPosRanges_comparison.c -o IPosRanges_comparison.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c IRanges_class.c -o IRanges_class.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c IRanges_constructor.c -o IRanges_constructor.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c NCList.c -o NCList.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c R_init_IRanges.c -o R_init_IRanges.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c Ranges_class.c -o Ranges_class.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c RleViews_utils.c -o RleViews_utils.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c S4Vectors_stubs.c -o S4Vectors_stubs.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c SimpleIRangesList_class.c -o SimpleIRangesList_class.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c coverage_methods.c -o coverage_methods.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c extractListFragments.c -o extractListFragments.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c inter_range_methods.c -o inter_range_methods.o\n",
            "gcc -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o IRanges.so CompressedAtomicList_utils.o CompressedIRangesList_class.o CompressedList_class.o Grouping_class.o IPosRanges_comparison.o IRanges_class.o IRanges_constructor.o NCList.o R_init_IRanges.o Ranges_class.o RleViews_utils.o S4Vectors_stubs.o SimpleIRangesList_class.o coverage_methods.o extractListFragments.o inter_range_methods.o -L/usr/lib/R/lib -lR\n",
            "installing to /usr/local/lib/R/site-library/00LOCK-IRanges/00new/IRanges/libs\n",
            "** R\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "Creating a generic function for ‘drop’ from package ‘base’ in package ‘IRanges’\n",
            "Creating a generic function for ‘runmed’ from package ‘stats’ in package ‘IRanges’\n",
            "Creating a generic function for ‘chartr’ from package ‘base’ in package ‘IRanges’\n",
            "Creating a generic function for ‘toupper’ from package ‘base’ in package ‘IRanges’\n",
            "Creating a generic function for ‘tolower’ from package ‘base’ in package ‘IRanges’\n",
            "Creating a generic function for ‘sub’ from package ‘base’ in package ‘IRanges’\n",
            "Creating a generic function for ‘gsub’ from package ‘base’ in package ‘IRanges’\n",
            "Creating a generic function for ‘startsWith’ from package ‘base’ in package ‘IRanges’\n",
            "Creating a generic function for ‘endsWith’ from package ‘base’ in package ‘IRanges’\n",
            "Creating a generic function for ‘smoothEnds’ from package ‘stats’ in package ‘IRanges’\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** installing vignettes\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** checking absolute paths in shared objects and dynamic libraries\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (IRanges)\n",
            "* installing *source* package ‘GenomeInfoDb’ ...\n",
            "** using staged installation\n",
            "** R\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** installing vignettes\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (GenomeInfoDb)\n",
            "* installing *source* package ‘XVector’ ...\n",
            "** using staged installation\n",
            "** libs\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c IRanges_stubs.c -o IRanges_stubs.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c Ocopy_byteblocks.c -o Ocopy_byteblocks.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c RDS_random_access.c -o RDS_random_access.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c R_init_XVector.c -o R_init_XVector.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c S4Vectors_stubs.c -o S4Vectors_stubs.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c SharedDouble_class.c -o SharedDouble_class.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c SharedInteger_class.c -o SharedInteger_class.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c SharedRaw_class.c -o SharedRaw_class.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c SharedVector_class.c -o SharedVector_class.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c XDouble_class.c -o XDouble_class.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c XInteger_class.c -o XInteger_class.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c XRawList_comparison.c -o XRawList_comparison.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c XRaw_class.c -o XRaw_class.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c XVectorList_class.c -o XVectorList_class.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c XVector_class.c -o XVector_class.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c io_utils.c -o io_utils.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c slice_methods.c -o slice_methods.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c vector_copy.c -o vector_copy.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c view_summarization_methods.c -o view_summarization_methods.o\n",
            "gcc -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o XVector.so IRanges_stubs.o Ocopy_byteblocks.o RDS_random_access.o R_init_XVector.o S4Vectors_stubs.o SharedDouble_class.o SharedInteger_class.o SharedRaw_class.o SharedVector_class.o XDouble_class.o XInteger_class.o XRawList_comparison.o XRaw_class.o XVectorList_class.o XVector_class.o io_utils.o slice_methods.o vector_copy.o view_summarization_methods.o -lz -L/usr/lib/R/lib -lR\n",
            "installing to /usr/local/lib/R/site-library/00LOCK-XVector/00new/XVector/libs\n",
            "** R\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** checking absolute paths in shared objects and dynamic libraries\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (XVector)\n",
            "* installing *source* package ‘DelayedArray’ ...\n",
            "** using staged installation\n",
            "** libs\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c R_init_DelayedArray.c -o R_init_DelayedArray.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c S4Vectors_stubs.c -o S4Vectors_stubs.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c abind.c -o abind.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c array_selection.c -o array_selection.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c compress_atomic_vector.c -o compress_atomic_vector.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c sparseMatrix_utils.c -o sparseMatrix_utils.o\n",
            "gcc -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o DelayedArray.so R_init_DelayedArray.o S4Vectors_stubs.o abind.o array_selection.o compress_atomic_vector.o sparseMatrix_utils.o -L/usr/lib/R/lib -lR\n",
            "installing to /usr/local/lib/R/site-library/00LOCK-DelayedArray/00new/DelayedArray/libs\n",
            "** R\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "Creating a new generic function for ‘rowsum’ in package ‘DelayedArray’\n",
            "Creating a new generic function for ‘apply’ in package ‘DelayedArray’\n",
            "Creating a new generic function for ‘sweep’ in package ‘DelayedArray’\n",
            "Creating a new generic function for ‘scale’ in package ‘DelayedArray’\n",
            "Creating a generic function for ‘dnorm’ from package ‘stats’ in package ‘DelayedArray’\n",
            "Creating a generic function for ‘pnorm’ from package ‘stats’ in package ‘DelayedArray’\n",
            "Creating a generic function for ‘qnorm’ from package ‘stats’ in package ‘DelayedArray’\n",
            "Creating a generic function for ‘dbinom’ from package ‘stats’ in package ‘DelayedArray’\n",
            "Creating a generic function for ‘pbinom’ from package ‘stats’ in package ‘DelayedArray’\n",
            "Creating a generic function for ‘qbinom’ from package ‘stats’ in package ‘DelayedArray’\n",
            "Creating a generic function for ‘dpois’ from package ‘stats’ in package ‘DelayedArray’\n",
            "Creating a generic function for ‘ppois’ from package ‘stats’ in package ‘DelayedArray’\n",
            "Creating a generic function for ‘qpois’ from package ‘stats’ in package ‘DelayedArray’\n",
            "Creating a generic function for ‘dlogis’ from package ‘stats’ in package ‘DelayedArray’\n",
            "Creating a generic function for ‘plogis’ from package ‘stats’ in package ‘DelayedArray’\n",
            "Creating a generic function for ‘qlogis’ from package ‘stats’ in package ‘DelayedArray’\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** installing vignettes\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** checking absolute paths in shared objects and dynamic libraries\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (DelayedArray)\n",
            "* installing *source* package ‘BiocParallel’ ...\n",
            "** using staged installation\n",
            "checking whether the C++ compiler works... yes\n",
            "checking for C++ compiler default output file name... a.out\n",
            "checking for suffix of executables... \n",
            "checking whether we are cross compiling... no\n",
            "checking for suffix of object files... o\n",
            "checking whether the compiler supports GNU C++... yes\n",
            "checking whether g++ -std=gnu++14 accepts -g... yes\n",
            "checking for g++ -std=gnu++14 option to enable C++11 features... none needed\n",
            "checking for library containing shm_open... -lrt\n",
            "checking for stdio.h... yes\n",
            "checking for stdlib.h... yes\n",
            "checking for string.h... yes\n",
            "checking for inttypes.h... yes\n",
            "checking for stdint.h... yes\n",
            "checking for strings.h... yes\n",
            "checking for sys/stat.h... yes\n",
            "checking for sys/types.h... yes\n",
            "checking for unistd.h... yes\n",
            "checking for sys/mman.h... yes\n",
            "configure: creating ./config.status\n",
            "config.status: creating src/Makevars\n",
            "** libs\n",
            "g++ -std=gnu++11 -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/BH/include' -I'/usr/lib/R/site-library/cpp11/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c cpp11.cpp -o cpp11.o\n",
            "g++ -std=gnu++11 -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/BH/include' -I'/usr/lib/R/site-library/cpp11/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c ipcmutex.cpp -o ipcmutex.o\n",
            "g++ -std=gnu++11 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o BiocParallel.so cpp11.o ipcmutex.o -lrt -L/usr/lib/R/lib -lR\n",
            "installing to /usr/local/lib/R/site-library/00LOCK-BiocParallel/00new/BiocParallel/libs\n",
            "** R\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** installing vignettes\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** checking absolute paths in shared objects and dynamic libraries\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (BiocParallel)\n",
            "* installing *source* package ‘Biostrings’ ...\n",
            "** using staged installation\n",
            "** libs\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c BAB_class.c -o BAB_class.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c BitMatrix.c -o BitMatrix.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c IRanges_stubs.c -o IRanges_stubs.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c MIndex_class.c -o MIndex_class.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c PreprocessedTB_class.c -o PreprocessedTB_class.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c R_init_Biostrings.c -o R_init_Biostrings.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c RoSeqs_utils.c -o RoSeqs_utils.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c S4Vectors_stubs.c -o S4Vectors_stubs.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c SparseList_utils.c -o SparseList_utils.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c XStringSetList_class.c -o XStringSetList_class.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c XStringSet_class.c -o XStringSet_class.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c XString_class.c -o XString_class.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c XVector_stubs.c -o XVector_stubs.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c align_needwunsQS.c -o align_needwunsQS.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c align_pairwiseAlignment.c -o align_pairwiseAlignment.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c align_utils.c -o align_utils.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c find_palindromes.c -o find_palindromes.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c gtestsim.c -o gtestsim.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c inject_code.c -o inject_code.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c letter_frequency.c -o letter_frequency.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c lowlevel_matching.c -o lowlevel_matching.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c match_PWM.c -o match_PWM.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c match_pattern.c -o match_pattern.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c match_pattern_boyermoore.c -o match_pattern_boyermoore.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c match_pattern_indels.c -o match_pattern_indels.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c match_pattern_shiftor.c -o match_pattern_shiftor.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c match_pdict.c -o match_pdict.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c match_pdict_ACtree2.c -o match_pdict_ACtree2.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c match_pdict_Twobit.c -o match_pdict_Twobit.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c match_pdict_utils.c -o match_pdict_utils.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c match_reporting.c -o match_reporting.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c matchprobes.c -o matchprobes.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c pmatchPattern.c -o pmatchPattern.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c read_fasta_files.c -o read_fasta_files.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c read_fastq_files.c -o read_fastq_files.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c replaceAt.c -o replaceAt.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c replace_letter_at.c -o replace_letter_at.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c strutils.c -o strutils.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c translate.c -o translate.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c unstrsplit_methods.c -o unstrsplit_methods.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c utils.c -o utils.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include' -I'/usr/local/lib/R/site-library/XVector/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c xscat.c -o xscat.o\n",
            "gcc -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o Biostrings.so BAB_class.o BitMatrix.o IRanges_stubs.o MIndex_class.o PreprocessedTB_class.o R_init_Biostrings.o RoSeqs_utils.o S4Vectors_stubs.o SparseList_utils.o XStringSetList_class.o XStringSet_class.o XString_class.o XVector_stubs.o align_needwunsQS.o align_pairwiseAlignment.o align_utils.o find_palindromes.o gtestsim.o inject_code.o letter_frequency.o lowlevel_matching.o match_PWM.o match_pattern.o match_pattern_boyermoore.o match_pattern_indels.o match_pattern_shiftor.o match_pdict.o match_pdict_ACtree2.o match_pdict_Twobit.o match_pdict_utils.o match_reporting.o matchprobes.o pmatchPattern.o read_fasta_files.o read_fastq_files.o replaceAt.o replace_letter_at.o strutils.o translate.o unstrsplit_methods.o utils.o xscat.o -L/usr/lib/R/lib -lR\n",
            "installing to /usr/local/lib/R/site-library/00LOCK-Biostrings/00new/Biostrings/libs\n",
            "** R\n",
            "** data\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "in method for ‘twoWayAlphabetFrequencyByQuality’ with signature ‘\"QualityScaledXStringSet\"’: no definition for class “QualityScaledXStringSet”\n",
            "Creating a new generic function for ‘strsplit’ in package ‘Biostrings’\n",
            "Creating a generic function for ‘ls’ from package ‘base’ in package ‘Biostrings’\n",
            "Creating a new generic function for ‘pattern’ in package ‘Biostrings’\n",
            "Creating a new generic function for ‘offset’ in package ‘Biostrings’\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** installing vignettes\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** checking absolute paths in shared objects and dynamic libraries\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (Biostrings)\n",
            "* installing *source* package ‘GenomicRanges’ ...\n",
            "** using staged installation\n",
            "** libs\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c IRanges_stubs.c -o IRanges_stubs.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c R_init_GenomicRanges.c -o R_init_GenomicRanges.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c S4Vectors_stubs.c -o S4Vectors_stubs.o\n",
            "gcc -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/S4Vectors/include' -I'/usr/local/lib/R/site-library/IRanges/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c transcript_utils.c -o transcript_utils.o\n",
            "gcc -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o GenomicRanges.so IRanges_stubs.o R_init_GenomicRanges.o S4Vectors_stubs.o transcript_utils.o -L/usr/lib/R/lib -lR\n",
            "installing to /usr/local/lib/R/site-library/00LOCK-GenomicRanges/00new/GenomicRanges/libs\n",
            "** R\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** installing vignettes\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** checking absolute paths in shared objects and dynamic libraries\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (GenomicRanges)\n",
            "* installing *source* package ‘KEGGREST’ ...\n",
            "** using staged installation\n",
            "** R\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** installing vignettes\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (KEGGREST)\n",
            "* installing *source* package ‘SummarizedExperiment’ ...\n",
            "** using staged installation\n",
            "** R\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** installing vignettes\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (SummarizedExperiment)\n",
            "* installing *source* package ‘AnnotationDbi’ ...\n",
            "** using staged installation\n",
            "** R\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "Creating a new generic function for ‘packageName’ in package ‘AnnotationDbi’\n",
            "Creating a generic function for ‘ls’ from package ‘base’ in package ‘AnnotationDbi’\n",
            "Creating a generic function for ‘eapply’ from package ‘base’ in package ‘AnnotationDbi’\n",
            "Creating a generic function for ‘exists’ from package ‘base’ in package ‘AnnotationDbi’\n",
            "Creating a generic function for ‘sample’ from package ‘base’ in package ‘AnnotationDbi’\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** installing vignettes\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (AnnotationDbi)\n",
            "* installing *source* package ‘annotate’ ...\n",
            "** using staged installation\n",
            "** R\n",
            "** data\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** installing vignettes\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (annotate)\n",
            "* installing *source* package ‘geneplotter’ ...\n",
            "** using staged installation\n",
            "** R\n",
            "** data\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** installing vignettes\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (geneplotter)\n",
            "* installing *source* package ‘DESeq2’ ...\n",
            "** using staged installation\n",
            "** libs\n",
            "g++ -std=gnu++14 -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/usr/local/lib/R/site-library/RcppArmadillo/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c DESeq2.cpp -o DESeq2.o\n",
            "g++ -std=gnu++14 -I\"/usr/share/R/include\" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/usr/local/lib/R/site-library/RcppArmadillo/include'    -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-ZLat0n/r-base-4.2.2.20221110=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c RcppExports.cpp -o RcppExports.o\n",
            "g++ -std=gnu++14 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o DESeq2.so DESeq2.o RcppExports.o -llapack -lblas -lgfortran -lm -lquadmath -L/usr/lib/R/lib -lR\n",
            "installing to /usr/local/lib/R/site-library/00LOCK-DESeq2/00new/DESeq2/libs\n",
            "** R\n",
            "** inst\n",
            "** byte-compile and prepare package for lazy loading\n",
            "** help\n",
            "*** installing help indices\n",
            "** building package indices\n",
            "** installing vignettes\n",
            "** testing if installed package can be loaded from temporary location\n",
            "** checking absolute paths in shared objects and dynamic libraries\n",
            "** testing if installed package can be loaded from final location\n",
            "** testing if installed package keeps a record of temporary installation path\n",
            "* DONE (DESeq2)\n",
            "\n",
            "The downloaded source packages are in\n",
            "\t‘/tmp/Rtmp2QInBB/downloaded_packages’\n",
            "Old packages: 'bit', 'data.table', 'devtools', 'digest', 'gert', 'htmltools',\n",
            "  'jsonlite', 'knitr', 'openssl', 'pkgload', 'roxygen2', 'sass', 'stringr',\n",
            "  'testthat', 'tidyverse', 'vctrs', 'whisker', 'xfun', 'boot', 'foreign'\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install rpy2"
      ],
      "metadata": {
        "id": "aFA50ceXWYzX",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f5b5a06b-5775-4c3e-9ac7-bdd1ff15c634"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: rpy2 in /usr/local/lib/python3.8/dist-packages (3.5.5)\n",
            "Requirement already satisfied: jinja2 in /usr/local/lib/python3.8/dist-packages (from rpy2) (2.11.3)\n",
            "Requirement already satisfied: pytz in /usr/local/lib/python3.8/dist-packages (from rpy2) (2022.6)\n",
            "Requirement already satisfied: tzlocal in /usr/local/lib/python3.8/dist-packages (from rpy2) (1.5.1)\n",
            "Requirement already satisfied: cffi>=1.10.0 in /usr/local/lib/python3.8/dist-packages (from rpy2) (1.15.1)\n",
            "Requirement already satisfied: pycparser in /usr/local/lib/python3.8/dist-packages (from cffi>=1.10.0->rpy2) (2.21)\n",
            "Requirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.8/dist-packages (from jinja2->rpy2) (2.0.1)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from rpy2.robjects.packages import importr\n",
        "from rpy2.robjects import default_converter, Formula, pandas2ri\n",
        "from rpy2.robjects.conversion import localconverter, rpy2py\n",
        "\n",
        "from rpy2.robjects.methods import RS4\n",
        "\n",
        "pandas2ri.activate()\n",
        "with localconverter(default_converter + pandas2ri.converter):\n",
        "    base = importr(\"base\")\n",
        "    DESeq2 = importr(\"DESeq2\")"
      ],
      "metadata": {
        "id": "PyxLXWgO-HU_"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "a) Найдем дифференциально экспрессированные гены по\n",
        "RNA-Seq между нормой и опухолью."
      ],
      "metadata": {
        "id": "_vA17NAP1jpO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "del RNA['index']"
      ],
      "metadata": {
        "id": "r9qnYZvVsHlx"
      },
      "execution_count": 175,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Создаем метадату"
      ],
      "metadata": {
        "id": "9QWyOgEswD04"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "meta_RNA = pd.DataFrame({\"Tissue\": ([\"Normal\",\"Tumor\"])*10}, index=RNA.columns)\n",
        "meta_RNA"
      ],
      "metadata": {
        "id": "d9J4RT5IsDTi",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 676
        },
        "outputId": "ce896158-be9e-48c0-fa84-c2a1e58f509d"
      },
      "execution_count": 176,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                  Tissue\n",
              "LC001-normal-RNA  Normal\n",
              "LC001-tumor-RNA    Tumor\n",
              "LC033-normal-RNA  Normal\n",
              "LC033-tumor-RNA    Tumor\n",
              "LC034-normal-RNA  Normal\n",
              "LC034-tumor-RNA    Tumor\n",
              "LC501-normal-RNA  Normal\n",
              "LC501-tumor-RNA    Tumor\n",
              "LC502-normal-RNA  Normal\n",
              "LC502-tumor-RNA    Tumor\n",
              "LC505-normal-RNA  Normal\n",
              "LC505-tumor-RNA    Tumor\n",
              "LC506-normal-RNA  Normal\n",
              "LC506-tumor-RNA    Tumor\n",
              "LC507-normal-RNA  Normal\n",
              "LC507-tumor-RNA    Tumor\n",
              "LC508-normal-RNA  Normal\n",
              "LC508-tumor-RNA    Tumor\n",
              "LC509-normal-RNA  Normal\n",
              "LC509-tumor-RNA    Tumor"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-75b2d9eb-886d-4bd0-ad7f-0277cfecc915\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Tissue</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>LC001-normal-RNA</th>\n",
              "      <td>Normal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC001-tumor-RNA</th>\n",
              "      <td>Tumor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC033-normal-RNA</th>\n",
              "      <td>Normal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC033-tumor-RNA</th>\n",
              "      <td>Tumor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC034-normal-RNA</th>\n",
              "      <td>Normal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC034-tumor-RNA</th>\n",
              "      <td>Tumor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC501-normal-RNA</th>\n",
              "      <td>Normal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC501-tumor-RNA</th>\n",
              "      <td>Tumor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC502-normal-RNA</th>\n",
              "      <td>Normal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC502-tumor-RNA</th>\n",
              "      <td>Tumor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC505-normal-RNA</th>\n",
              "      <td>Normal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC505-tumor-RNA</th>\n",
              "      <td>Tumor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC506-normal-RNA</th>\n",
              "      <td>Normal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC506-tumor-RNA</th>\n",
              "      <td>Tumor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC507-normal-RNA</th>\n",
              "      <td>Normal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC507-tumor-RNA</th>\n",
              "      <td>Tumor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC508-normal-RNA</th>\n",
              "      <td>Normal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC508-tumor-RNA</th>\n",
              "      <td>Tumor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC509-normal-RNA</th>\n",
              "      <td>Normal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC509-tumor-RNA</th>\n",
              "      <td>Tumor</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-75b2d9eb-886d-4bd0-ad7f-0277cfecc915')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-75b2d9eb-886d-4bd0-ad7f-0277cfecc915 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-75b2d9eb-886d-4bd0-ad7f-0277cfecc915');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 176
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Вычислим коэффициенты нормализации"
      ],
      "metadata": {
        "id": "yhgamisFxDSm"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "with localconverter(default_converter + pandas2ri.converter):\n",
        "  dds = DESeq2.DESeqDataSetFromMatrix(countData=RNA, colData=meta_RNA, design=Formula(\"~ Tissue\"))\n",
        "  dds = DESeq2.DESeq(dds)"
      ],
      "metadata": {
        "id": "wwKDMxISwGof",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7b59ca15-7775-489e-a54b-a00bf7d68bda"
      },
      "execution_count": 177,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: converting counts to integer mode\n",
            "\n",
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: estimating size factors\n",
            "\n",
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: estimating dispersions\n",
            "\n",
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: gene-wise dispersion estimates\n",
            "\n",
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: mean-dispersion relationship\n",
            "\n",
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: final dispersion estimates\n",
            "\n",
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: fitting model and testing\n",
            "\n",
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: -- replacing outliers and refitting for 1242 genes\n",
            "-- DESeq argument 'minReplicatesForReplace' = 7 \n",
            "-- original counts are preserved in counts(dds)\n",
            "\n",
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: estimating dispersions\n",
            "\n",
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: fitting model and testing\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "with localconverter(default_converter + pandas2ri.converter):\n",
        "  res_RNA = DESeq2.results(dds, name=\"Tissue_Tumor_vs_Normal\")\n",
        "  res_RNA = pd.DataFrame(base.as_data_frame(res_RNA))\n",
        "  res_RNA.index = RNA.index\n",
        "\n",
        "res_RNA "
      ],
      "metadata": {
        "id": "Z2Yj7yxIsOH3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "outputId": "9bbdbd3f-8bc7-4fe7-a55c-a7dce425cc60"
      },
      "execution_count": 178,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                      baseMean  log2FoldChange     lfcSE      stat  \\\n",
              "geneID                                                               \n",
              "ENSG00000000003.14  406.279268        1.016935  0.396326  2.565906   \n",
              "ENSG00000000005.5     0.255801       -0.756176  3.025600 -0.249926   \n",
              "ENSG00000000419.12  105.871975        0.636650  0.319406  1.993232   \n",
              "ENSG00000000457.13  104.480304        0.305490  0.238250  1.282226   \n",
              "ENSG00000000460.16   62.812560        1.553462  0.547881  2.835400   \n",
              "...                        ...             ...       ...       ...   \n",
              "ENSG00000282988.1    10.083912        4.424619  0.799486  5.534333   \n",
              "ENSG00000283013.1    37.107729        0.602483  0.415340  1.450575   \n",
              "ENSG00000283039.1     0.614809       -2.986452  2.990443 -0.998665   \n",
              "ENSG00000283063.1     0.000000             NaN       NaN       NaN   \n",
              "ENSG00000283071.1     1.621442        2.224057  1.657099  1.342138   \n",
              "\n",
              "                          pvalue      padj  \n",
              "geneID                                      \n",
              "ENSG00000000003.14  1.029066e-02  0.038159  \n",
              "ENSG00000000005.5   8.026445e-01       NaN  \n",
              "ENSG00000000419.12  4.623607e-02  0.120018  \n",
              "ENSG00000000457.13  1.997634e-01  0.348097  \n",
              "ENSG00000000460.16  4.576828e-03  0.020282  \n",
              "...                          ...       ...  \n",
              "ENSG00000282988.1   3.124156e-08  0.000002  \n",
              "ENSG00000283013.1   1.468982e-01  0.279452  \n",
              "ENSG00000283039.1   3.179569e-01       NaN  \n",
              "ENSG00000283063.1            NaN       NaN  \n",
              "ENSG00000283071.1   1.795511e-01  0.323258  \n",
              "\n",
              "[18945 rows x 6 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8e945135-3f23-4d5b-af8a-0e186e87bc9a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>baseMean</th>\n",
              "      <th>log2FoldChange</th>\n",
              "      <th>lfcSE</th>\n",
              "      <th>stat</th>\n",
              "      <th>pvalue</th>\n",
              "      <th>padj</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>geneID</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>ENSG00000000003.14</th>\n",
              "      <td>406.279268</td>\n",
              "      <td>1.016935</td>\n",
              "      <td>0.396326</td>\n",
              "      <td>2.565906</td>\n",
              "      <td>1.029066e-02</td>\n",
              "      <td>0.038159</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000000005.5</th>\n",
              "      <td>0.255801</td>\n",
              "      <td>-0.756176</td>\n",
              "      <td>3.025600</td>\n",
              "      <td>-0.249926</td>\n",
              "      <td>8.026445e-01</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000000419.12</th>\n",
              "      <td>105.871975</td>\n",
              "      <td>0.636650</td>\n",
              "      <td>0.319406</td>\n",
              "      <td>1.993232</td>\n",
              "      <td>4.623607e-02</td>\n",
              "      <td>0.120018</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000000457.13</th>\n",
              "      <td>104.480304</td>\n",
              "      <td>0.305490</td>\n",
              "      <td>0.238250</td>\n",
              "      <td>1.282226</td>\n",
              "      <td>1.997634e-01</td>\n",
              "      <td>0.348097</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000000460.16</th>\n",
              "      <td>62.812560</td>\n",
              "      <td>1.553462</td>\n",
              "      <td>0.547881</td>\n",
              "      <td>2.835400</td>\n",
              "      <td>4.576828e-03</td>\n",
              "      <td>0.020282</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000282988.1</th>\n",
              "      <td>10.083912</td>\n",
              "      <td>4.424619</td>\n",
              "      <td>0.799486</td>\n",
              "      <td>5.534333</td>\n",
              "      <td>3.124156e-08</td>\n",
              "      <td>0.000002</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000283013.1</th>\n",
              "      <td>37.107729</td>\n",
              "      <td>0.602483</td>\n",
              "      <td>0.415340</td>\n",
              "      <td>1.450575</td>\n",
              "      <td>1.468982e-01</td>\n",
              "      <td>0.279452</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000283039.1</th>\n",
              "      <td>0.614809</td>\n",
              "      <td>-2.986452</td>\n",
              "      <td>2.990443</td>\n",
              "      <td>-0.998665</td>\n",
              "      <td>3.179569e-01</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000283063.1</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000283071.1</th>\n",
              "      <td>1.621442</td>\n",
              "      <td>2.224057</td>\n",
              "      <td>1.657099</td>\n",
              "      <td>1.342138</td>\n",
              "      <td>1.795511e-01</td>\n",
              "      <td>0.323258</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>18945 rows × 6 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8e945135-3f23-4d5b-af8a-0e186e87bc9a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8e945135-3f23-4d5b-af8a-0e186e87bc9a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8e945135-3f23-4d5b-af8a-0e186e87bc9a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 178
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Найдем дифференциально экспрессированные гены по\n",
        "Ribo-Seq между нормой и опухолью."
      ],
      "metadata": {
        "id": "NBv0RWxH2tAk"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "del RPF['index']"
      ],
      "metadata": {
        "id": "TZUsMiZA2tAr"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Создаем метадату"
      ],
      "metadata": {
        "id": "z1Y8tIlq2tAr"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "meta_RPF = pd.DataFrame({\"Tissue\": ([\"Normal\",\"Tumor\"])*10}, index=RPF.columns)\n",
        "meta_RPF"
      ],
      "metadata": {
        "id": "yfH6sPL01uXG",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 676
        },
        "outputId": "f7bbd957-7664-44f1-b0d0-789cfe23f9ad"
      },
      "execution_count": 182,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                  Tissue\n",
              "LC001-normal-RPF  Normal\n",
              "LC001-tumor-RPF    Tumor\n",
              "LC033-normal-RPF  Normal\n",
              "LC033-tumor-RPF    Tumor\n",
              "LC034-normal-RPF  Normal\n",
              "LC034-tumor-RPF    Tumor\n",
              "LC501-normal-RPF  Normal\n",
              "LC501-tumor-RPF    Tumor\n",
              "LC502-normal-RPF  Normal\n",
              "LC502-tumor-RPF    Tumor\n",
              "LC505-normal-RPF  Normal\n",
              "LC505-tumor-RPF    Tumor\n",
              "LC506-normal-RPF  Normal\n",
              "LC506-tumor-RPF    Tumor\n",
              "LC507-normal-RPF  Normal\n",
              "LC507-tumor-RPF    Tumor\n",
              "LC508-normal-RPF  Normal\n",
              "LC508-tumor-RPF    Tumor\n",
              "LC509-normal-RPF  Normal\n",
              "LC509-tumor-RPF    Tumor"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3c2d1ad9-d95b-4415-ac5b-435da551f10e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Tissue</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>LC001-normal-RPF</th>\n",
              "      <td>Normal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC001-tumor-RPF</th>\n",
              "      <td>Tumor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC033-normal-RPF</th>\n",
              "      <td>Normal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC033-tumor-RPF</th>\n",
              "      <td>Tumor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC034-normal-RPF</th>\n",
              "      <td>Normal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC034-tumor-RPF</th>\n",
              "      <td>Tumor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC501-normal-RPF</th>\n",
              "      <td>Normal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC501-tumor-RPF</th>\n",
              "      <td>Tumor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC502-normal-RPF</th>\n",
              "      <td>Normal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC502-tumor-RPF</th>\n",
              "      <td>Tumor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC505-normal-RPF</th>\n",
              "      <td>Normal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC505-tumor-RPF</th>\n",
              "      <td>Tumor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC506-normal-RPF</th>\n",
              "      <td>Normal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC506-tumor-RPF</th>\n",
              "      <td>Tumor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC507-normal-RPF</th>\n",
              "      <td>Normal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC507-tumor-RPF</th>\n",
              "      <td>Tumor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC508-normal-RPF</th>\n",
              "      <td>Normal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC508-tumor-RPF</th>\n",
              "      <td>Tumor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC509-normal-RPF</th>\n",
              "      <td>Normal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC509-tumor-RPF</th>\n",
              "      <td>Tumor</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3c2d1ad9-d95b-4415-ac5b-435da551f10e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-3c2d1ad9-d95b-4415-ac5b-435da551f10e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-3c2d1ad9-d95b-4415-ac5b-435da551f10e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 182
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Вычислим коэффициенты нормализации"
      ],
      "metadata": {
        "id": "5-9GQ0kz1uXG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "with localconverter(default_converter + pandas2ri.converter):\n",
        "  dds = DESeq2.DESeqDataSetFromMatrix(countData=RPF, colData=meta_RPF, design=Formula(\"~ Tissue\"))\n",
        "  dds = DESeq2.DESeq(dds)"
      ],
      "metadata": {
        "id": "gSciEPZq1uXH",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5f44b178-0205-45eb-d1fa-75837f6f5960"
      },
      "execution_count": 183,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: converting counts to integer mode\n",
            "\n",
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: estimating size factors\n",
            "\n",
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: estimating dispersions\n",
            "\n",
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: gene-wise dispersion estimates\n",
            "\n",
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: mean-dispersion relationship\n",
            "\n",
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: final dispersion estimates\n",
            "\n",
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: fitting model and testing\n",
            "\n",
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: -- replacing outliers and refitting for 888 genes\n",
            "-- DESeq argument 'minReplicatesForReplace' = 7 \n",
            "-- original counts are preserved in counts(dds)\n",
            "\n",
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: estimating dispersions\n",
            "\n",
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: fitting model and testing\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "with localconverter(default_converter + pandas2ri.converter):\n",
        "  res_RPF = DESeq2.results(dds, name=\"Tissue_Tumor_vs_Normal\")\n",
        "  res_RPF = pd.DataFrame(base.as_data_frame(res_RPF))\n",
        "  res_RPF.index = RPF.index\n",
        "\n",
        "res_RPF "
      ],
      "metadata": {
        "id": "Zq4cRKK01uXH",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "outputId": "6d1081bc-d8eb-44f6-cb70-fd8915001b09"
      },
      "execution_count": 184,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                      baseMean  log2FoldChange     lfcSE      stat    pvalue  \\\n",
              "geneID                                                                         \n",
              "ENSG00000000003.14    0.000000             NaN       NaN       NaN       NaN   \n",
              "ENSG00000000005.5     0.134227       -0.497105  3.026188 -0.164268  0.869521   \n",
              "ENSG00000000419.12  187.335949       -0.111414  0.207386 -0.537228  0.591110   \n",
              "ENSG00000000457.13   88.779354        0.055055  0.245021  0.224694  0.822217   \n",
              "ENSG00000000460.16   42.182053        1.367345  0.481942  2.837153  0.004552   \n",
              "...                        ...             ...       ...       ...       ...   \n",
              "ENSG00000282988.1     0.154862        0.626800  3.020013  0.207549  0.835581   \n",
              "ENSG00000283013.1     4.416458        3.562810  1.221427  2.916924  0.003535   \n",
              "ENSG00000283039.1     0.000000             NaN       NaN       NaN       NaN   \n",
              "ENSG00000283063.1     1.040643        0.921821  2.795457  0.329757  0.741584   \n",
              "ENSG00000283071.1     0.174687        0.460692  3.021854  0.152453  0.878829   \n",
              "\n",
              "                        padj  \n",
              "geneID                        \n",
              "ENSG00000000003.14       NaN  \n",
              "ENSG00000000005.5        NaN  \n",
              "ENSG00000000419.12  0.750365  \n",
              "ENSG00000000457.13  0.904063  \n",
              "ENSG00000000460.16  0.030767  \n",
              "...                      ...  \n",
              "ENSG00000282988.1        NaN  \n",
              "ENSG00000283013.1   0.025481  \n",
              "ENSG00000283039.1        NaN  \n",
              "ENSG00000283063.1        NaN  \n",
              "ENSG00000283071.1        NaN  \n",
              "\n",
              "[18945 rows x 6 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d595b211-a8ea-4526-8ec1-4ab19f01b6f7\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>baseMean</th>\n",
              "      <th>log2FoldChange</th>\n",
              "      <th>lfcSE</th>\n",
              "      <th>stat</th>\n",
              "      <th>pvalue</th>\n",
              "      <th>padj</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>geneID</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>ENSG00000000003.14</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000000005.5</th>\n",
              "      <td>0.134227</td>\n",
              "      <td>-0.497105</td>\n",
              "      <td>3.026188</td>\n",
              "      <td>-0.164268</td>\n",
              "      <td>0.869521</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000000419.12</th>\n",
              "      <td>187.335949</td>\n",
              "      <td>-0.111414</td>\n",
              "      <td>0.207386</td>\n",
              "      <td>-0.537228</td>\n",
              "      <td>0.591110</td>\n",
              "      <td>0.750365</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000000457.13</th>\n",
              "      <td>88.779354</td>\n",
              "      <td>0.055055</td>\n",
              "      <td>0.245021</td>\n",
              "      <td>0.224694</td>\n",
              "      <td>0.822217</td>\n",
              "      <td>0.904063</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000000460.16</th>\n",
              "      <td>42.182053</td>\n",
              "      <td>1.367345</td>\n",
              "      <td>0.481942</td>\n",
              "      <td>2.837153</td>\n",
              "      <td>0.004552</td>\n",
              "      <td>0.030767</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000282988.1</th>\n",
              "      <td>0.154862</td>\n",
              "      <td>0.626800</td>\n",
              "      <td>3.020013</td>\n",
              "      <td>0.207549</td>\n",
              "      <td>0.835581</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000283013.1</th>\n",
              "      <td>4.416458</td>\n",
              "      <td>3.562810</td>\n",
              "      <td>1.221427</td>\n",
              "      <td>2.916924</td>\n",
              "      <td>0.003535</td>\n",
              "      <td>0.025481</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000283039.1</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000283063.1</th>\n",
              "      <td>1.040643</td>\n",
              "      <td>0.921821</td>\n",
              "      <td>2.795457</td>\n",
              "      <td>0.329757</td>\n",
              "      <td>0.741584</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000283071.1</th>\n",
              "      <td>0.174687</td>\n",
              "      <td>0.460692</td>\n",
              "      <td>3.021854</td>\n",
              "      <td>0.152453</td>\n",
              "      <td>0.878829</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>18945 rows × 6 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d595b211-a8ea-4526-8ec1-4ab19f01b6f7')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d595b211-a8ea-4526-8ec1-4ab19f01b6f7 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d595b211-a8ea-4526-8ec1-4ab19f01b6f7');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 184
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Отсортируем датасеты по убыванию padj"
      ],
      "metadata": {
        "id": "dRCb1ne5qkd0"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "res_RNA = res_RNA.sort_values(\"padj\")\n",
        "res_RPF = res_RPF.sort_values(\"padj\")\n",
        "res_RPF"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "id": "bEau-VWsqG3z",
        "outputId": "7025e9e6-eb69-43cc-9bff-35c1b8fac751"
      },
      "execution_count": 190,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                      baseMean  log2FoldChange     lfcSE       stat  \\\n",
              "geneID                                                                \n",
              "ENSG00000087237.10  234.706196       -3.661168  0.328144 -11.157205   \n",
              "ENSG00000138315.12  378.527099       -4.123941  0.384101 -10.736618   \n",
              "ENSG00000145850.8   115.823325       -4.410428  0.424721 -10.384291   \n",
              "ENSG00000152990.13  351.272069       -3.789142  0.368147 -10.292473   \n",
              "ENSG00000104938.16   60.025648       -6.019149  0.589470 -10.211112   \n",
              "...                        ...             ...       ...        ...   \n",
              "ENSG00000282936.1     0.358559        1.626859  2.993260   0.543507   \n",
              "ENSG00000282988.1     0.154862        0.626800  3.020013   0.207549   \n",
              "ENSG00000283039.1     0.000000             NaN       NaN        NaN   \n",
              "ENSG00000283063.1     1.040643        0.921821  2.795457   0.329757   \n",
              "ENSG00000283071.1     0.174687        0.460692  3.021854   0.152453   \n",
              "\n",
              "                          pvalue          padj  \n",
              "geneID                                          \n",
              "ENSG00000087237.10  6.603531e-29  9.219850e-25  \n",
              "ENSG00000138315.12  6.850819e-27  4.782557e-23  \n",
              "ENSG00000145850.8   2.923339e-25  1.360522e-21  \n",
              "ENSG00000152990.13  7.619383e-25  2.659546e-21  \n",
              "ENSG00000104938.16  1.768264e-24  4.937702e-21  \n",
              "...                          ...           ...  \n",
              "ENSG00000282936.1   5.867805e-01           NaN  \n",
              "ENSG00000282988.1   8.355812e-01           NaN  \n",
              "ENSG00000283039.1            NaN           NaN  \n",
              "ENSG00000283063.1   7.415836e-01           NaN  \n",
              "ENSG00000283071.1   8.788294e-01           NaN  \n",
              "\n",
              "[18945 rows x 6 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b4d83f77-f1dc-482c-8d81-66f40ebea265\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>baseMean</th>\n",
              "      <th>log2FoldChange</th>\n",
              "      <th>lfcSE</th>\n",
              "      <th>stat</th>\n",
              "      <th>pvalue</th>\n",
              "      <th>padj</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>geneID</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>ENSG00000087237.10</th>\n",
              "      <td>234.706196</td>\n",
              "      <td>-3.661168</td>\n",
              "      <td>0.328144</td>\n",
              "      <td>-11.157205</td>\n",
              "      <td>6.603531e-29</td>\n",
              "      <td>9.219850e-25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000138315.12</th>\n",
              "      <td>378.527099</td>\n",
              "      <td>-4.123941</td>\n",
              "      <td>0.384101</td>\n",
              "      <td>-10.736618</td>\n",
              "      <td>6.850819e-27</td>\n",
              "      <td>4.782557e-23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000145850.8</th>\n",
              "      <td>115.823325</td>\n",
              "      <td>-4.410428</td>\n",
              "      <td>0.424721</td>\n",
              "      <td>-10.384291</td>\n",
              "      <td>2.923339e-25</td>\n",
              "      <td>1.360522e-21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000152990.13</th>\n",
              "      <td>351.272069</td>\n",
              "      <td>-3.789142</td>\n",
              "      <td>0.368147</td>\n",
              "      <td>-10.292473</td>\n",
              "      <td>7.619383e-25</td>\n",
              "      <td>2.659546e-21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000104938.16</th>\n",
              "      <td>60.025648</td>\n",
              "      <td>-6.019149</td>\n",
              "      <td>0.589470</td>\n",
              "      <td>-10.211112</td>\n",
              "      <td>1.768264e-24</td>\n",
              "      <td>4.937702e-21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000282936.1</th>\n",
              "      <td>0.358559</td>\n",
              "      <td>1.626859</td>\n",
              "      <td>2.993260</td>\n",
              "      <td>0.543507</td>\n",
              "      <td>5.867805e-01</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000282988.1</th>\n",
              "      <td>0.154862</td>\n",
              "      <td>0.626800</td>\n",
              "      <td>3.020013</td>\n",
              "      <td>0.207549</td>\n",
              "      <td>8.355812e-01</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000283039.1</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000283063.1</th>\n",
              "      <td>1.040643</td>\n",
              "      <td>0.921821</td>\n",
              "      <td>2.795457</td>\n",
              "      <td>0.329757</td>\n",
              "      <td>7.415836e-01</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000283071.1</th>\n",
              "      <td>0.174687</td>\n",
              "      <td>0.460692</td>\n",
              "      <td>3.021854</td>\n",
              "      <td>0.152453</td>\n",
              "      <td>8.788294e-01</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>18945 rows × 6 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b4d83f77-f1dc-482c-8d81-66f40ebea265')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b4d83f77-f1dc-482c-8d81-66f40ebea265 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b4d83f77-f1dc-482c-8d81-66f40ebea265');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 190
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "б) Построим volcano plot для RNA-seq"
      ],
      "metadata": {
        "id": "YL3ybnJY3Rnz"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "p_tr = 0.05\n",
        "\n",
        "fig, ax = plt.subplots(figsize=(5, 5), dpi=150)\n",
        "xlim = max(-min(res_RNA.log2FoldChange), (max(res_RNA.log2FoldChange))) + 0.5\n",
        "\n",
        "sns.scatterplot(\n",
        "    x=res_RNA.log2FoldChange,\n",
        "    y=-np.log10(res_RNA.padj),\n",
        "    ax=ax,\n",
        "    s=3,\n",
        "    linewidth=0,\n",
        ")\n",
        "\n",
        "ax.plot(\n",
        "    [-xlim, xlim],\n",
        "    [-np.log10(p_tr), -np.log10(p_tr)],\n",
        "    color=\"red\",\n",
        ")\n",
        "\n",
        "sns.scatterplot(\n",
        "    x=res_RNA[res_RNA.padj < p_tr].log2FoldChange,\n",
        "    y=-np.log10(res_RNA[res_RNA.padj < p_tr].padj),\n",
        "    ax=ax,\n",
        "    s=5,\n",
        "    linewidth=0,\n",
        "    color=\"red\",\n",
        ")\n",
        "\n",
        "ax.grid(alpha=0.3)\n",
        "\n",
        "ax.set_xlim(-xlim, xlim)\n",
        "ax.set_xlabel(\"log$_2$FoldChange\")\n",
        "ax.set_ylabel(\"log$_{10}$FDR\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 758
        },
        "id": "czeHr2nJy6Lt",
        "outputId": "9de6b55c-51ad-448b-aead-137cd9cc0f54"
      },
      "execution_count": 185,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/pandas/core/arraylike.py:364: RuntimeWarning: invalid value encountered in log10\n",
            "  result = getattr(ufunc, method)(*inputs, **kwargs)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'log$_{10}$FDR')"
            ]
          },
          "metadata": {},
          "execution_count": 185
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 750x750 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Построим volcano plot для Ribo-seq"
      ],
      "metadata": {
        "id": "pmFEOlbP3lL6"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "p_tr = 0.05\n",
        "\n",
        "fig, ax = plt.subplots(figsize=(5, 5), dpi=150)\n",
        "xlim = max(-min(res_RPF.log2FoldChange), (max(res_RPF.log2FoldChange))) + 0.5\n",
        "\n",
        "sns.scatterplot(\n",
        "    x=res_RPF.log2FoldChange,\n",
        "    y=-np.log10(res_RPF.padj),\n",
        "    ax=ax,\n",
        "    s=3,\n",
        "    linewidth=0,\n",
        ")\n",
        "\n",
        "ax.plot(\n",
        "    [-xlim, xlim],\n",
        "    [-np.log10(p_tr), -np.log10(p_tr)],\n",
        "    color=\"red\",\n",
        ")\n",
        "\n",
        "sns.scatterplot(\n",
        "    x=res_RPF[res_RPF.padj < p_tr].log2FoldChange,\n",
        "    y=-np.log10(res_RPF[res_RPF.padj < p_tr].padj),\n",
        "    ax=ax,\n",
        "    s=5,\n",
        "    linewidth=0,\n",
        "    color=\"red\",\n",
        ")\n",
        "\n",
        "ax.grid(alpha=0.3)\n",
        "\n",
        "ax.set_xlim(-xlim, xlim)\n",
        "ax.set_xlabel(\"log$_2$FoldChange\")\n",
        "ax.set_ylabel(\"log$_{10}$FDR\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 766
        },
        "id": "EtZdEn8D3BMy",
        "outputId": "2f09bb55-9b5a-4ad0-c56b-4b50b603791e"
      },
      "execution_count": 189,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/pandas/core/arraylike.py:364: RuntimeWarning: invalid value encountered in log10\n",
            "  result = getattr(ufunc, method)(*inputs, **kwargs)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'log$_{10}$FDR')"
            ]
          },
          "metadata": {},
          "execution_count": 189
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 750x750 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "в) Совпадают ли результаты дифференциальной экспрессии? Какие гены оказались значимо различны по экспрессии в одном случае, а какие — в другом?"
      ],
      "metadata": {
        "id": "sp7WqrdjtMXh"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Построим диаграму Венна и посмотрим на пересечение дифференциально экспрессированных генов между RNA-seq и Ribo-seq"
      ],
      "metadata": {
        "id": "fdRStyztSAvH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install matplotlib-venn"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1YleY3XKSjw3",
        "outputId": "86db14c6-b4fa-4977-bfd3-ae07dc23b81f"
      },
      "execution_count": 71,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: matplotlib-venn in /usr/local/lib/python3.8/dist-packages (0.11.7)\n",
            "Requirement already satisfied: matplotlib in /usr/local/lib/python3.8/dist-packages (from matplotlib-venn) (3.2.2)\n",
            "Requirement already satisfied: scipy in /usr/local/lib/python3.8/dist-packages (from matplotlib-venn) (1.7.3)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.8/dist-packages (from matplotlib-venn) (1.21.6)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.8/dist-packages (from matplotlib->matplotlib-venn) (0.11.0)\n",
            "Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.8/dist-packages (from matplotlib->matplotlib-venn) (2.8.2)\n",
            "Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.8/dist-packages (from matplotlib->matplotlib-venn) (3.0.9)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.8/dist-packages (from matplotlib->matplotlib-venn) (1.4.4)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.8/dist-packages (from python-dateutil>=2.1->matplotlib->matplotlib-venn) (1.15.0)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from matplotlib_venn import venn2"
      ],
      "metadata": {
        "id": "8ihUmWxfTgO5"
      },
      "execution_count": 99,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Отберем  значимо (padj < 0.05) дифференциально экспрессированные гены"
      ],
      "metadata": {
        "id": "fliqSSSeSPD8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "RNA_dif = res_RNA.loc[res_RNA[\"padj\"] < 0.05]\n",
        "RNA_dif"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "id": "pczpyCtfSStC",
        "outputId": "3aefa368-e9bc-480d-8c43-d4ed710be91b"
      },
      "execution_count": 191,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                      baseMean  log2FoldChange     lfcSE       stat  \\\n",
              "geneID                                                                \n",
              "ENSG00000182566.12  187.902511       -6.224294  0.471543 -13.199842   \n",
              "ENSG00000138315.12  207.433311       -4.190143  0.372389 -11.252055   \n",
              "ENSG00000166148.3   216.785200       -4.836026  0.444956 -10.868551   \n",
              "ENSG00000129965.13  517.466267       -5.941896  0.547969 -10.843493   \n",
              "ENSG00000160339.15  154.170314       -5.700993  0.527201 -10.813696   \n",
              "...                        ...             ...       ...        ...   \n",
              "ENSG00000121851.12   59.557501        0.787089  0.321539   2.447881   \n",
              "ENSG00000007923.15  173.665221       -0.529500  0.216320  -2.447766   \n",
              "ENSG00000087116.13  251.357777       -1.213785  0.496091  -2.446698   \n",
              "ENSG00000106723.16  248.531987        0.444696  0.181771   2.446457   \n",
              "ENSG00000108423.14   31.673315        0.873637  0.357166   2.446028   \n",
              "\n",
              "                          pvalue          padj  \n",
              "geneID                                          \n",
              "ENSG00000182566.12  8.791966e-40  1.464478e-35  \n",
              "ENSG00000138315.12  2.262593e-29  1.884400e-25  \n",
              "ENSG00000166148.3   1.627649e-27  8.917125e-24  \n",
              "ENSG00000129965.13  2.141352e-27  8.917125e-24  \n",
              "ENSG00000160339.15  2.964778e-27  9.876861e-24  \n",
              "...                          ...           ...  \n",
              "ENSG00000121851.12  1.436990e-02  4.978358e-02  \n",
              "ENSG00000007923.15  1.437450e-02  4.978915e-02  \n",
              "ENSG00000087116.13  1.441717e-02  4.992658e-02  \n",
              "ENSG00000106723.16  1.442679e-02  4.994949e-02  \n",
              "ENSG00000108423.14  1.444398e-02  4.999863e-02  \n",
              "\n",
              "[4812 rows x 6 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-446752a6-469e-4864-880a-438ea117884f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>baseMean</th>\n",
              "      <th>log2FoldChange</th>\n",
              "      <th>lfcSE</th>\n",
              "      <th>stat</th>\n",
              "      <th>pvalue</th>\n",
              "      <th>padj</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>geneID</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>ENSG00000182566.12</th>\n",
              "      <td>187.902511</td>\n",
              "      <td>-6.224294</td>\n",
              "      <td>0.471543</td>\n",
              "      <td>-13.199842</td>\n",
              "      <td>8.791966e-40</td>\n",
              "      <td>1.464478e-35</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000138315.12</th>\n",
              "      <td>207.433311</td>\n",
              "      <td>-4.190143</td>\n",
              "      <td>0.372389</td>\n",
              "      <td>-11.252055</td>\n",
              "      <td>2.262593e-29</td>\n",
              "      <td>1.884400e-25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000166148.3</th>\n",
              "      <td>216.785200</td>\n",
              "      <td>-4.836026</td>\n",
              "      <td>0.444956</td>\n",
              "      <td>-10.868551</td>\n",
              "      <td>1.627649e-27</td>\n",
              "      <td>8.917125e-24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000129965.13</th>\n",
              "      <td>517.466267</td>\n",
              "      <td>-5.941896</td>\n",
              "      <td>0.547969</td>\n",
              "      <td>-10.843493</td>\n",
              "      <td>2.141352e-27</td>\n",
              "      <td>8.917125e-24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000160339.15</th>\n",
              "      <td>154.170314</td>\n",
              "      <td>-5.700993</td>\n",
              "      <td>0.527201</td>\n",
              "      <td>-10.813696</td>\n",
              "      <td>2.964778e-27</td>\n",
              "      <td>9.876861e-24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000121851.12</th>\n",
              "      <td>59.557501</td>\n",
              "      <td>0.787089</td>\n",
              "      <td>0.321539</td>\n",
              "      <td>2.447881</td>\n",
              "      <td>1.436990e-02</td>\n",
              "      <td>4.978358e-02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000007923.15</th>\n",
              "      <td>173.665221</td>\n",
              "      <td>-0.529500</td>\n",
              "      <td>0.216320</td>\n",
              "      <td>-2.447766</td>\n",
              "      <td>1.437450e-02</td>\n",
              "      <td>4.978915e-02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000087116.13</th>\n",
              "      <td>251.357777</td>\n",
              "      <td>-1.213785</td>\n",
              "      <td>0.496091</td>\n",
              "      <td>-2.446698</td>\n",
              "      <td>1.441717e-02</td>\n",
              "      <td>4.992658e-02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000106723.16</th>\n",
              "      <td>248.531987</td>\n",
              "      <td>0.444696</td>\n",
              "      <td>0.181771</td>\n",
              "      <td>2.446457</td>\n",
              "      <td>1.442679e-02</td>\n",
              "      <td>4.994949e-02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000108423.14</th>\n",
              "      <td>31.673315</td>\n",
              "      <td>0.873637</td>\n",
              "      <td>0.357166</td>\n",
              "      <td>2.446028</td>\n",
              "      <td>1.444398e-02</td>\n",
              "      <td>4.999863e-02</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>4812 rows × 6 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-446752a6-469e-4864-880a-438ea117884f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-446752a6-469e-4864-880a-438ea117884f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-446752a6-469e-4864-880a-438ea117884f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 191
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "RPF_dif = res_RPF.loc[res_RPF[\"padj\"] < 0.05]\n",
        "RPF_dif"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "id": "w050ycSYScZy",
        "outputId": "4158c772-a4a9-40b6-f209-aea486fa6c35"
      },
      "execution_count": 192,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                      baseMean  log2FoldChange     lfcSE       stat  \\\n",
              "geneID                                                                \n",
              "ENSG00000087237.10  234.706196       -3.661168  0.328144 -11.157205   \n",
              "ENSG00000138315.12  378.527099       -4.123941  0.384101 -10.736618   \n",
              "ENSG00000145850.8   115.823325       -4.410428  0.424721 -10.384291   \n",
              "ENSG00000152990.13  351.272069       -3.789142  0.368147 -10.292473   \n",
              "ENSG00000104938.16   60.025648       -6.019149  0.589470 -10.211112   \n",
              "...                        ...             ...       ...        ...   \n",
              "ENSG00000125398.5    63.848284        1.603262  0.613808   2.611991   \n",
              "ENSG00000007520.3    40.195427        1.102950  0.422365   2.611366   \n",
              "ENSG00000146083.11   23.597993        0.936732  0.358719   2.611323   \n",
              "ENSG00000136720.6    13.879786        1.542853  0.590946   2.610818   \n",
              "ENSG00000174456.13    7.195521        1.849924  0.708937   2.609434   \n",
              "\n",
              "                          pvalue          padj  \n",
              "geneID                                          \n",
              "ENSG00000087237.10  6.603531e-29  9.219850e-25  \n",
              "ENSG00000138315.12  6.850819e-27  4.782557e-23  \n",
              "ENSG00000145850.8   2.923339e-25  1.360522e-21  \n",
              "ENSG00000152990.13  7.619383e-25  2.659546e-21  \n",
              "ENSG00000104938.16  1.768264e-24  4.937702e-21  \n",
              "...                          ...           ...  \n",
              "ENSG00000125398.5   9.001665e-03  4.950030e-02  \n",
              "ENSG00000007520.3   9.018143e-03  4.955810e-02  \n",
              "ENSG00000146083.11  9.019276e-03  4.955810e-02  \n",
              "ENSG00000136720.6   9.032600e-03  4.961179e-02  \n",
              "ENSG00000174456.13  9.069213e-03  4.979330e-02  \n",
              "\n",
              "[2543 rows x 6 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-105191f7-f69e-41e3-b07a-62de493ee942\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>baseMean</th>\n",
              "      <th>log2FoldChange</th>\n",
              "      <th>lfcSE</th>\n",
              "      <th>stat</th>\n",
              "      <th>pvalue</th>\n",
              "      <th>padj</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>geneID</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>ENSG00000087237.10</th>\n",
              "      <td>234.706196</td>\n",
              "      <td>-3.661168</td>\n",
              "      <td>0.328144</td>\n",
              "      <td>-11.157205</td>\n",
              "      <td>6.603531e-29</td>\n",
              "      <td>9.219850e-25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000138315.12</th>\n",
              "      <td>378.527099</td>\n",
              "      <td>-4.123941</td>\n",
              "      <td>0.384101</td>\n",
              "      <td>-10.736618</td>\n",
              "      <td>6.850819e-27</td>\n",
              "      <td>4.782557e-23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000145850.8</th>\n",
              "      <td>115.823325</td>\n",
              "      <td>-4.410428</td>\n",
              "      <td>0.424721</td>\n",
              "      <td>-10.384291</td>\n",
              "      <td>2.923339e-25</td>\n",
              "      <td>1.360522e-21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000152990.13</th>\n",
              "      <td>351.272069</td>\n",
              "      <td>-3.789142</td>\n",
              "      <td>0.368147</td>\n",
              "      <td>-10.292473</td>\n",
              "      <td>7.619383e-25</td>\n",
              "      <td>2.659546e-21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000104938.16</th>\n",
              "      <td>60.025648</td>\n",
              "      <td>-6.019149</td>\n",
              "      <td>0.589470</td>\n",
              "      <td>-10.211112</td>\n",
              "      <td>1.768264e-24</td>\n",
              "      <td>4.937702e-21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000125398.5</th>\n",
              "      <td>63.848284</td>\n",
              "      <td>1.603262</td>\n",
              "      <td>0.613808</td>\n",
              "      <td>2.611991</td>\n",
              "      <td>9.001665e-03</td>\n",
              "      <td>4.950030e-02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000007520.3</th>\n",
              "      <td>40.195427</td>\n",
              "      <td>1.102950</td>\n",
              "      <td>0.422365</td>\n",
              "      <td>2.611366</td>\n",
              "      <td>9.018143e-03</td>\n",
              "      <td>4.955810e-02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000146083.11</th>\n",
              "      <td>23.597993</td>\n",
              "      <td>0.936732</td>\n",
              "      <td>0.358719</td>\n",
              "      <td>2.611323</td>\n",
              "      <td>9.019276e-03</td>\n",
              "      <td>4.955810e-02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000136720.6</th>\n",
              "      <td>13.879786</td>\n",
              "      <td>1.542853</td>\n",
              "      <td>0.590946</td>\n",
              "      <td>2.610818</td>\n",
              "      <td>9.032600e-03</td>\n",
              "      <td>4.961179e-02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000174456.13</th>\n",
              "      <td>7.195521</td>\n",
              "      <td>1.849924</td>\n",
              "      <td>0.708937</td>\n",
              "      <td>2.609434</td>\n",
              "      <td>9.069213e-03</td>\n",
              "      <td>4.979330e-02</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2543 rows × 6 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-105191f7-f69e-41e3-b07a-62de493ee942')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-105191f7-f69e-41e3-b07a-62de493ee942 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-105191f7-f69e-41e3-b07a-62de493ee942');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 192
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Сделаем список из  значимо (padj < 0.05) дифференциально экспрессированных генов"
      ],
      "metadata": {
        "id": "obNifdmASsQU"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "genes_RNA_dif = RNA_dif.index\n",
        "genes_RPF_dif = RPF_dif.index\n",
        "\n",
        "genes_RNA = list(genes_RNA_dif)\n",
        "genes_RPF = list(genes_RPF_dif)"
      ],
      "metadata": {
        "id": "H099lHyNSwUp"
      },
      "execution_count": 193,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "set1 = set(genes_RNA)\n",
        "set2 = set(genes_RPF)\n",
        "\n",
        "plt.figure(figsize=(10,10))\n",
        "plt.rcParams.update({'font.size': 16})\n",
        "venn2(subsets = (set1, set2), set_labels = ('DGE in RNA-seq', 'DGE in Ribo-seq'), alpha=0.4, set_colors=('r', 'b'))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 514
        },
        "id": "jmXXiTZnTbnA",
        "outputId": "dddd5c0d-32cd-4d8b-a273-4b250b68abfb"
      },
      "execution_count": 194,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib_venn._common.VennDiagram at 0x7fe414145ee0>"
            ]
          },
          "metadata": {},
          "execution_count": 194
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x720 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Таким образом, в эксперименте RNA-seq 4812 значимо (padj < 0.05) дифференциально экспрессированных генов, когда в Ribo-seq их 2543, то есть почти в 2 раза меньше. \n",
        "\n",
        "По диаграме Венна видно, что в пересечении двух экспериментов нашлось 1630 значимо (padj < 0.05) дифференциально экспрессированных генов, 3182 гена значимо (padj < 0.05) дифференциально экспрессированы только в RNA-seq и 913 генов значимо (padj < 0.05) дифференциально экспрессированы только в Ribo-seq."
      ],
      "metadata": {
        "id": "gn1kiumxeusf"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Возьмем топ-15 генов по значимой дифференциальной экспрессии (с наибольшим и наименьшим log2foldchange) из обоих экспериментов и посмотрим на них."
      ],
      "metadata": {
        "id": "cKhjJ8Z8hFtR"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "RNA_dif = RNA_dif.sort_values(\"log2FoldChange\", ascending = False)\n",
        "RPF_dif = RPF_dif.sort_values(\"log2FoldChange\", ascending = False)\n",
        "\n",
        "RNA_dif_high = RNA_dif.head(15)\n",
        "RNA_dif_low = RNA_dif.iloc[4797:4812,:]\n",
        "\n",
        "RPF_dif_high = RPF_dif.head(15)\n",
        "RPF_dif_low = RPF_dif.iloc[2528:2543,:]"
      ],
      "metadata": {
        "id": "VlOUUhUziWdb"
      },
      "execution_count": 244,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Переведем ensembl в GeneSymbol"
      ],
      "metadata": {
        "id": "kPpt5L9qrzQh"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "RNA_dif_high['ensembl'] = RNA_dif_high.index\n",
        "RNA_dif_low['ensembl'] = RNA_dif_low.index\n",
        "RPF_dif_high['ensembl'] = RPF_dif_high.index\n",
        "RPF_dif_low['ensembl'] = RPF_dif_low.index"
      ],
      "metadata": {
        "id": "dU24CKLUmALY"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "counts['GeneSymbol'] = genes\n",
        "counts['ensembl'] = RNA.index"
      ],
      "metadata": {
        "id": "duwhr9AkskJO"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "RNA_DGE_high = counts[counts['ensembl'].isin(RNA_dif_high['ensembl'])]\n",
        "RNA_DGE_low = counts[counts['ensembl'].isin(RNA_dif_low['ensembl'])]\n",
        "RPF_DGE_high = counts[counts['ensembl'].isin(RPF_dif_high['ensembl'])]\n",
        "RPF_DGE_low = counts[counts['ensembl'].isin(RPF_dif_low['ensembl'])]\n",
        "\n",
        "\n",
        "RNA_DGE_high = RNA_DGE_high['GeneSymbol']\n",
        "RNA_DGE_low = RNA_DGE_low['GeneSymbol']\n",
        "RPF_DGE_high = RPF_DGE_high['GeneSymbol']\n",
        "RPF_DGE_low = RPF_DGE_low['GeneSymbol']"
      ],
      "metadata": {
        "id": "5353ms8wtU-k"
      },
      "execution_count": 246,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "RNA_dif_high['GeneSymbol'] = RNA_DGE_high\n",
        "RNA_dif_low['GeneSymbol'] = RNA_DGE_low\n",
        "RPF_dif_high['GeneSymbol'] = RPF_DGE_high\n",
        "RPF_dif_low['GeneSymbol'] = RPF_DGE_low\n",
        "\n",
        "del RNA_dif_high['ensembl']\n",
        "del RNA_dif_low['ensembl']\n",
        "del RPF_dif_high['ensembl']\n",
        "del RPF_dif_low['ensembl']\n",
        "\n",
        "list_RNA_dif_high = list(RNA_dif_high['GeneSymbol'])\n",
        "list_RNA_dif_low = list(RNA_dif_low['GeneSymbol'])\n",
        "list_RPF_dif_high = list(RPF_dif_high['GeneSymbol'])\n",
        "list_RPF_dif_low = list(RPF_dif_low['GeneSymbol'])"
      ],
      "metadata": {
        "id": "gckcEz6nuKeD"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "DGE = pd.DataFrame({\n",
        "    'RNA DEG high expr': list_RNA_dif_high,\n",
        "    'RNA DEG low expr': list_RNA_dif_low,\n",
        "    'RPF DEG high expr': list_RPF_dif_high,\n",
        "    'RPF DEG low expr': list_RPF_dif_low\n",
        "    })\n",
        "DGE        "
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 520
        },
        "id": "DGPQ7So5vtxt",
        "outputId": "98b95e35-a646-4800-c74f-7697efcc6aac"
      },
      "execution_count": 248,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   RNA DEG high expr RNA DEG low expr RPF DEG high expr RPF DEG low expr\n",
              "0               DLK1           CYP2A7               AFP           PDZRN4\n",
              "1           SLC22A12          PHACTR3              DLK1          CYP26A1\n",
              "2               DKK1            MYO3A             MEP1A              DBH\n",
              "3              PEG10            AICDA            FER1L6         IGKV2-30\n",
              "4                AFP            FREM2            TNFSF4             PRR4\n",
              "5              MEP1A     RP11-723O4.6            COX7B2            CNDP1\n",
              "6             FER1L6           CYP2B6              ETV4           CLEC1B\n",
              "7              REG3A           AVPR1B             PNMA3             SYT9\n",
              "8              UPK3A          C8orf34             PEG10         IL1RAPL2\n",
              "9              S100P              DBH             S100P         IGHV1-45\n",
              "10              GPC3             HAMP              DKK1             ARSF\n",
              "11              DQX1             FCN2            FRRS1L             EYA4\n",
              "12           SOSTDC1           CLEC4M              GPC3           CLEC4M\n",
              "13             MYO1A         INS-IGF2            TRIM71           LRRC19\n",
              "14            FRRS1L           CLEC4G            AKR1C3          SLC5A12"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6ab01731-b050-43d7-b44b-2145d2fb1c16\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>RNA DEG high expr</th>\n",
              "      <th>RNA DEG low expr</th>\n",
              "      <th>RPF DEG high expr</th>\n",
              "      <th>RPF DEG low expr</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>DLK1</td>\n",
              "      <td>CYP2A7</td>\n",
              "      <td>AFP</td>\n",
              "      <td>PDZRN4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>SLC22A12</td>\n",
              "      <td>PHACTR3</td>\n",
              "      <td>DLK1</td>\n",
              "      <td>CYP26A1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>DKK1</td>\n",
              "      <td>MYO3A</td>\n",
              "      <td>MEP1A</td>\n",
              "      <td>DBH</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>PEG10</td>\n",
              "      <td>AICDA</td>\n",
              "      <td>FER1L6</td>\n",
              "      <td>IGKV2-30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>AFP</td>\n",
              "      <td>FREM2</td>\n",
              "      <td>TNFSF4</td>\n",
              "      <td>PRR4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>MEP1A</td>\n",
              "      <td>RP11-723O4.6</td>\n",
              "      <td>COX7B2</td>\n",
              "      <td>CNDP1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>FER1L6</td>\n",
              "      <td>CYP2B6</td>\n",
              "      <td>ETV4</td>\n",
              "      <td>CLEC1B</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>REG3A</td>\n",
              "      <td>AVPR1B</td>\n",
              "      <td>PNMA3</td>\n",
              "      <td>SYT9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>UPK3A</td>\n",
              "      <td>C8orf34</td>\n",
              "      <td>PEG10</td>\n",
              "      <td>IL1RAPL2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>S100P</td>\n",
              "      <td>DBH</td>\n",
              "      <td>S100P</td>\n",
              "      <td>IGHV1-45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>GPC3</td>\n",
              "      <td>HAMP</td>\n",
              "      <td>DKK1</td>\n",
              "      <td>ARSF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>DQX1</td>\n",
              "      <td>FCN2</td>\n",
              "      <td>FRRS1L</td>\n",
              "      <td>EYA4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>SOSTDC1</td>\n",
              "      <td>CLEC4M</td>\n",
              "      <td>GPC3</td>\n",
              "      <td>CLEC4M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>MYO1A</td>\n",
              "      <td>INS-IGF2</td>\n",
              "      <td>TRIM71</td>\n",
              "      <td>LRRC19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>FRRS1L</td>\n",
              "      <td>CLEC4G</td>\n",
              "      <td>AKR1C3</td>\n",
              "      <td>SLC5A12</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6ab01731-b050-43d7-b44b-2145d2fb1c16')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6ab01731-b050-43d7-b44b-2145d2fb1c16 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6ab01731-b050-43d7-b44b-2145d2fb1c16');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 248
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Общие дифференциально экспрессированные гены для RNA-seq и Ribo-seq с увеличенной экспрессией в опухолевых образцах пациентов с гепатоцеллюлярной карциномой по сравнению с контролем (нормальными): DLK1, DKK1, PEG10, AFP, MEP1A, FER1L6, S100P, GPC3, FRRS1L.\n",
        "\n",
        "Общие дифференциально экспрессированные гены для RNA-seq и Ribo-seq с уменьшенной экспрессией в опухолевых образцах пациентов с гепатоцеллюлярной карциномой по сравнению с контролем (нормальными): CLEC4M, DBH."
      ],
      "metadata": {
        "id": "CqG7cdfVzLnc"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Поищем в статьях информацию о важности найденных генов в прогрессировании/ингибировании гепатоцеллюлярной карциномы."
      ],
      "metadata": {
        "id": "8img7e35I-dU"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### DLK1\n",
        "the up-regulation of DLK1 plays a crucial role in maintenance of cancerous stem or progenitor cells with malignant characteristics, because the colony formation, cell growth and tumorigenicity of HCC cell lines were significantly decreased as the knockdown of endogenetic DLK1\n",
        "\n",
        "https://doi.org/10.1093/carcin/bgl215"
      ],
      "metadata": {
        "id": "w4qzQ8IkD04n"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### DKK1\n",
        "DKK1 appears to facilitate tumor invasion and migration through TGF- β1 by remodeling the tumor microenvironment and inducing inflammation\n",
        "\n",
        "https://doi.org/10.1371/journal.pone.0223252"
      ],
      "metadata": {
        "id": "2cyDcOLsFxzm"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### PEG10\n",
        "PEG10 might be involved in oncogenesis by increasing the apoptotic resistance of the tumor cells.\n",
        "\n",
        "PEG10 protein could be a potential biomarker predicting early recurrence and recurrence-free survival in HCC patients after curative resection, even in those with normal serum α-fetoprotein levels.\n",
        "\n",
        "https://doi.org/10.4143/crt.2014.124"
      ],
      "metadata": {
        "id": "qE62aY8MGbep"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### AFP\n",
        "serum alpha-fetoprotein (AFP) was routinely employed as a tumor marker for screening, diagnosis, and treatment follow-up of hepatocellular carcinoma\n",
        "\n",
        "https://doi.org/10.3390/jcm8101736"
      ],
      "metadata": {
        "id": "Bj53KFciHKWQ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### MEP1A\n",
        "MEP1A contributes to tumor progression and predicts poor clinical outcome in human hepatocellular carcinoma.\n",
        "\n",
        "MEP1A is a novel prognostic predictor in HCC and plays an important role in the development and progression of HCC.\n",
        "\n",
        "https://doi.org/10.1002/hep.28397"
      ],
      "metadata": {
        "id": "w0QX65bzHcKO"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### S100P\n",
        "The calcium-binding protein S100P is expressed in a variety of human cancer cells and is important in cancer cell growth and invasion.\n",
        "\n",
        "https://doi.org/10.1371/journal.pone.0065501\n",
        "\n"
      ],
      "metadata": {
        "id": "T1K6bywoHqa-"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### GPC3 \n",
        "GPC3 promotes HCC growth and metastasis by activating the canonical Wnt and other signaling pathways.\n",
        "\n",
        "https://doi.org/10.2147/JHC.S116513"
      ],
      "metadata": {
        "id": "sXbdA8euIWZX"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Литературный анализ показал, что гены с высокой экспрессией в опухолевых образцах стимулируют прогрессирование, инвазию, рост и метастазирование гепатоцеллюлярной карциномы."
      ],
      "metadata": {
        "id": "CFtKpVITI6_3"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### CLEC4M \n",
        "CLEC4M overexpression inhibits progression and is associated with a favorable prognosis in hepatocellular carcinoma\n",
        "\n",
        "https://doi.org/10.3892/mmr.2020.11336"
      ],
      "metadata": {
        "id": "__OhFkcKI1Pq"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### FCN2\n",
        "Low level of FCN2 in HCCs is correlated with aggressive metastatic features, and would be a prognostic factor for overall disease-free survival of HCC patients.\n",
        "\n",
        "https://doi.org/10.1016/j.canlet.2016.05.007"
      ],
      "metadata": {
        "id": "9Itfhsc5LCt9"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### HAMP \n",
        "HAMP Downregulation Contributes to Aggressive Hepatocellular Carcinoma via Mechanism Mediated by Cyclin4-Dependent Kinase-1/STAT3 Pathway\n",
        "\n",
        "https://doi.org/10.3390/diagnostics9020048"
      ],
      "metadata": {
        "id": "7WlLl2oJJbR6"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### CLEC1B\n",
        "Low expression of CLEC1B can significantly promote the growth rate of HCC cells, shorten the tumor doubling time, and aggravate the poor prognosis of patients.\n",
        "\n",
        "https://doi.org/10.1186/s12885-022-10195-1"
      ],
      "metadata": {
        "id": "6my2bhzhL4vY"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Таким образом, некоторые из downregulated genes ингибируют прогрессирование гепатоцеллюлярной карциномы, а некоторые наоборот усиливают ее рост и метастазирование."
      ],
      "metadata": {
        "id": "MKt4qBzVL-xM"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "г) Проведите похожий анализ, только с поиском генов с разницей в эффективности трансляции (~ method + condition + method:condition)."
      ],
      "metadata": {
        "id": "fmtzy-BwtdZD"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "counts = pd.read_csv(\"HSE_RiboSeq_HT/01. RiboSeq_RNASeq_HCC_counts.tsv\", sep=\"\\t\")\n",
        "genes = list(counts[\"geneSymbol\"])\n",
        "counts = counts.fillna(value = 0)\n",
        "counts.index = counts['geneID']\n",
        "del counts[\"geneSymbol\"], counts[\"geneID\"]\n",
        "\n",
        "counts"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 554
        },
        "id": "J9HxDy_Z8Nzn",
        "outputId": "fe1ccbc6-7538-4fd7-d972-4ee2b522ca65"
      },
      "execution_count": 249,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    LC001-normal-RPF  LC001-tumor-RPF  LC001-normal-RNA  \\\n",
              "geneID                                                                    \n",
              "ENSG00000000003.14                 0                0               402   \n",
              "ENSG00000000005.5                  0                0                 0   \n",
              "ENSG00000000419.12               168              239                88   \n",
              "ENSG00000000457.13                65              121                60   \n",
              "ENSG00000000460.16                 8               43                18   \n",
              "...                              ...              ...               ...   \n",
              "ENSG00000282988.1                  0                0                 1   \n",
              "ENSG00000283013.1                  0                4                27   \n",
              "ENSG00000283039.1                  0                0                 0   \n",
              "ENSG00000283063.1                  0                9                 0   \n",
              "ENSG00000283071.1                  0                4                 0   \n",
              "\n",
              "                    LC001-tumor-RNA  LC033-normal-RPF  LC033-tumor-RPF  \\\n",
              "geneID                                                                   \n",
              "ENSG00000000003.14              873                 0                0   \n",
              "ENSG00000000005.5                 1                 0                0   \n",
              "ENSG00000000419.12              187               114              439   \n",
              "ENSG00000000457.13              106                36              163   \n",
              "ENSG00000000460.16               70                16               76   \n",
              "...                             ...               ...              ...   \n",
              "ENSG00000282988.1                39                 0                0   \n",
              "ENSG00000283013.1                 5                 0               32   \n",
              "ENSG00000283039.1                 0                 0                0   \n",
              "ENSG00000283063.1                 0                 0                0   \n",
              "ENSG00000283071.1                13                 0                0   \n",
              "\n",
              "                    LC033-normal-RNA  LC033-tumor-RNA  LC034-normal-RPF  \\\n",
              "geneID                                                                    \n",
              "ENSG00000000003.14               301             1627                 0   \n",
              "ENSG00000000005.5                  0                1                 0   \n",
              "ENSG00000000419.12                66              201               325   \n",
              "ENSG00000000457.13                70              156               130   \n",
              "ENSG00000000460.16                 4               63                44   \n",
              "...                              ...              ...               ...   \n",
              "ENSG00000282988.1                  0                5                 0   \n",
              "ENSG00000283013.1                 20               51                 0   \n",
              "ENSG00000283039.1                 10                0                 0   \n",
              "ENSG00000283063.1                  0                0                 0   \n",
              "ENSG00000283071.1                  0                0                 0   \n",
              "\n",
              "                    LC034-tumor-RPF  ...  LC507-normal-RNA  LC507-tumor-RNA  \\\n",
              "geneID                               ...                                      \n",
              "ENSG00000000003.14                0  ...               218              457   \n",
              "ENSG00000000005.5                 0  ...                 0                0   \n",
              "ENSG00000000419.12              117  ...                92              170   \n",
              "ENSG00000000457.13               76  ...               127              176   \n",
              "ENSG00000000460.16               14  ...               124              437   \n",
              "...                             ...  ...               ...              ...   \n",
              "ENSG00000282988.1                 0  ...                 0               31   \n",
              "ENSG00000283013.1                 6  ...                81               52   \n",
              "ENSG00000283039.1                 0  ...                 0                0   \n",
              "ENSG00000283063.1                 7  ...                 0                0   \n",
              "ENSG00000283071.1                 0  ...                 0                0   \n",
              "\n",
              "                    LC508-normal-RPF  LC508-tumor-RPF  LC508-normal-RNA  \\\n",
              "geneID                                                                    \n",
              "ENSG00000000003.14                 0                0               200   \n",
              "ENSG00000000005.5                  1                0                 0   \n",
              "ENSG00000000419.12               109              357                60   \n",
              "ENSG00000000457.13                67              176                55   \n",
              "ENSG00000000460.16                 7              167                34   \n",
              "...                              ...              ...               ...   \n",
              "ENSG00000282988.1                  0                6                 0   \n",
              "ENSG00000283013.1                  1                0                 9   \n",
              "ENSG00000283039.1                  0                0                 0   \n",
              "ENSG00000283063.1                  0                0                 0   \n",
              "ENSG00000283071.1                  0                0                 0   \n",
              "\n",
              "                    LC508-tumor-RNA  LC509-normal-RPF  LC509-tumor-RPF  \\\n",
              "geneID                                                                   \n",
              "ENSG00000000003.14              889                 0                0   \n",
              "ENSG00000000005.5                 0                 0                0   \n",
              "ENSG00000000419.12              244               141              173   \n",
              "ENSG00000000457.13              261                64              100   \n",
              "ENSG00000000460.16              201                 6               61   \n",
              "...                             ...               ...              ...   \n",
              "ENSG00000282988.1                62                 0                0   \n",
              "ENSG00000283013.1                42                 0               10   \n",
              "ENSG00000283039.1                 0                 0                0   \n",
              "ENSG00000283063.1                 0                 0                0   \n",
              "ENSG00000283071.1                 1                 0                0   \n",
              "\n",
              "                    LC509-normal-RNA  LC509-tumor-RNA  \n",
              "geneID                                                 \n",
              "ENSG00000000003.14               161            857.0  \n",
              "ENSG00000000005.5                  0              0.0  \n",
              "ENSG00000000419.12                56             83.0  \n",
              "ENSG00000000457.13                68            176.0  \n",
              "ENSG00000000460.16                 9             58.0  \n",
              "...                              ...              ...  \n",
              "ENSG00000282988.1                  1             17.0  \n",
              "ENSG00000283013.1                  3             40.0  \n",
              "ENSG00000283039.1                  0              0.0  \n",
              "ENSG00000283063.1                  0              0.0  \n",
              "ENSG00000283071.1                  1              2.0  \n",
              "\n",
              "[18945 rows x 40 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0b3ee82a-b7f7-4cc2-bf45-52fe0ff62f66\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>LC001-normal-RPF</th>\n",
              "      <th>LC001-tumor-RPF</th>\n",
              "      <th>LC001-normal-RNA</th>\n",
              "      <th>LC001-tumor-RNA</th>\n",
              "      <th>LC033-normal-RPF</th>\n",
              "      <th>LC033-tumor-RPF</th>\n",
              "      <th>LC033-normal-RNA</th>\n",
              "      <th>LC033-tumor-RNA</th>\n",
              "      <th>LC034-normal-RPF</th>\n",
              "      <th>LC034-tumor-RPF</th>\n",
              "      <th>...</th>\n",
              "      <th>LC507-normal-RNA</th>\n",
              "      <th>LC507-tumor-RNA</th>\n",
              "      <th>LC508-normal-RPF</th>\n",
              "      <th>LC508-tumor-RPF</th>\n",
              "      <th>LC508-normal-RNA</th>\n",
              "      <th>LC508-tumor-RNA</th>\n",
              "      <th>LC509-normal-RPF</th>\n",
              "      <th>LC509-tumor-RPF</th>\n",
              "      <th>LC509-normal-RNA</th>\n",
              "      <th>LC509-tumor-RNA</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>geneID</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>ENSG00000000003.14</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>402</td>\n",
              "      <td>873</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>301</td>\n",
              "      <td>1627</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>218</td>\n",
              "      <td>457</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>200</td>\n",
              "      <td>889</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>161</td>\n",
              "      <td>857.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000000005.5</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000000419.12</th>\n",
              "      <td>168</td>\n",
              "      <td>239</td>\n",
              "      <td>88</td>\n",
              "      <td>187</td>\n",
              "      <td>114</td>\n",
              "      <td>439</td>\n",
              "      <td>66</td>\n",
              "      <td>201</td>\n",
              "      <td>325</td>\n",
              "      <td>117</td>\n",
              "      <td>...</td>\n",
              "      <td>92</td>\n",
              "      <td>170</td>\n",
              "      <td>109</td>\n",
              "      <td>357</td>\n",
              "      <td>60</td>\n",
              "      <td>244</td>\n",
              "      <td>141</td>\n",
              "      <td>173</td>\n",
              "      <td>56</td>\n",
              "      <td>83.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000000457.13</th>\n",
              "      <td>65</td>\n",
              "      <td>121</td>\n",
              "      <td>60</td>\n",
              "      <td>106</td>\n",
              "      <td>36</td>\n",
              "      <td>163</td>\n",
              "      <td>70</td>\n",
              "      <td>156</td>\n",
              "      <td>130</td>\n",
              "      <td>76</td>\n",
              "      <td>...</td>\n",
              "      <td>127</td>\n",
              "      <td>176</td>\n",
              "      <td>67</td>\n",
              "      <td>176</td>\n",
              "      <td>55</td>\n",
              "      <td>261</td>\n",
              "      <td>64</td>\n",
              "      <td>100</td>\n",
              "      <td>68</td>\n",
              "      <td>176.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000000460.16</th>\n",
              "      <td>8</td>\n",
              "      <td>43</td>\n",
              "      <td>18</td>\n",
              "      <td>70</td>\n",
              "      <td>16</td>\n",
              "      <td>76</td>\n",
              "      <td>4</td>\n",
              "      <td>63</td>\n",
              "      <td>44</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>124</td>\n",
              "      <td>437</td>\n",
              "      <td>7</td>\n",
              "      <td>167</td>\n",
              "      <td>34</td>\n",
              "      <td>201</td>\n",
              "      <td>6</td>\n",
              "      <td>61</td>\n",
              "      <td>9</td>\n",
              "      <td>58.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000282988.1</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>39</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>31</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>62</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>17.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000283013.1</th>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>27</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>32</td>\n",
              "      <td>20</td>\n",
              "      <td>51</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>...</td>\n",
              "      <td>81</td>\n",
              "      <td>52</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>42</td>\n",
              "      <td>0</td>\n",
              "      <td>10</td>\n",
              "      <td>3</td>\n",
              "      <td>40.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000283039.1</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000283063.1</th>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000283071.1</th>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>13</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>18945 rows × 40 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0b3ee82a-b7f7-4cc2-bf45-52fe0ff62f66')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-0b3ee82a-b7f7-4cc2-bf45-52fe0ff62f66 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-0b3ee82a-b7f7-4cc2-bf45-52fe0ff62f66');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 249
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Создаем метадату"
      ],
      "metadata": {
        "id": "KZcwUcThtx9H"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "meta_counts = pd.DataFrame({\n",
        "    \"Tissue\": ([\"Normal\",\"Tumor\"])*20,\n",
        "    \"Seq\": ([\"RPF\"]*2 + ['RNA']*2)*10,\n",
        "    }, index=counts.columns)\n",
        "meta_counts"
      ],
      "metadata": {
        "id": "TRdFwaJ3tx9H",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "7a9cbfd7-bdbc-476b-ce37-e4e150d37750"
      },
      "execution_count": 250,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                  Tissue  Seq\n",
              "LC001-normal-RPF  Normal  RPF\n",
              "LC001-tumor-RPF    Tumor  RPF\n",
              "LC001-normal-RNA  Normal  RNA\n",
              "LC001-tumor-RNA    Tumor  RNA\n",
              "LC033-normal-RPF  Normal  RPF\n",
              "LC033-tumor-RPF    Tumor  RPF\n",
              "LC033-normal-RNA  Normal  RNA\n",
              "LC033-tumor-RNA    Tumor  RNA\n",
              "LC034-normal-RPF  Normal  RPF\n",
              "LC034-tumor-RPF    Tumor  RPF\n",
              "LC034-normal-RNA  Normal  RNA\n",
              "LC034-tumor-RNA    Tumor  RNA\n",
              "LC501-normal-RPF  Normal  RPF\n",
              "LC501-tumor-RPF    Tumor  RPF\n",
              "LC501-normal-RNA  Normal  RNA\n",
              "LC501-tumor-RNA    Tumor  RNA\n",
              "LC502-normal-RPF  Normal  RPF\n",
              "LC502-tumor-RPF    Tumor  RPF\n",
              "LC502-normal-RNA  Normal  RNA\n",
              "LC502-tumor-RNA    Tumor  RNA\n",
              "LC505-normal-RPF  Normal  RPF\n",
              "LC505-tumor-RPF    Tumor  RPF\n",
              "LC505-normal-RNA  Normal  RNA\n",
              "LC505-tumor-RNA    Tumor  RNA\n",
              "LC506-normal-RPF  Normal  RPF\n",
              "LC506-tumor-RPF    Tumor  RPF\n",
              "LC506-normal-RNA  Normal  RNA\n",
              "LC506-tumor-RNA    Tumor  RNA\n",
              "LC507-normal-RPF  Normal  RPF\n",
              "LC507-tumor-RPF    Tumor  RPF\n",
              "LC507-normal-RNA  Normal  RNA\n",
              "LC507-tumor-RNA    Tumor  RNA\n",
              "LC508-normal-RPF  Normal  RPF\n",
              "LC508-tumor-RPF    Tumor  RPF\n",
              "LC508-normal-RNA  Normal  RNA\n",
              "LC508-tumor-RNA    Tumor  RNA\n",
              "LC509-normal-RPF  Normal  RPF\n",
              "LC509-tumor-RPF    Tumor  RPF\n",
              "LC509-normal-RNA  Normal  RNA\n",
              "LC509-tumor-RNA    Tumor  RNA"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4f42fa71-9832-4466-9927-2af10614dd09\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Tissue</th>\n",
              "      <th>Seq</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>LC001-normal-RPF</th>\n",
              "      <td>Normal</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC001-tumor-RPF</th>\n",
              "      <td>Tumor</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC001-normal-RNA</th>\n",
              "      <td>Normal</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC001-tumor-RNA</th>\n",
              "      <td>Tumor</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC033-normal-RPF</th>\n",
              "      <td>Normal</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC033-tumor-RPF</th>\n",
              "      <td>Tumor</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC033-normal-RNA</th>\n",
              "      <td>Normal</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC033-tumor-RNA</th>\n",
              "      <td>Tumor</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC034-normal-RPF</th>\n",
              "      <td>Normal</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC034-tumor-RPF</th>\n",
              "      <td>Tumor</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC034-normal-RNA</th>\n",
              "      <td>Normal</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC034-tumor-RNA</th>\n",
              "      <td>Tumor</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC501-normal-RPF</th>\n",
              "      <td>Normal</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC501-tumor-RPF</th>\n",
              "      <td>Tumor</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC501-normal-RNA</th>\n",
              "      <td>Normal</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC501-tumor-RNA</th>\n",
              "      <td>Tumor</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC502-normal-RPF</th>\n",
              "      <td>Normal</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC502-tumor-RPF</th>\n",
              "      <td>Tumor</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC502-normal-RNA</th>\n",
              "      <td>Normal</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC502-tumor-RNA</th>\n",
              "      <td>Tumor</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC505-normal-RPF</th>\n",
              "      <td>Normal</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC505-tumor-RPF</th>\n",
              "      <td>Tumor</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC505-normal-RNA</th>\n",
              "      <td>Normal</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC505-tumor-RNA</th>\n",
              "      <td>Tumor</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC506-normal-RPF</th>\n",
              "      <td>Normal</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC506-tumor-RPF</th>\n",
              "      <td>Tumor</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC506-normal-RNA</th>\n",
              "      <td>Normal</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC506-tumor-RNA</th>\n",
              "      <td>Tumor</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC507-normal-RPF</th>\n",
              "      <td>Normal</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC507-tumor-RPF</th>\n",
              "      <td>Tumor</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC507-normal-RNA</th>\n",
              "      <td>Normal</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC507-tumor-RNA</th>\n",
              "      <td>Tumor</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC508-normal-RPF</th>\n",
              "      <td>Normal</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC508-tumor-RPF</th>\n",
              "      <td>Tumor</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC508-normal-RNA</th>\n",
              "      <td>Normal</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC508-tumor-RNA</th>\n",
              "      <td>Tumor</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC509-normal-RPF</th>\n",
              "      <td>Normal</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC509-tumor-RPF</th>\n",
              "      <td>Tumor</td>\n",
              "      <td>RPF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC509-normal-RNA</th>\n",
              "      <td>Normal</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LC509-tumor-RNA</th>\n",
              "      <td>Tumor</td>\n",
              "      <td>RNA</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4f42fa71-9832-4466-9927-2af10614dd09')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-4f42fa71-9832-4466-9927-2af10614dd09 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-4f42fa71-9832-4466-9927-2af10614dd09');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 250
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Вычислим коэффициенты нормализации"
      ],
      "metadata": {
        "id": "TsRr3GI3tx9H"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "with localconverter(default_converter + pandas2ri.converter):\n",
        "  dds = DESeq2.DESeqDataSetFromMatrix(countData=counts, colData=meta_counts, design=Formula(\"~ Tissue + Seq + Tissue:Seq\"))\n",
        "  dds = DESeq2.DESeq(dds)"
      ],
      "metadata": {
        "id": "QilWjwA3tx9H",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e3f82f3b-1793-4763-be47-5742f779d0fb"
      },
      "execution_count": 251,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: converting counts to integer mode\n",
            "\n",
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: estimating size factors\n",
            "\n",
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: estimating dispersions\n",
            "\n",
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: gene-wise dispersion estimates\n",
            "\n",
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: mean-dispersion relationship\n",
            "\n",
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: final dispersion estimates\n",
            "\n",
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: fitting model and testing\n",
            "\n",
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: -- replacing outliers and refitting for 783 genes\n",
            "-- DESeq argument 'minReplicatesForReplace' = 7 \n",
            "-- original counts are preserved in counts(dds)\n",
            "\n",
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: estimating dispersions\n",
            "\n",
            "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: fitting model and testing\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "with localconverter(default_converter + pandas2ri.converter):\n",
        "  res_counts = DESeq2.results(dds, name=\"TissueTumor.SeqRPF\")\n",
        "  res_counts = pd.DataFrame(base.as_data_frame(res_counts))\n",
        "  res_counts.index = counts.index\n",
        "  res_counts = res_counts.sort_values(\"padj\")\n",
        "\n",
        "res_counts"
      ],
      "metadata": {
        "id": "9_ojIzeptx9H",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "outputId": "447ff006-37ef-469a-fdf8-4f501fd0c7c9"
      },
      "execution_count": 266,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                        baseMean  log2FoldChange     lfcSE      stat  \\\n",
              "geneID                                                                 \n",
              "ENSG00000172869.14    292.358919       -1.242948  0.250249 -4.966847   \n",
              "ENSG00000117143.13    524.937253       -1.852040  0.372283 -4.974812   \n",
              "ENSG00000142002.16  19998.727349        2.699844  0.557605  4.841855   \n",
              "ENSG00000164045.11     28.822459        3.896988  0.820834  4.747594   \n",
              "ENSG00000196872.10      9.758817        3.937915  0.884599  4.451639   \n",
              "...                          ...             ...       ...       ...   \n",
              "ENSG00000282419.2       0.101533        0.913406  5.912157  0.154496   \n",
              "ENSG00000282499.1       0.171128       -0.872222  5.910292 -0.147577   \n",
              "ENSG00000282827.1       0.328393        0.843831  4.700813  0.179508   \n",
              "ENSG00000282872.1       0.076019       -0.853429  5.912967 -0.144332   \n",
              "ENSG00000283039.1       0.253832        2.284850  5.894346  0.387634   \n",
              "\n",
              "                          pvalue      padj  \n",
              "geneID                                      \n",
              "ENSG00000172869.14  6.805028e-07  0.005695  \n",
              "ENSG00000117143.13  6.531085e-07  0.005695  \n",
              "ENSG00000142002.16  1.286329e-06  0.007176  \n",
              "ENSG00000164045.11  2.058507e-06  0.008613  \n",
              "ENSG00000196872.10  8.521747e-06  0.028526  \n",
              "...                          ...       ...  \n",
              "ENSG00000282419.2   8.772185e-01       NaN  \n",
              "ENSG00000282499.1   8.826768e-01       NaN  \n",
              "ENSG00000282827.1   8.575392e-01       NaN  \n",
              "ENSG00000282872.1   8.852385e-01       NaN  \n",
              "ENSG00000283039.1   6.982868e-01       NaN  \n",
              "\n",
              "[18945 rows x 6 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0c253b0a-2dd5-4b8a-af12-8e6047c1bef7\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>baseMean</th>\n",
              "      <th>log2FoldChange</th>\n",
              "      <th>lfcSE</th>\n",
              "      <th>stat</th>\n",
              "      <th>pvalue</th>\n",
              "      <th>padj</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>geneID</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>ENSG00000172869.14</th>\n",
              "      <td>292.358919</td>\n",
              "      <td>-1.242948</td>\n",
              "      <td>0.250249</td>\n",
              "      <td>-4.966847</td>\n",
              "      <td>6.805028e-07</td>\n",
              "      <td>0.005695</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000117143.13</th>\n",
              "      <td>524.937253</td>\n",
              "      <td>-1.852040</td>\n",
              "      <td>0.372283</td>\n",
              "      <td>-4.974812</td>\n",
              "      <td>6.531085e-07</td>\n",
              "      <td>0.005695</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000142002.16</th>\n",
              "      <td>19998.727349</td>\n",
              "      <td>2.699844</td>\n",
              "      <td>0.557605</td>\n",
              "      <td>4.841855</td>\n",
              "      <td>1.286329e-06</td>\n",
              "      <td>0.007176</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000164045.11</th>\n",
              "      <td>28.822459</td>\n",
              "      <td>3.896988</td>\n",
              "      <td>0.820834</td>\n",
              "      <td>4.747594</td>\n",
              "      <td>2.058507e-06</td>\n",
              "      <td>0.008613</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000196872.10</th>\n",
              "      <td>9.758817</td>\n",
              "      <td>3.937915</td>\n",
              "      <td>0.884599</td>\n",
              "      <td>4.451639</td>\n",
              "      <td>8.521747e-06</td>\n",
              "      <td>0.028526</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000282419.2</th>\n",
              "      <td>0.101533</td>\n",
              "      <td>0.913406</td>\n",
              "      <td>5.912157</td>\n",
              "      <td>0.154496</td>\n",
              "      <td>8.772185e-01</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000282499.1</th>\n",
              "      <td>0.171128</td>\n",
              "      <td>-0.872222</td>\n",
              "      <td>5.910292</td>\n",
              "      <td>-0.147577</td>\n",
              "      <td>8.826768e-01</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000282827.1</th>\n",
              "      <td>0.328393</td>\n",
              "      <td>0.843831</td>\n",
              "      <td>4.700813</td>\n",
              "      <td>0.179508</td>\n",
              "      <td>8.575392e-01</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000282872.1</th>\n",
              "      <td>0.076019</td>\n",
              "      <td>-0.853429</td>\n",
              "      <td>5.912967</td>\n",
              "      <td>-0.144332</td>\n",
              "      <td>8.852385e-01</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000283039.1</th>\n",
              "      <td>0.253832</td>\n",
              "      <td>2.284850</td>\n",
              "      <td>5.894346</td>\n",
              "      <td>0.387634</td>\n",
              "      <td>6.982868e-01</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>18945 rows × 6 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0c253b0a-2dd5-4b8a-af12-8e6047c1bef7')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-0c253b0a-2dd5-4b8a-af12-8e6047c1bef7 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-0c253b0a-2dd5-4b8a-af12-8e6047c1bef7');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 266
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Построим volcano plot"
      ],
      "metadata": {
        "id": "3zsOJv6fPMAz"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "p_tr = 0.05\n",
        "\n",
        "fig, ax = plt.subplots(figsize=(5, 5), dpi=150)\n",
        "xlim = max(-min(res_counts.log2FoldChange), (max(res_counts.log2FoldChange))) + 0.5\n",
        "\n",
        "sns.scatterplot(\n",
        "    x=res_counts.log2FoldChange,\n",
        "    y=-np.log10(res_counts.padj),\n",
        "    ax=ax,\n",
        "    s=3,\n",
        "    linewidth=0,\n",
        ")\n",
        "\n",
        "ax.plot(\n",
        "    [-xlim, xlim],\n",
        "    [-np.log10(p_tr), -np.log10(p_tr)],\n",
        "    color=\"red\",\n",
        ")\n",
        "\n",
        "sns.scatterplot(\n",
        "    x=res_counts[res_counts.padj < p_tr].log2FoldChange,\n",
        "    y=-np.log10(res_counts[res_counts.padj < p_tr].padj),\n",
        "    ax=ax,\n",
        "    s=5,\n",
        "    linewidth=0,\n",
        "    color=\"red\",\n",
        ")\n",
        "\n",
        "ax.grid(alpha=0.3)\n",
        "\n",
        "ax.set_xlim(-xlim, xlim)\n",
        "ax.set_xlabel(\"log$_2$FoldChange\")\n",
        "ax.set_ylabel(\"log$_{10}$FDR\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 758
        },
        "id": "ar0ZrugWNIOV",
        "outputId": "cd734158-caf1-4710-96f9-687fd1de1782"
      },
      "execution_count": 253,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/pandas/core/arraylike.py:364: RuntimeWarning: invalid value encountered in log10\n",
            "  result = getattr(ufunc, method)(*inputs, **kwargs)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'log$_{10}$FDR')"
            ]
          },
          "metadata": {},
          "execution_count": 253
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 750x750 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Построим диаграму Венна и посмотрим на пересечение дифференциально экспрессированных генов с разницей в эффективности трансляции c генами RNA-seq и генами Ribo-seq"
      ],
      "metadata": {
        "id": "p2_blMxaT06C"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Отберем  значимо (padj < 0.05) дифференциально экспрессированные гены"
      ],
      "metadata": {
        "id": "rsnyMIuZS3Kn"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "counts_dif = res_counts.loc[res_counts[\"padj\"] < 0.05]\n",
        "\n",
        "print(len(counts_dif))\n",
        "counts_dif"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 631
        },
        "outputId": "3de39898-818c-4fc7-ca12-d10e2a8f9a6b",
        "id": "VPk-MJZiS3Ko"
      },
      "execution_count": 264,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "17\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                        baseMean  log2FoldChange     lfcSE      stat  \\\n",
              "geneID                                                                 \n",
              "ENSG00000172869.14    292.358919       -1.242948  0.250249 -4.966847   \n",
              "ENSG00000117143.13    524.937253       -1.852040  0.372283 -4.974812   \n",
              "ENSG00000142002.16  19998.727349        2.699844  0.557605  4.841855   \n",
              "ENSG00000164045.11     28.822459        3.896988  0.820834  4.747594   \n",
              "ENSG00000196872.10      9.758817        3.937915  0.884599  4.451639   \n",
              "ENSG00000185236.11    332.918811        1.075358  0.261548  4.111511   \n",
              "ENSG00000138035.14    133.578122       -1.285736  0.298884 -4.301787   \n",
              "ENSG00000109705.7       5.226597        5.505710  1.295173  4.250944   \n",
              "ENSG00000023516.8     340.262495       -1.205712  0.285576 -4.222027   \n",
              "ENSG00000184434.7       7.684755       -5.908371  1.408787 -4.193943   \n",
              "ENSG00000179152.19    142.354628       -1.710500  0.413226 -4.139377   \n",
              "ENSG00000152990.13    383.500667       -1.831565  0.428650 -4.272871   \n",
              "ENSG00000105464.3      11.360857        5.129686  1.251194  4.099832   \n",
              "ENSG00000117395.10    136.350996        1.402654  0.341649  4.105537   \n",
              "ENSG00000160949.16     33.954890        2.467563  0.592995  4.161186   \n",
              "ENSG00000176749.8       9.197213        3.934618  0.947444  4.152876   \n",
              "ENSG00000196313.11     55.592229        2.109257  0.519393  4.061006   \n",
              "\n",
              "                          pvalue      padj  \n",
              "geneID                                      \n",
              "ENSG00000172869.14  6.805028e-07  0.005695  \n",
              "ENSG00000117143.13  6.531085e-07  0.005695  \n",
              "ENSG00000142002.16  1.286329e-06  0.007176  \n",
              "ENSG00000164045.11  2.058507e-06  0.008613  \n",
              "ENSG00000196872.10  8.521747e-06  0.028526  \n",
              "ENSG00000185236.11  3.930785e-05  0.043249  \n",
              "ENSG00000138035.14  1.694259e-05  0.043249  \n",
              "ENSG00000109705.7   2.128714e-05  0.043249  \n",
              "ENSG00000023516.8   2.421147e-05  0.043249  \n",
              "ENSG00000184434.7   2.741465e-05  0.043249  \n",
              "ENSG00000179152.19  3.482503e-05  0.043249  \n",
              "ENSG00000152990.13  1.929719e-05  0.043249  \n",
              "ENSG00000105464.3   4.134493e-05  0.043249  \n",
              "ENSG00000117395.10  4.033772e-05  0.043249  \n",
              "ENSG00000160949.16  3.165995e-05  0.043249  \n",
              "ENSG00000176749.8   3.283228e-05  0.043249  \n",
              "ENSG00000196313.11  4.886179e-05  0.048106  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d985a92c-0b3e-4852-a87d-d24709a67aa5\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>baseMean</th>\n",
              "      <th>log2FoldChange</th>\n",
              "      <th>lfcSE</th>\n",
              "      <th>stat</th>\n",
              "      <th>pvalue</th>\n",
              "      <th>padj</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>geneID</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>ENSG00000172869.14</th>\n",
              "      <td>292.358919</td>\n",
              "      <td>-1.242948</td>\n",
              "      <td>0.250249</td>\n",
              "      <td>-4.966847</td>\n",
              "      <td>6.805028e-07</td>\n",
              "      <td>0.005695</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000117143.13</th>\n",
              "      <td>524.937253</td>\n",
              "      <td>-1.852040</td>\n",
              "      <td>0.372283</td>\n",
              "      <td>-4.974812</td>\n",
              "      <td>6.531085e-07</td>\n",
              "      <td>0.005695</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000142002.16</th>\n",
              "      <td>19998.727349</td>\n",
              "      <td>2.699844</td>\n",
              "      <td>0.557605</td>\n",
              "      <td>4.841855</td>\n",
              "      <td>1.286329e-06</td>\n",
              "      <td>0.007176</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000164045.11</th>\n",
              "      <td>28.822459</td>\n",
              "      <td>3.896988</td>\n",
              "      <td>0.820834</td>\n",
              "      <td>4.747594</td>\n",
              "      <td>2.058507e-06</td>\n",
              "      <td>0.008613</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000196872.10</th>\n",
              "      <td>9.758817</td>\n",
              "      <td>3.937915</td>\n",
              "      <td>0.884599</td>\n",
              "      <td>4.451639</td>\n",
              "      <td>8.521747e-06</td>\n",
              "      <td>0.028526</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000185236.11</th>\n",
              "      <td>332.918811</td>\n",
              "      <td>1.075358</td>\n",
              "      <td>0.261548</td>\n",
              "      <td>4.111511</td>\n",
              "      <td>3.930785e-05</td>\n",
              "      <td>0.043249</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000138035.14</th>\n",
              "      <td>133.578122</td>\n",
              "      <td>-1.285736</td>\n",
              "      <td>0.298884</td>\n",
              "      <td>-4.301787</td>\n",
              "      <td>1.694259e-05</td>\n",
              "      <td>0.043249</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000109705.7</th>\n",
              "      <td>5.226597</td>\n",
              "      <td>5.505710</td>\n",
              "      <td>1.295173</td>\n",
              "      <td>4.250944</td>\n",
              "      <td>2.128714e-05</td>\n",
              "      <td>0.043249</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000023516.8</th>\n",
              "      <td>340.262495</td>\n",
              "      <td>-1.205712</td>\n",
              "      <td>0.285576</td>\n",
              "      <td>-4.222027</td>\n",
              "      <td>2.421147e-05</td>\n",
              "      <td>0.043249</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000184434.7</th>\n",
              "      <td>7.684755</td>\n",
              "      <td>-5.908371</td>\n",
              "      <td>1.408787</td>\n",
              "      <td>-4.193943</td>\n",
              "      <td>2.741465e-05</td>\n",
              "      <td>0.043249</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000179152.19</th>\n",
              "      <td>142.354628</td>\n",
              "      <td>-1.710500</td>\n",
              "      <td>0.413226</td>\n",
              "      <td>-4.139377</td>\n",
              "      <td>3.482503e-05</td>\n",
              "      <td>0.043249</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000152990.13</th>\n",
              "      <td>383.500667</td>\n",
              "      <td>-1.831565</td>\n",
              "      <td>0.428650</td>\n",
              "      <td>-4.272871</td>\n",
              "      <td>1.929719e-05</td>\n",
              "      <td>0.043249</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000105464.3</th>\n",
              "      <td>11.360857</td>\n",
              "      <td>5.129686</td>\n",
              "      <td>1.251194</td>\n",
              "      <td>4.099832</td>\n",
              "      <td>4.134493e-05</td>\n",
              "      <td>0.043249</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000117395.10</th>\n",
              "      <td>136.350996</td>\n",
              "      <td>1.402654</td>\n",
              "      <td>0.341649</td>\n",
              "      <td>4.105537</td>\n",
              "      <td>4.033772e-05</td>\n",
              "      <td>0.043249</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000160949.16</th>\n",
              "      <td>33.954890</td>\n",
              "      <td>2.467563</td>\n",
              "      <td>0.592995</td>\n",
              "      <td>4.161186</td>\n",
              "      <td>3.165995e-05</td>\n",
              "      <td>0.043249</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000176749.8</th>\n",
              "      <td>9.197213</td>\n",
              "      <td>3.934618</td>\n",
              "      <td>0.947444</td>\n",
              "      <td>4.152876</td>\n",
              "      <td>3.283228e-05</td>\n",
              "      <td>0.043249</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000196313.11</th>\n",
              "      <td>55.592229</td>\n",
              "      <td>2.109257</td>\n",
              "      <td>0.519393</td>\n",
              "      <td>4.061006</td>\n",
              "      <td>4.886179e-05</td>\n",
              "      <td>0.048106</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d985a92c-0b3e-4852-a87d-d24709a67aa5')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d985a92c-0b3e-4852-a87d-d24709a67aa5 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d985a92c-0b3e-4852-a87d-d24709a67aa5');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 264
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Сделаем список из  значимо (padj < 0.05) дифференциально экспрессированных генов"
      ],
      "metadata": {
        "id": "E0spliB7S3Ko"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from matplotlib_venn import venn3\n",
        "genes_counts_dif = counts_dif.index\n",
        "genes_counts = list(genes_counts_dif)\n",
        "\n",
        "set1 = set(genes_counts)\n",
        "set2 = set(genes_RNA)\n",
        "set3 = set(genes_RPF)\n",
        "\n",
        "plt.figure(figsize=(10,10))\n",
        "plt.rcParams.update({'font.size': 16})\n",
        "venn3(subsets = (set1, set2, set3), set_labels = ('genes with a difference in translation efficiency', \n",
        "                                                  'DGE in RNA-seq', 'DGE in Ribo-seq'), alpha=0.4, \n",
        "                                                  set_colors=('r', 'b', 'y'))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 592
        },
        "outputId": "3b130304-9cd0-4633-ab60-8a632637e383",
        "id": "DXWXJrq5S3Ko"
      },
      "execution_count": 260,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib_venn._common.VennDiagram at 0x7fe421fa1a60>"
            ]
          },
          "metadata": {},
          "execution_count": 260
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x720 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Таким образом, значимо (padj < 0.05) дифференциально экспрессированных генов с разницей в эффективности трансляции 17. В пересечении со  значимо (padj < 0.05) дифференциально экспрессированными генами из RNA-seq и Ribo-seq обнаружилось всего 4 гена. В пересечении со  значимо (padj < 0.05) дифференциально экспрессированными генами из RNA-seq - 5 генов. В пересечении со  значимо (padj < 0.05) дифференциально экспрессированными генами из Ribo-seq - 7 генов. Только 1 ген вне пересечения с генами RNA-seq и Ribo-seq. "
      ],
      "metadata": {
        "id": "nkzltyytS3Ko"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Отсортируем полученные гены по log2FoldChange и выберем из них те, экспрессия которых по модулю > 1.8"
      ],
      "metadata": {
        "id": "hJzPBTMxS3Ko"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "counts_dif = counts_dif.sort_values(\"log2FoldChange\", ascending = False)\n",
        "counts_dif = counts_dif.loc[counts_dif[\"log2FoldChange\"].abs() >= 1.8]\n",
        "counts_dif"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 426
        },
        "id": "oZq6Kz4MS3Ko",
        "outputId": "1c9fd38c-f32a-4415-e8e9-44befa1389b2"
      },
      "execution_count": 268,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                        baseMean  log2FoldChange     lfcSE      stat  \\\n",
              "geneID                                                                 \n",
              "ENSG00000109705.7       5.226597        5.505710  1.295173  4.250944   \n",
              "ENSG00000105464.3      11.360857        5.129686  1.251194  4.099832   \n",
              "ENSG00000196872.10      9.758817        3.937915  0.884599  4.451639   \n",
              "ENSG00000176749.8       9.197213        3.934618  0.947444  4.152876   \n",
              "ENSG00000164045.11     28.822459        3.896988  0.820834  4.747594   \n",
              "ENSG00000142002.16  19998.727349        2.699844  0.557605  4.841855   \n",
              "ENSG00000160949.16     33.954890        2.467563  0.592995  4.161186   \n",
              "ENSG00000196313.11     55.592229        2.109257  0.519393  4.061006   \n",
              "ENSG00000152990.13    383.500667       -1.831565  0.428650 -4.272871   \n",
              "ENSG00000117143.13    524.937253       -1.852040  0.372283 -4.974812   \n",
              "ENSG00000184434.7       7.684755       -5.908371  1.408787 -4.193943   \n",
              "\n",
              "                          pvalue      padj  \n",
              "geneID                                      \n",
              "ENSG00000109705.7   2.128714e-05  0.043249  \n",
              "ENSG00000105464.3   4.134493e-05  0.043249  \n",
              "ENSG00000196872.10  8.521747e-06  0.028526  \n",
              "ENSG00000176749.8   3.283228e-05  0.043249  \n",
              "ENSG00000164045.11  2.058507e-06  0.008613  \n",
              "ENSG00000142002.16  1.286329e-06  0.007176  \n",
              "ENSG00000160949.16  3.165995e-05  0.043249  \n",
              "ENSG00000196313.11  4.886179e-05  0.048106  \n",
              "ENSG00000152990.13  1.929719e-05  0.043249  \n",
              "ENSG00000117143.13  6.531085e-07  0.005695  \n",
              "ENSG00000184434.7   2.741465e-05  0.043249  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7dcfb3c6-2eee-4c1e-91df-a47dd1eacf55\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>baseMean</th>\n",
              "      <th>log2FoldChange</th>\n",
              "      <th>lfcSE</th>\n",
              "      <th>stat</th>\n",
              "      <th>pvalue</th>\n",
              "      <th>padj</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>geneID</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>ENSG00000109705.7</th>\n",
              "      <td>5.226597</td>\n",
              "      <td>5.505710</td>\n",
              "      <td>1.295173</td>\n",
              "      <td>4.250944</td>\n",
              "      <td>2.128714e-05</td>\n",
              "      <td>0.043249</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000105464.3</th>\n",
              "      <td>11.360857</td>\n",
              "      <td>5.129686</td>\n",
              "      <td>1.251194</td>\n",
              "      <td>4.099832</td>\n",
              "      <td>4.134493e-05</td>\n",
              "      <td>0.043249</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000196872.10</th>\n",
              "      <td>9.758817</td>\n",
              "      <td>3.937915</td>\n",
              "      <td>0.884599</td>\n",
              "      <td>4.451639</td>\n",
              "      <td>8.521747e-06</td>\n",
              "      <td>0.028526</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000176749.8</th>\n",
              "      <td>9.197213</td>\n",
              "      <td>3.934618</td>\n",
              "      <td>0.947444</td>\n",
              "      <td>4.152876</td>\n",
              "      <td>3.283228e-05</td>\n",
              "      <td>0.043249</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000164045.11</th>\n",
              "      <td>28.822459</td>\n",
              "      <td>3.896988</td>\n",
              "      <td>0.820834</td>\n",
              "      <td>4.747594</td>\n",
              "      <td>2.058507e-06</td>\n",
              "      <td>0.008613</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000142002.16</th>\n",
              "      <td>19998.727349</td>\n",
              "      <td>2.699844</td>\n",
              "      <td>0.557605</td>\n",
              "      <td>4.841855</td>\n",
              "      <td>1.286329e-06</td>\n",
              "      <td>0.007176</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000160949.16</th>\n",
              "      <td>33.954890</td>\n",
              "      <td>2.467563</td>\n",
              "      <td>0.592995</td>\n",
              "      <td>4.161186</td>\n",
              "      <td>3.165995e-05</td>\n",
              "      <td>0.043249</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000196313.11</th>\n",
              "      <td>55.592229</td>\n",
              "      <td>2.109257</td>\n",
              "      <td>0.519393</td>\n",
              "      <td>4.061006</td>\n",
              "      <td>4.886179e-05</td>\n",
              "      <td>0.048106</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000152990.13</th>\n",
              "      <td>383.500667</td>\n",
              "      <td>-1.831565</td>\n",
              "      <td>0.428650</td>\n",
              "      <td>-4.272871</td>\n",
              "      <td>1.929719e-05</td>\n",
              "      <td>0.043249</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000117143.13</th>\n",
              "      <td>524.937253</td>\n",
              "      <td>-1.852040</td>\n",
              "      <td>0.372283</td>\n",
              "      <td>-4.974812</td>\n",
              "      <td>6.531085e-07</td>\n",
              "      <td>0.005695</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000184434.7</th>\n",
              "      <td>7.684755</td>\n",
              "      <td>-5.908371</td>\n",
              "      <td>1.408787</td>\n",
              "      <td>-4.193943</td>\n",
              "      <td>2.741465e-05</td>\n",
              "      <td>0.043249</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7dcfb3c6-2eee-4c1e-91df-a47dd1eacf55')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7dcfb3c6-2eee-4c1e-91df-a47dd1eacf55 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7dcfb3c6-2eee-4c1e-91df-a47dd1eacf55');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 268
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Переведем ensembl в GeneSymbol"
      ],
      "metadata": {
        "id": "DyUAHxXwS3Ko"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "counts_dif['ensembl'] = counts_dif.index\n",
        "\n",
        "counts['GeneSymbol'] = genes\n",
        "counts['ensembl'] = RNA.index\n",
        "\n",
        "counts_DGE = counts[counts['ensembl'].isin(counts_dif['ensembl'])]\n",
        "counts_DGE = counts_DGE['GeneSymbol']\n",
        "\n",
        "counts_dif['GeneSymbol'] = counts_DGE\n",
        "del counts_dif['ensembl']\n",
        "counts_dif"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 426
        },
        "id": "jyowx97xS3Ko",
        "outputId": "9fbea11d-9354-46a3-cedd-2130e113da7a"
      },
      "execution_count": 269,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                        baseMean  log2FoldChange     lfcSE      stat  \\\n",
              "geneID                                                                 \n",
              "ENSG00000109705.7       5.226597        5.505710  1.295173  4.250944   \n",
              "ENSG00000105464.3      11.360857        5.129686  1.251194  4.099832   \n",
              "ENSG00000196872.10      9.758817        3.937915  0.884599  4.451639   \n",
              "ENSG00000176749.8       9.197213        3.934618  0.947444  4.152876   \n",
              "ENSG00000164045.11     28.822459        3.896988  0.820834  4.747594   \n",
              "ENSG00000142002.16  19998.727349        2.699844  0.557605  4.841855   \n",
              "ENSG00000160949.16     33.954890        2.467563  0.592995  4.161186   \n",
              "ENSG00000196313.11     55.592229        2.109257  0.519393  4.061006   \n",
              "ENSG00000152990.13    383.500667       -1.831565  0.428650 -4.272871   \n",
              "ENSG00000117143.13    524.937253       -1.852040  0.372283 -4.974812   \n",
              "ENSG00000184434.7       7.684755       -5.908371  1.408787 -4.193943   \n",
              "\n",
              "                          pvalue      padj GeneSymbol  \n",
              "geneID                                                 \n",
              "ENSG00000109705.7   2.128714e-05  0.043249     NKX3-2  \n",
              "ENSG00000105464.3   4.134493e-05  0.043249     GRIN2D  \n",
              "ENSG00000196872.10  8.521747e-06  0.028526  KIAA1211L  \n",
              "ENSG00000176749.8   3.283228e-05  0.043249     CDK5R1  \n",
              "ENSG00000164045.11  2.058507e-06  0.008613     CDC25A  \n",
              "ENSG00000142002.16  1.286329e-06  0.007176       DPP9  \n",
              "ENSG00000160949.16  3.165995e-05  0.043249      TONSL  \n",
              "ENSG00000196313.11  4.886179e-05  0.048106     POM121  \n",
              "ENSG00000152990.13  1.929719e-05  0.043249     ADGRA3  \n",
              "ENSG00000117143.13  6.531085e-07  0.005695       UAP1  \n",
              "ENSG00000184434.7   2.741465e-05  0.043249     LRRC19  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-788126c8-024b-41fe-9eab-62b2ec6fa980\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>baseMean</th>\n",
              "      <th>log2FoldChange</th>\n",
              "      <th>lfcSE</th>\n",
              "      <th>stat</th>\n",
              "      <th>pvalue</th>\n",
              "      <th>padj</th>\n",
              "      <th>GeneSymbol</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>geneID</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>ENSG00000109705.7</th>\n",
              "      <td>5.226597</td>\n",
              "      <td>5.505710</td>\n",
              "      <td>1.295173</td>\n",
              "      <td>4.250944</td>\n",
              "      <td>2.128714e-05</td>\n",
              "      <td>0.043249</td>\n",
              "      <td>NKX3-2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000105464.3</th>\n",
              "      <td>11.360857</td>\n",
              "      <td>5.129686</td>\n",
              "      <td>1.251194</td>\n",
              "      <td>4.099832</td>\n",
              "      <td>4.134493e-05</td>\n",
              "      <td>0.043249</td>\n",
              "      <td>GRIN2D</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000196872.10</th>\n",
              "      <td>9.758817</td>\n",
              "      <td>3.937915</td>\n",
              "      <td>0.884599</td>\n",
              "      <td>4.451639</td>\n",
              "      <td>8.521747e-06</td>\n",
              "      <td>0.028526</td>\n",
              "      <td>KIAA1211L</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000176749.8</th>\n",
              "      <td>9.197213</td>\n",
              "      <td>3.934618</td>\n",
              "      <td>0.947444</td>\n",
              "      <td>4.152876</td>\n",
              "      <td>3.283228e-05</td>\n",
              "      <td>0.043249</td>\n",
              "      <td>CDK5R1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000164045.11</th>\n",
              "      <td>28.822459</td>\n",
              "      <td>3.896988</td>\n",
              "      <td>0.820834</td>\n",
              "      <td>4.747594</td>\n",
              "      <td>2.058507e-06</td>\n",
              "      <td>0.008613</td>\n",
              "      <td>CDC25A</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000142002.16</th>\n",
              "      <td>19998.727349</td>\n",
              "      <td>2.699844</td>\n",
              "      <td>0.557605</td>\n",
              "      <td>4.841855</td>\n",
              "      <td>1.286329e-06</td>\n",
              "      <td>0.007176</td>\n",
              "      <td>DPP9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000160949.16</th>\n",
              "      <td>33.954890</td>\n",
              "      <td>2.467563</td>\n",
              "      <td>0.592995</td>\n",
              "      <td>4.161186</td>\n",
              "      <td>3.165995e-05</td>\n",
              "      <td>0.043249</td>\n",
              "      <td>TONSL</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000196313.11</th>\n",
              "      <td>55.592229</td>\n",
              "      <td>2.109257</td>\n",
              "      <td>0.519393</td>\n",
              "      <td>4.061006</td>\n",
              "      <td>4.886179e-05</td>\n",
              "      <td>0.048106</td>\n",
              "      <td>POM121</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000152990.13</th>\n",
              "      <td>383.500667</td>\n",
              "      <td>-1.831565</td>\n",
              "      <td>0.428650</td>\n",
              "      <td>-4.272871</td>\n",
              "      <td>1.929719e-05</td>\n",
              "      <td>0.043249</td>\n",
              "      <td>ADGRA3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000117143.13</th>\n",
              "      <td>524.937253</td>\n",
              "      <td>-1.852040</td>\n",
              "      <td>0.372283</td>\n",
              "      <td>-4.974812</td>\n",
              "      <td>6.531085e-07</td>\n",
              "      <td>0.005695</td>\n",
              "      <td>UAP1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ENSG00000184434.7</th>\n",
              "      <td>7.684755</td>\n",
              "      <td>-5.908371</td>\n",
              "      <td>1.408787</td>\n",
              "      <td>-4.193943</td>\n",
              "      <td>2.741465e-05</td>\n",
              "      <td>0.043249</td>\n",
              "      <td>LRRC19</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-788126c8-024b-41fe-9eab-62b2ec6fa980')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-788126c8-024b-41fe-9eab-62b2ec6fa980 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-788126c8-024b-41fe-9eab-62b2ec6fa980');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 269
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Поищем в статьях информацию о важности некоторых найденных генов в прогрессировании/ингибировании гепатоцеллюлярной карциномы."
      ],
      "metadata": {
        "id": "jpWzc5FvS3Kp"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### GRIN2D\n",
        "GRIN2D was significantly correlated with LIHC clinical prognosis, clinical stage, immune infiltration, immune response, and vital signaling pathways.\n",
        "\n",
        "https://doi.org/10.3389/fonc.2022.877657"
      ],
      "metadata": {
        "id": "hVz3O6FUa_UL"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### CDK5R1\n",
        "Elevated CDK5R1 predicts worse prognosis in hepatocellular carcinoma\n",
        "\n",
        "https://doi.org/10.1042/BSR20203594"
      ],
      "metadata": {
        "id": "ELN_SfZbb3wb"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### CDC25A\n",
        "Overexpression of CDC25A in human hepatocellular carcinoma (HCC) tissue samples was associated with poor prognosis.\n",
        "\n",
        "CDC25A inhibition suppresses the growth and invasion of human hepatocellular carcinoma cells.\n",
        "\n",
        "https://doi.org/10.3892/ijmm.21.2.145\n",
        "\n"
      ],
      "metadata": {
        "id": "DAjR0ypCcVZO"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Литературный анализ показал, что гены с высокой экспрессией в опухолевых образцах обечпечивают плохой прогноз лечения  гепатоцеллюлярной карциномы. Также было показано, что подавление экспрессии CDC25A ингибирует рост и инвазию опухолевых клеток  гепатоцеллюлярной карциномы, из чего можно сделать предположение, что его высокая экспрессия обеспечивает обратное.\n",
        "\n",
        " "
      ],
      "metadata": {
        "id": "-5dRKAnwZDhb"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### LRRC19\n",
        "LRRC19 was showed for its prognostic value in Liver Hepatocellular Carcinoma (LIHC)\n",
        "\n",
        "https://doi.org/10.3390/genes11040440\n"
      ],
      "metadata": {
        "id": "JPici00xdjf6"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### UAP1L1\n",
        "UAP1L1 was significantly upregulated in hepatocellular carcinoma tissues and that a high level of UAP1L1 expression predicted a poor prognosis.\n",
        "\n",
        "https://doi.org/10.1038/s41388-018-0442-6"
      ],
      "metadata": {
        "id": "ymiL-ecHfAx5"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Downregulated genes в датасете было мало, однако в одном исследовании было показано, что высокий уровень экспрессии UAP1L1 в тканях  гепатоцеллюлярной карциномы предсказывает плохой прогноз рака, из чего можно сделать предположение, что низкий уровень экспрессии этого гена может благоприятно влиять на прозноз заболевания."
      ],
      "metadata": {
        "id": "CwdYtEdidiiC"
      }
    }
  ]
}